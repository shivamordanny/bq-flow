{
  "database_id": "stackoverflow",
  "timestamp": "2025-09-21T23:04:18.863768",
  "sample_size": 1000,
  "total_columns": 228,
  "tables_count": 16,
  "profiles": [
    {
      "database_id": "stackoverflow",
      "table_name": "badges",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "217829",
      "max_value": "32143506",
      "avg_value": 16273311.609,
      "std_dev": 9161765.779981695,
      "example_values": [
        "217829.0",
        "8279049.0",
        "16706514.5",
        "24052172.25",
        "32143506.0"
      ],
      "semantic_context": "Column 'id' from table 'badges' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 217829.0, 8279049.0, 16706514.5, 24052172.25, 32143506.0. Values range from 217829 to 32143506. The average value is 16273311.61."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "badges",
      "column_name": "name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 41,
      "example_values": [
        "Great Answer",
        "Fanatic",
        "Great Question",
        "Electorate",
        "Unsung Hero",
        "Populist",
        "Steward",
        "Stellar Question",
        "Socratic",
        "Copy Editor"
      ],
      "top_values": {
        "Great Answer": 302,
        "Fanatic": 121,
        "Great Question": 117,
        "Electorate": 104,
        "Unsung Hero": 100
      },
      "semantic_context": "Column 'name' from table 'badges' in database 'stackoverflow'. Data type is STRING. It has moderate cardinality with 41 unique values. This column has no null values. Sample values include: \"Great Answer\", \"Fanatic\", \"Great Question\", \"Electorate\", \"Unsung Hero\". The most common values are: Great Answer, Fanatic, Great Question. This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "badges",
      "column_name": "date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 996,
      "min_value": "2009-01-23 16:02:40.423000+00:00",
      "max_value": "2019-04-12 04:40:01.817000+00:00",
      "example_values": [
        "2009-01-23 16:02:40.423000+00:00",
        "2012-07-11 09:23:42.943000+00:00",
        "2013-08-15 10:30:29.640000+00:00",
        "2014-08-09 13:33:23.287000+00:00",
        "2015-07-12 08:37:33.317000+00:00",
        "2016-04-05 19:02:05.830000+00:00",
        "2016-12-28 11:46:11.603000+00:00",
        "2017-09-13 13:28:12.940000+00:00",
        "2018-06-09 10:36:03.043000+00:00",
        "2019-04-12 04:40:01.817000+00:00"
      ],
      "semantic_context": "Column 'date' from table 'badges' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 996 unique values. This column has no null values. Sample dates include: 2009-01-23 16:02:40.423000+00:00, 2012-07-11 09:23:42.943000+00:00, 2013-08-15 10:30:29.640000+00:00. Date values range from 2009-01-23 16:02:40.423000+00:00 to 2019-04-12 04:40:01.817000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "badges",
      "column_name": "user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 986,
      "min_value": "17",
      "max_value": "10840270",
      "avg_value": 1383369.135,
      "std_dev": 1867097.0378429722,
      "example_values": [
        "17.0",
        "139419.25",
        "639441.5",
        "1820196.0",
        "10840270.0"
      ],
      "semantic_context": "Column 'user_id' from table 'badges' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 986 unique values. This column has no null values. Sample numeric values include: 17.0, 139419.25, 639441.5, 1820196.0, 10840270.0. Values range from 17 to 10840270. The average value is 1383369.14."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "badges",
      "column_name": "class",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "1",
      "max_value": "1",
      "avg_value": 1.0,
      "std_dev": 0.0,
      "example_values": [
        "1.0"
      ],
      "semantic_context": "Column 'class' from table 'badges' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 1.0. Values range from 1 to 1. The average value is 1.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "badges",
      "column_name": "tag_based",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 2,
      "min_value": "False",
      "max_value": "True",
      "avg_value": 0.041,
      "std_dev": 0.19838941090279583,
      "example_values": [
        "False",
        "True"
      ],
      "semantic_context": "Column 'tag_based' from table 'badges' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 2 unique values. This column has no null values. Sample numeric values include: False, True. Values range from False to True. The average value is 0.04."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "comments",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "8853280",
      "max_value": "10601466",
      "avg_value": 9087095.447,
      "std_dev": 422265.99332076265,
      "example_values": [
        "8853280.0",
        "8884932.0",
        "8911003.0",
        "8936715.25",
        "10601466.0"
      ],
      "semantic_context": "Column 'id' from table 'comments' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 8853280.0, 8884932.0, 8911003.0, 8936715.25, 10601466.0. Values range from 8853280 to 10601466. The average value is 9087095.45."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "comments",
      "column_name": "text",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 995,
      "example_values": [
        "i using #tab2 to open new and tab so i cant specify www.facebook.com over there",
        "thanks, but the thing is the facebook script is loaded automatically and I cannot control that.",
        "http://stackoverflow.com/q/7363523/69820",
        "so the run-time system passes my method this object...but there must be documentation somewhere that has a reference like method(Event) similar to how php.net has their functions documented.  I did not see this method prototype in any of the listed web sites.",
        "goto http://wohzoo.com/app and try cool app with motion tracking",
        "Here is a nice tutorial which i believe would definitely help you [Tutorial on dynamically creating PDF file in websites](http://blog.geotitles.com/2011/09/tutorial-on-dynamically-creating-pdf-file-in-websites/)",
        "perl v5.10.0 and curl 7.19.7. I was going to upgrade, but I like @ikegami's solution better since it works for non-curl programs too",
        "I don't know if it was a typo on \"http://localhost/index.php\", it should be \"http://localhost:80/index.php\"",
        "Yeah, unfortunately, all IE versions lower than 9 don't support rounded CSS corners. I want to offer the highest availability to everyone.",
        "Yes, sorry, I had to eat dinner :3"
      ],
      "semantic_context": "Column 'text' from table 'comments' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 995 unique values. This column has no null values. Sample values include: \"i using #tab2 to open new and tab so i cant specify www.facebook.com over there\", \"thanks, but the thing is the facebook script is loaded automatically and I cannot control that.\", \"http://stackoverflow.com/q/7363523/69820\", \"so the run-time system passes my method this object...but there must be documentation somewhere that has a reference like method(Event) similar to how php.net has their functions documented.  I did not see this method prototype in any of the listed web sites.\", \"goto http://wohzoo.com/app and try cool app with motion tracking\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "comments",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2009-09-29 18:21:48.253000+00:00",
      "max_value": "2011-12-18 20:25:51.790000+00:00",
      "example_values": [
        "2009-09-29 18:21:48.253000+00:00",
        "2011-09-08 12:41:00.997000+00:00",
        "2011-09-09 05:37:33.650000+00:00",
        "2011-09-09 21:51:18.953000+00:00",
        "2011-09-10 20:23:56.963000+00:00",
        "2011-09-12 00:20:24.483000+00:00",
        "2011-09-12 18:06:17.457000+00:00",
        "2011-09-13 10:54:09.847000+00:00",
        "2011-11-04 06:25:04.207000+00:00",
        "2011-12-18 20:25:51.790000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'comments' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2009-09-29 18:21:48.253000+00:00, 2011-09-08 12:41:00.997000+00:00, 2011-09-09 05:37:33.650000+00:00. Date values range from 2009-09-29 18:21:48.253000+00:00 to 2011-12-18 20:25:51.790000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "comments",
      "column_name": "post_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 786,
      "min_value": "41598",
      "max_value": "8554153",
      "avg_value": 7049139.123,
      "std_dev": 1489588.445836682,
      "example_values": [
        "41598.0",
        "7348821.0",
        "7370570.0",
        "7392933.75",
        "8554153.0"
      ],
      "semantic_context": "Column 'post_id' from table 'comments' in database 'stackoverflow'. Data type is NUMERIC. It contains 786 distinct values. This column has no null values. Sample numeric values include: 41598.0, 7348821.0, 7370570.0, 7392933.75, 8554153.0. Values range from 41598 to 8554153. The average value is 7049139.12."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "comments",
      "column_name": "user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 990,
      "null_percentage": 99.0,
      "distinct_count": 2,
      "min_value": "2720334.0",
      "max_value": "3730911.0",
      "avg_value": 3629853.3,
      "std_dev": 319572.507097998,
      "example_values": [
        "2720334.0",
        "3730911.0"
      ],
      "semantic_context": "Column 'user_id' from table 'comments' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 2 unique values. This column is mostly empty with 99.0% null values. Sample numeric values include: 2720334.0, 3730911.0. Values range from 2720334.0 to 3730911.0. The average value is 3629853.30."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "comments",
      "column_name": "user_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 265,
      "example_values": [
        "user166390",
        "user395760",
        "user557219",
        "user142019",
        "user658042",
        "user557846",
        "user244343",
        "user554546",
        "user933467",
        "user195488"
      ],
      "semantic_context": "Column 'user_display_name' from table 'comments' in database 'stackoverflow'. Data type is STRING. It contains 265 distinct values. This column has no null values. Sample values include: \"user166390\", \"user395760\", \"user557219\", \"user142019\", \"user658042\". This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "comments",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 37,
      "min_value": "0",
      "max_value": "161",
      "avg_value": 2.82,
      "std_dev": 10.154935879793765,
      "example_values": [
        "0.0",
        "161.0"
      ],
      "semantic_context": "Column 'score' from table 'comments' in database 'stackoverflow'. Data type is NUMERIC. It has moderate cardinality with 37 unique values. This column has no null values. Sample numeric values include: 0.0, 161.0. Values range from 0 to 161. The average value is 2.82. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_history",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "146804084",
      "max_value": "147025356",
      "avg_value": 146913955.306,
      "std_dev": 62602.52334923934,
      "example_values": [
        "146804084.0",
        "146846645.75",
        "146930628.0",
        "146960725.75",
        "147025356.0"
      ],
      "semantic_context": "Column 'id' from table 'post_history' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 146804084.0, 146846645.75, 146930628.0, 146960725.75, 147025356.0. Values range from 146804084 to 147025356. The average value is 146913955.31."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_history",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 239,
      "min_value": "2017-05-23 12:00:46.067000+00:00",
      "max_value": "2017-05-23 12:08:49.053000+00:00",
      "example_values": [
        "2017-05-23 12:00:46.067000+00:00",
        "2017-05-23 12:01:16+00:00",
        "2017-05-23 12:01:55.953000+00:00",
        "2017-05-23 12:03:56.230000+00:00",
        "2017-05-23 12:05:18.880000+00:00",
        "2017-05-23 12:05:21.743000+00:00",
        "2017-05-23 12:06:11.360000+00:00",
        "2017-05-23 12:06:52.397000+00:00",
        "2017-05-23 12:07:04+00:00",
        "2017-05-23 12:08:49.053000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'post_history' in database 'stackoverflow'. Data type is DATETIME. It contains 239 distinct values. This column has no null values. Sample dates include: 2017-05-23 12:00:46.067000+00:00, 2017-05-23 12:01:16+00:00, 2017-05-23 12:01:55.953000+00:00. Date values range from 2017-05-23 12:00:46.067000+00:00 to 2017-05-23 12:08:49.053000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_history",
      "column_name": "post_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 851,
      "min_value": "786047",
      "max_value": "44134425",
      "avg_value": 24807353.881,
      "std_dev": 16947632.913239207,
      "example_values": [
        "786047.0",
        "7395965.25",
        "18869942.5",
        "44134198.0",
        "44134425.0"
      ],
      "semantic_context": "Column 'post_id' from table 'post_history' in database 'stackoverflow'. Data type is NUMERIC. It contains 851 distinct values. This column has no null values. Sample numeric values include: 786047.0, 7395965.25, 18869942.5, 44134198.0, 44134425.0. Values range from 786047 to 44134425. The average value is 24807353.88."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_history",
      "column_name": "post_history_type_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 11,
      "min_value": "1",
      "max_value": "34",
      "avg_value": 4.562,
      "std_dev": 2.734892253021248,
      "example_values": [
        "1.0",
        "5.0",
        "34.0"
      ],
      "semantic_context": "Column 'post_history_type_id' from table 'post_history' in database 'stackoverflow'. Data type is NUMERIC. It has moderate cardinality with 11 unique values. This column has no null values. Sample numeric values include: 1.0, 5.0, 34.0. Values range from 1 to 34. The average value is 4.56."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_history",
      "column_name": "revision_guid",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 865,
      "example_values": [
        "e5dca78d-75b3-4e33-8622-be35e523a32b",
        "323a46dd-6066-4f1f-9dec-7a8ae753b0c2",
        "03da1346-b3d4-4006-aae2-82e9dd1de4ff",
        "4f25ccc8-b025-4f9c-be55-8fe6c133d6d0",
        "a468c887-3ff4-46df-a701-ec624d54b3be",
        "dceaa878-0898-4821-a6f9-bc82616c8e1e",
        "13f00ecd-5055-410d-ac77-2e6e49748652",
        "f9e48c3a-6bf5-4605-a162-ab2384d9b2a0",
        "2148be34-4eba-4db6-9f2c-b53e3a483663",
        "e67b7ae8-b6f8-40bf-9cfc-25a7b7757f56"
      ],
      "semantic_context": "Column 'revision_guid' from table 'post_history' in database 'stackoverflow'. Data type is STRING. It contains 865 distinct values. This column has no null values. Sample values include: \"e5dca78d-75b3-4e33-8622-be35e523a32b\", \"323a46dd-6066-4f1f-9dec-7a8ae753b0c2\", \"03da1346-b3d4-4006-aae2-82e9dd1de4ff\", \"4f25ccc8-b025-4f9c-be55-8fe6c133d6d0\", \"a468c887-3ff4-46df-a701-ec624d54b3be\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_history",
      "column_name": "user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 647,
      "null_percentage": 64.7,
      "distinct_count": 217,
      "min_value": "-1.0",
      "max_value": "8053378.0",
      "avg_value": 4425967.033994334,
      "std_dev": 2677913.8803828103,
      "example_values": [
        "-1.0",
        "2039085.0",
        "4636164.0",
        "7097407.0",
        "8053378.0"
      ],
      "semantic_context": "Column 'user_id' from table 'post_history' in database 'stackoverflow'. Data type is NUMERIC. It contains 217 distinct values. This column has many nulls (64.7%). Sample numeric values include: -1.0, 2039085.0, 4636164.0, 7097407.0, 8053378.0. Values range from -1.0 to 8053378.0. The average value is 4425967.03."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_history",
      "column_name": "text",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 11,
      "null_percentage": 1.0999999999999999,
      "distinct_count": 987,
      "example_values": [
        "<javascript><jquery>",
        "I'm making an performance experiment with VirtualBox, but something very strange is happening with time when I try to measure it with **clock()**. Somehow the output through this method is smaller then the output result from **time()** (And apparently the right one).  The following results are obtained without any VM running.\n\n    #include <stdio.h>\n    #include <time.h>\n    int main()\n    { \n     clock_t start, end;\n     double cpu_time_used;\n        long int i = 0;\n     time_t start_t = time(NULL);\n     printf(\"%d\\n\", start_t);\n      start = clock();\n     while (i<1000000000){\n      if(i%100==0)\n       printf(\"%d\\n\", i);\n      i++;\n     }\n     end = clock();\n     printf(\"Time spent: %g seconds (time)\\n\", (double)(time(NULL)-start_t));\n      cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;\n     printf(\"Time spent: %g seconds (clock)\\n\", cpu_time_used);\n     return 0;\n    }\n\nOutput:\n\n    Time spent: 41 seconds (time)\n    Time spent: 26.9069 seconds (clock)\n\nSystem:\n\n    Macbook Pro 13 mid-2012\n    OS: MacOS Sierra (10.14.2)\n    Processor: 2,5GHz Intel Core i5 (4 cores)\n    Memory: 4GB (1600MHz DDR3) \n    HD: SSD 240GB\n\nDoes anyone have any clue why this is happening?",
        "This SO post provides some very useful information on this issue: https://stackoverflow.com/questions/14319967/angularjs-routing-without-the-hash\n\nIt seems that it is needed for any non-HTML5 browsers. You can use `$locationProvider.html5Mode(true)` to try and use the HTML5 method where available though.",
        "may be an issue with line-height. that's what was causing the error for me. see https://stackoverflow.com/questions/1554893/google-maps-api-v3-infowindow-not-sizing-correctly/11125793#answer-11125793 answer #11125793 (Nick).",
        "I would like to have a directive which behaves as typical ng-controller, but I want it to be called once a promise is resolved, not sooner.\nIn HTML this could be written like this:\n\n    <div ng-controller=\"myCtrl\" ctrl-promise=\"p\">\n\np could be any promise on parent scope.\nI know there is a way to delay instantiation of a controller for a route(as answered here: https://stackoverflow.com/questions/12356185/angular-js-delaying-controller-initialization), but I would much prefer to specify this per controller rather than per route. \nI know I could use ng-if with p as atribute, but is there other way?",
        "I'm using a large array of objects built around a center point in a scene, and need to manipulate them all around their local axis. They are all facing the origin using a blank object and lookAt(), then I used [this method to align the other axes correctly][1]. Getting the initial rotation this way worked great, unfortunately when I try to rotate these objects on the fly with `object.rotation.x = <amount>`, it does not respect the local axis of the object. \n\nThe confusing part is, it's not even using the global axis, the axis it's using almost seems entirely arbitrary. [I set up a JSFiddle to demonstrate this here][2]. As you can see on line 129, `looker.rotation.z` works correctly, it rotates along the Z axis properly, but if it's changed to X or Y, it doesn't rotate along local or global axes. If anyone could demystify what is happening to cause this, that would be great.\n\n\n  [1]: https://stackoverflow.com/questions/14250208/three-js-how-to-rotate-an-object-to-lookat-one-point-and-orient-towards-anothe\n  [2]: http://jsfiddle.net/hLgAz/1/",
        "This is an old question, but maybe someone might still cares...\nI had the same problem and was able to fix it. Here's the link: <https://stackoverflow.com/questions/21709446/oncreateloader-not-called-when-orientation-change-because-of-loader>",
        "You asked me in a comment on the linked post if I would comment on this question. Sorry I took so long, but I remember the first time I looked at it I didn't feel like I had anything productive say. But I was reminded of this topic today and came back across this question and figured I'd take a shot: \n\nIn general, I would suggest not going down this road at all. As I explained in [the linked-to/from answer][1], implementing a recursive \"lock\" with `dispatch_get/set_specific` is *never* bulletproof, and going beyond the simple, serial case to the one-writer/many-readers semantic of `dispatch_barrier_[a]sync` isn't going to remove those problems, and would probably introduce even more issues.\n\nAs an aside, if you're just looking for an alternative to `[NSThread threadDictionary]` for thread-local storage, perhaps in the form of a non-Objective-C API, then you should use `pthread_setspecific` and `pthread_getspecific`. These are the lower level POSIX calls upon which `[NSThread threadDictionary]` is (almost certainly) built.\n\nStepping back for a minute: There is a pretty strong sentiment among veteran systems programmers that recursive locks are an anti-pattern from the get-go, and are to be avoided. Here is an [interesting treatise on the subject][2]. (If you aren't interested in the apocryphal tale of why recursive mutexes exist in POSIX, just search for \"the objective facts\" to jump to the part that's relevant to this question.) That piece is written in terms of more primitive \"locks\" (made up of mutexes and conditions), which are fundamentally different from queues, despite the fact that queues can be (sometimes quite usefully) adapted to simulate locks in some common cases. However, even though they're different, if you consider the criticisms Butenhof levies against recursive primitive locks, it quickly becomes evident that in many of the ways that recursive locks are \"bad\", using queues to simulate locks is *worse*. For instance, at the most basic level, the only way you can unlock a lock-simulated-by-a-queue is to return; there is **no other way** to release a queue-based lock. Calling out to other code which may need to recursively re-enter that lock, while the caller continues to hold it, is a potentially unbounded extension of the time the \"lock\" is held.\n\nA piece of general advice that has served me well is, \"Use the highest level abstraction that gets the job done.\" In the context of this question, that would translate to (setting aside the aforementioned criticisms of recursive locking for the moment): If you're working in Objective-C and, for whatever reason, you want recursive locks, just use `@synchronized`. When performance analysis tells you that your use of `@synchronized` is actually causing you a problem, *then* look into better solutions (with the foresight to know that \"better solutions\" will probably require moving away from recursive locks all together.)\n\nIn sum, trying to adapt GCD's concurrent queue barrier behavior to simulate a recursive reader/writer lock feels like a losing proposition. At best, it would always be subject to the limitations that I explained [over here][1] for the serial case. At worst, you're promulgating a pattern that ultimately reduces concurrency.\n\n  [1]: https://stackoverflow.com/a/19495517/438982\n  [2]: http://www.zaval.org/resources/library/butenhof1.html",
        "I don't have IE 9 to test---but generically in CSS, you should try\n\n    button:focus {\n        outline:none;\n        box-shadow:none;\n    }\n\nAdapted from [\"Removing the blue glow from an HTML text input when selected\"](https://stackoverflow.com/questions/9287803/removing-the-blue-glow-from-an-html-text-input-when-selected).",
        "the solution found on https://stackoverflow.com/a/18853002/728855 seems to work perfectly.\n\nIn short:\n\n    select:-moz-focusring {\n        color: transparent;\n        text-shadow: 0 0 0 #000;\n    }\n\nWhere #000 is your text colour."
      ],
      "semantic_context": "Column 'text' from table 'post_history' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 987 unique values. About 1.1% of values are null. Sample values include: \"<javascript><jquery>\", \"I'm making an performance experiment with VirtualBox, but something very strange is happening with time when I try to measure it with **clock()**. Somehow the output through this method is smaller then the output result from **time()** (And apparently the right one).  The following results are obtained without any VM running.\n\n    #include <stdio.h>\n    #include <time.h>\n    int main()\n    { \n     clock_t start, end;\n     double cpu_time_used;\n        long int i = 0;\n     time_t start_t = time(NULL);\n     printf(\"%d\\n\", start_t);\n      start = clock();\n     while (i<1000000000){\n      if(i%100==0)\n       printf(\"%d\\n\", i);\n      i++;\n     }\n     end = clock();\n     printf(\"Time spent: %g seconds (time)\\n\", (double)(time(NULL)-start_t));\n      cpu_time_used = ((double) (end - start)) / CLOCKS_PER_SEC;\n     printf(\"Time spent: %g seconds (clock)\\n\", cpu_time_used);\n     return 0;\n    }\n\nOutput:\n\n    Time spent: 41 seconds (time)\n    Time spent: 26.9069 seconds (clock)\n\nSystem:\n\n    Macbook Pro 13 mid-2012\n    OS: MacOS Sierra (10.14.2)\n    Processor: 2,5GHz Intel Core i5 (4 cores)\n    Memory: 4GB (1600MHz DDR3) \n    HD: SSD 240GB\n\nDoes anyone have any clue why this is happening?\", \"This SO post provides some very useful information on this issue: https://stackoverflow.com/questions/14319967/angularjs-routing-without-the-hash\n\nIt seems that it is needed for any non-HTML5 browsers. You can use `$locationProvider.html5Mode(true)` to try and use the HTML5 method where available though.\", \"may be an issue with line-height. that's what was causing the error for me. see https://stackoverflow.com/questions/1554893/google-maps-api-v3-infowindow-not-sizing-correctly/11125793#answer-11125793 answer #11125793 (Nick).\", \"I would like to have a directive which behaves as typical ng-controller, but I want it to be called once a promise is resolved, not sooner.\nIn HTML this could be written like this:\n\n    <div ng-controller=\"myCtrl\" ctrl-promise=\"p\">\n\np could be any promise on parent scope.\nI know there is a way to delay instantiation of a controller for a route(as answered here: https://stackoverflow.com/questions/12356185/angular-js-delaying-controller-initialization), but I would much prefer to specify this per controller rather than per route. \nI know I could use ng-if with p as atribute, but is there other way?\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_history",
      "column_name": "comment",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 234,
      "null_percentage": 23.400000000000002,
      "distinct_count": 109,
      "example_values": [
        "replaced http://stackoverflow.com/ with https://stackoverflow.com/",
        "edited tags",
        "edited title",
        "edited tags; edited title",
        "correct spelling and grammar changes",
        "remove unnecessary characters, correct spelling",
        "formatting and correction",
        "added 37 characters in body; edited tags",
        "added 21 characters in body",
        "added 24 characters in body; edited tags"
      ],
      "semantic_context": "Column 'comment' from table 'post_history' in database 'stackoverflow'. Data type is STRING. It contains 109 distinct values. About 23.4% of values are null. Sample values include: \"replaced http://stackoverflow.com/ with https://stackoverflow.com/\", \"edited tags\", \"edited title\", \"edited tags; edited title\", \"correct spelling and grammar changes\". This appears to be a free text description field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_links",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "229",
      "max_value": "159702609",
      "avg_value": 32219527.975,
      "std_dev": 47153408.623163104,
      "example_values": [
        "229.0",
        "71685.25",
        "441090.5",
        "56205093.0",
        "159702609.0"
      ],
      "semantic_context": "Column 'id' from table 'post_links' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 229.0, 71685.25, 441090.5, 56205093.0, 159702609.0. Values range from 229 to 159702609. The average value is 32219527.98."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_links",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 995,
      "min_value": "2010-04-26 03:00:03.293000+00:00",
      "max_value": "2011-03-07 04:44:43.727000+00:00",
      "example_values": [
        "2010-04-26 03:00:03.293000+00:00",
        "2010-04-26 03:11:30.620000+00:00",
        "2010-04-26 03:24:12.747000+00:00",
        "2010-05-07 11:49:17.523000+00:00",
        "2010-07-09 13:47:35.350000+00:00",
        "2010-09-01 04:41:10.430000+00:00",
        "2010-10-19 16:23:48.467000+00:00",
        "2010-12-09 14:49:28.843000+00:00",
        "2011-01-29 20:11:51.863000+00:00",
        "2011-03-07 04:44:43.727000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'post_links' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 995 unique values. This column has no null values. Sample dates include: 2010-04-26 03:00:03.293000+00:00, 2010-04-26 03:11:30.620000+00:00, 2010-04-26 03:24:12.747000+00:00. Date values range from 2010-04-26 03:00:03.293000+00:00 to 2011-03-07 04:44:43.727000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_links",
      "column_name": "link_type_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "1",
      "max_value": "1",
      "avg_value": 1.0,
      "std_dev": 0.0,
      "example_values": [
        "1.0"
      ],
      "semantic_context": "Column 'link_type_id' from table 'post_links' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 1.0. Values range from 1 to 1. The average value is 1.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_links",
      "column_name": "post_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 994,
      "min_value": "371",
      "max_value": "5215699",
      "avg_value": 2952451.888,
      "std_dev": 1442878.9491883505,
      "example_values": [
        "371.0",
        "1834845.25",
        "3098345.0",
        "4209416.75",
        "5215699.0"
      ],
      "semantic_context": "Column 'post_id' from table 'post_links' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 994 unique values. This column has no null values. Sample numeric values include: 371.0, 1834845.25, 3098345.0, 4209416.75, 5215699.0. Values range from 371 to 5215699. The average value is 2952451.89."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "post_links",
      "column_name": "related_post_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 986,
      "min_value": "9",
      "max_value": "5201274",
      "avg_value": 1673388.041,
      "std_dev": 1407508.920058104,
      "example_values": [
        "9.0",
        "425384.25",
        "1265897.5",
        "2680614.0",
        "5201274.0"
      ],
      "semantic_context": "Column 'related_post_id' from table 'post_links' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 986 unique values. This column has no null values. Sample numeric values include: 9.0, 425384.25, 1265897.5, 2680614.0, 5201274.0. Values range from 9 to 5201274. The average value is 1673388.04."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "72645503",
      "max_value": "72651384",
      "avg_value": 72648456.758,
      "std_dev": 1706.3360824474942,
      "example_values": [
        "72645503.0",
        "72646953.5",
        "72648420.0",
        "72649939.75",
        "72651384.0"
      ],
      "semantic_context": "Column 'id' from table 'posts_answers' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 72645503.0, 72646953.5, 72648420.0, 72649939.75, 72651384.0. Values range from 72645503 to 72651384. The average value is 72648456.76."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "title",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'title' from table 'posts_answers' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "body",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "example_values": [
        "<p>First, check this;\n<a href=\"https://github.com/vitejs/vite/issues/6985\" rel=\"nofollow noreferrer\">https://github.com/vitejs/vite/issues/6985</a>.\nIf you can't find an answer try this to create a big fat async function that executes itself to decrease the level of your <code>await</code>;</p>\n<pre><code>    (async () =&gt; {\n    export const shopsData: shopType[] = await fetchStarbucksShops();\n    export const countryGeoData: countryGeoDataType = await fetchGeoJsonCountry();\n    .\n    .\n    .\n    .\n    .\n     })();\n</code></pre>\n<p>It might not work.\nYou should avoid top-level await somehow, whether use <code>await</code> inside the <code>async</code> function, or use <code>.then()</code></p>",
        "<p>You have unbalanced parens in <code>nextMyStates</code> function. For example you have\n<code>check(up (S l [a,b] d z)</code> when you probably mean <code>check $ up S l [a,b] d z</code>.</p>\n<p>You probably want to read of as-patterns as well, allowing you to simplify your code a lot :)</p>",
        "<p>I often do this with Multi Select form fields.</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>    var progid = [];\n    $.each($(\"input[name='course[]']:checked\"), function(){\n        progid.push($(this).attr(\"id\"));  \n    });\n    $.ajax({\n        type: \"POST\",\n        url: \"ajax_post.php\",\n        data: {\n            'progid[]': progid\n        },\n        success: function(data) {\n\n        }\n    });</code></pre>\n</div>\n</div>\n</p>\n<p>Then on the PHP system the $_POST['progid'] will be an array. So all the JSON encoding and decoding others have posted is not needed.</p>",
        "<p>As stated this was a typo in the table name.</p>",
        "<p>You need to bind <code>IncrementCount</code> in <code>Counter</code>:</p>\n<pre class=\"lang-js prettyprint-override\"><code>constructor(props) {\n    super(props)\n    \n    this.state = {\n        count:0\n    }\n    this.IncrementCount = this.IncrementCount.bind(this);\n}\n</code></pre>\n<p>...and <code>UpdateClick</code> in <code>Click</code>:</p>\n<pre class=\"lang-js prettyprint-override\"><code>constructor(props) {\n    super(props)\n    \n    this.state = {\n        count: 0\n    }\n    this.UpdateClick = this.UpdateClick.bind(this);\n}\n</code></pre>",
        "<p>I might suggest doing this through multiple <code>replace</code> operations, e.g.:</p>\n<pre><code>temp = &quot;N4++e=&gt;N2+N2&quot;\nprint(temp.replace(&quot;+&quot;, &quot; + &quot;).replace(&quot; +  +&quot;, &quot;+ +&quot;).replace(&quot;=&gt;&quot;, &quot; =&gt; &quot;))\n# N4+ + e =&gt; N2 + N2\n</code></pre>\n<p>This is making a lot of assumptions about the types of inputs you might get and the result you want to achieve, though.  For a more robust solution you might want to look at writing a lexer (e.g. with <a href=\"http://www.dabeaz.com/ply/ply.html#ply_nn3\" rel=\"nofollow noreferrer\">PLY</a>).</p>",
        "<p>Using a <code>Thread.Sleep()</code> is the last thing you should do when designing selenium tests. It unreliable/inefficient. Make an instance of WebDriverWait (if you don't already have one) and use it's <code>Until()</code> function. Example for what you're trying to do:</p>\n<pre><code>        IWebDriver webDriver = new ChromeDriver();\n        WebDriverWait wait = new WebDriverWait(webDriver, TimeSpan.FromMinutes(2));\n\n        var branch = new SelectElement(webDriver.FindElement(By.Id(&quot;CompanyBranchId&quot;)));\n        wait.Until(driver =&gt; driver.FindElement(By.XPath(&quot;//*[contains(text(),'Globex Branch Two')]&quot;)).Displayed);\n        branch.SelectByText(&quot;Globex Branch Two&quot;);\n</code></pre>",
        "<p>I was facing exactly the same issue on my bare metal setup. Only difference was that I was using <a href=\"http://kube-vip.chipzoller.dev\" rel=\"nofollow noreferrer\">kube-vip</a> instead of MetalLB. It was finally fixed when I changed the  <code>externalTrafficPolicy</code> on <code>ingress-nginx-controller</code> service to <code>Cluster</code>.</p>\n<p>I'm unable to reason why, but the closest I could come up with is that the Loadbalancer IP was acquired by <code>node-1</code> of my bare metal setup, whereas the web frontend was scheduled on <code>node-2</code></p>",
        "<p>There are a few things you can do:</p>\n<ul>\n<li>GitHub has star lists where you can categorize starred repositories. You can create a list of archived repositories by starring all archivable repositories and adding them to a custom list.</li>\n<li>Create a repository with each folder being a <strong>submodule</strong> of a to-be archived repository. This way, the commit history can be updated and this repository is a place to access all of the data without copying the files. The archived repositories would still have to exist, although they can be on any git hosting site.</li>\n<li>If they're all repos with one branch, you can make a repository with an orphaned branch for each project. This means you won't be able to see the files easily but they'll be stored on GitHub.</li>\n</ul>\n<p>The third option, or any method of storing the <strong>content</strong> of the git repositories in one folder or repository, would lead to a lot of loss of data and should be avoided if possible.</p>",
        "<p>This solution will give you an array of strings, one element for each paragraph in the docx :</p>\n<pre><code>const PizZip = require(&quot;pizzip&quot;);\nconst { DOMParser, XMLSerializer } = require(&quot;@xmldom/xmldom&quot;);\nconst fs = require(&quot;fs&quot;);\nconst path = require(&quot;path&quot;);\n\nfunction str2xml(str) {\n    if (str.charCodeAt(0) === 65279) {\n        // BOM sequence\n        str = str.substr(1);\n    }\n    return new DOMParser().parseFromString(str, &quot;text/xml&quot;);\n}\n\nfunction getParagraphs(content) {\n    const zip = new PizZip(content);\n    const xml = str2xml(zip.files[&quot;word/document.xml&quot;].asText());\n    const paragraphsXml = xml.getElementsByTagName(&quot;w:p&quot;);\n    const paragraphs = [];\n\n    for (let i = 0, len = paragraphsXml.length; i &lt; len; i++) {\n        let fullText = &quot;&quot;;\n        const textsXml =\n            paragraphsXml[i].getElementsByTagName(&quot;w:t&quot;);\n        for (let j = 0, len2 = textsXml.length; j &lt; len2; j++) {\n            const textXml = textsXml[j];\n            if (textXml.childNodes) {\n                fullText += textXml.childNodes[0].nodeValue;\n            }\n        }\n\n        paragraphs.push(fullText);\n    }\n    return paragraphs;\n}\n\n// Load the docx file as binary content\nconst content = fs.readFileSync(\n    path.resolve(__dirname, &quot;examples/cond-image.docx&quot;),\n    &quot;binary&quot;\n);\n\n// Will print ['Hello John', 'how are you ?'] if the document has two paragraphs.\nconsole.log(getParagraphs(content));\n</code></pre>\n<p>Source : <a href=\"https://docxtemplater.com/faq/#how-can-i-retrieve-the-docx-content-as-text\" rel=\"nofollow noreferrer\">https://docxtemplater.com/faq/#how-can-i-retrieve-the-docx-content-as-text</a></p>"
      ],
      "semantic_context": "Column 'body' from table 'posts_answers' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample values include: \"<p>First, check this;\n<a href=\"https://github.com/vitejs/vite/issues/6985\" rel=\"nofollow noreferrer\">https://github.com/vitejs/vite/issues/6985</a>.\nIf you can't find an answer try this to create a big fat async function that executes itself to decrease the level of your <code>await</code>;</p>\n<pre><code>    (async () =&gt; {\n    export const shopsData: shopType[] = await fetchStarbucksShops();\n    export const countryGeoData: countryGeoDataType = await fetchGeoJsonCountry();\n    .\n    .\n    .\n    .\n    .\n     })();\n</code></pre>\n<p>It might not work.\nYou should avoid top-level await somehow, whether use <code>await</code> inside the <code>async</code> function, or use <code>.then()</code></p>\", \"<p>You have unbalanced parens in <code>nextMyStates</code> function. For example you have\n<code>check(up (S l [a,b] d z)</code> when you probably mean <code>check $ up S l [a,b] d z</code>.</p>\n<p>You probably want to read of as-patterns as well, allowing you to simplify your code a lot :)</p>\", \"<p>I often do this with Multi Select form fields.</p>\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-js lang-js prettyprint-override\"><code>    var progid = [];\n    $.each($(\"input[name='course[]']:checked\"), function(){\n        progid.push($(this).attr(\"id\"));  \n    });\n    $.ajax({\n        type: \"POST\",\n        url: \"ajax_post.php\",\n        data: {\n            'progid[]': progid\n        },\n        success: function(data) {\n\n        }\n    });</code></pre>\n</div>\n</div>\n</p>\n<p>Then on the PHP system the $_POST['progid'] will be an array. So all the JSON encoding and decoding others have posted is not needed.</p>\", \"<p>As stated this was a typo in the table name.</p>\", \"<p>You need to bind <code>IncrementCount</code> in <code>Counter</code>:</p>\n<pre class=\"lang-js prettyprint-override\"><code>constructor(props) {\n    super(props)\n    \n    this.state = {\n        count:0\n    }\n    this.IncrementCount = this.IncrementCount.bind(this);\n}\n</code></pre>\n<p>...and <code>UpdateClick</code> in <code>Click</code>:</p>\n<pre class=\"lang-js prettyprint-override\"><code>constructor(props) {\n    super(props)\n    \n    this.state = {\n        count: 0\n    }\n    this.UpdateClick = this.UpdateClick.bind(this);\n}\n</code></pre>\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "accepted_answer_id",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'accepted_answer_id' from table 'posts_answers' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "answer_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'answer_count' from table 'posts_answers' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "comment_count",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 12,
      "min_value": "0",
      "max_value": "18",
      "avg_value": 0.513,
      "std_dev": 1.3407567373049551,
      "example_values": [
        "0.0",
        "18.0"
      ],
      "semantic_context": "Column 'comment_count' from table 'posts_answers' in database 'stackoverflow'. Data type is NUMERIC. It has moderate cardinality with 12 unique values. This column has no null values. Sample numeric values include: 0.0, 18.0. Values range from 0 to 18. The average value is 0.51. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "community_owned_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 999,
      "null_percentage": 99.9,
      "distinct_count": 1,
      "min_value": "2022-06-16 17:27:54.730000+00:00",
      "max_value": "2022-06-16 17:27:54.730000+00:00",
      "example_values": [
        "2022-06-16 17:27:54.730000+00:00"
      ],
      "semantic_context": "Column 'community_owned_date' from table 'posts_answers' in database 'stackoverflow'. Data type is DATETIME. It contains a single constant value. This column is mostly empty with 99.9% null values. Sample dates include: 2022-06-16 17:27:54.730000+00:00. Date values range from 2022-06-16 17:27:54.730000+00:00 to 2022-06-16 17:27:54.730000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2022-06-16 12:01:25.897000+00:00",
      "max_value": "2022-06-16 20:09:54.293000+00:00",
      "example_values": [
        "2022-06-16 12:01:25.897000+00:00",
        "2022-06-16 12:53:28.893000+00:00",
        "2022-06-16 13:37:08.667000+00:00",
        "2022-06-16 14:25:19.120000+00:00",
        "2022-06-16 15:13:39.210000+00:00",
        "2022-06-16 15:59:29.463000+00:00",
        "2022-06-16 17:01:28.400000+00:00",
        "2022-06-16 18:04:57.757000+00:00",
        "2022-06-16 19:07:43.600000+00:00",
        "2022-06-16 20:09:54.293000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'posts_answers' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2022-06-16 12:01:25.897000+00:00, 2022-06-16 12:53:28.893000+00:00, 2022-06-16 13:37:08.667000+00:00. Date values range from 2022-06-16 12:01:25.897000+00:00 to 2022-06-16 20:09:54.293000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "favorite_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'favorite_count' from table 'posts_answers' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "last_activity_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2022-06-16 12:01:25.897000+00:00",
      "max_value": "2022-06-16 20:09:54.293000+00:00",
      "example_values": [
        "2022-06-16 12:01:25.897000+00:00",
        "2022-06-16 12:53:28.893000+00:00",
        "2022-06-16 13:37:08.667000+00:00",
        "2022-06-16 14:25:19.120000+00:00",
        "2022-06-16 15:13:39.210000+00:00",
        "2022-06-16 15:59:29.463000+00:00",
        "2022-06-16 17:01:28.400000+00:00",
        "2022-06-16 18:04:57.757000+00:00",
        "2022-06-16 19:07:43.600000+00:00",
        "2022-06-16 20:09:54.293000+00:00"
      ],
      "semantic_context": "Column 'last_activity_date' from table 'posts_answers' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2022-06-16 12:01:25.897000+00:00, 2022-06-16 12:53:28.893000+00:00, 2022-06-16 13:37:08.667000+00:00. Date values range from 2022-06-16 12:01:25.897000+00:00 to 2022-06-16 20:09:54.293000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "last_edit_date",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'last_edit_date' from table 'posts_answers' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "last_editor_display_name",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'last_editor_display_name' from table 'posts_answers' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "last_editor_user_id",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'last_editor_user_id' from table 'posts_answers' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "owner_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 998,
      "null_percentage": 99.8,
      "distinct_count": 2,
      "example_values": [
        "user17087887",
        "user1373996"
      ],
      "top_values": {
        "user17087887": 1,
        "user1373996": 1
      },
      "semantic_context": "Column 'owner_display_name' from table 'posts_answers' in database 'stackoverflow'. Data type is STRING. It is a low-cardinality categorical field with 2 unique values. This column is mostly empty with 99.8% null values. Sample values include: \"user17087887\", \"user1373996\". The most common values are: user17087887, user1373996. This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "owner_user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 2,
      "null_percentage": 0.2,
      "distinct_count": 903,
      "min_value": "1338.0",
      "max_value": "19354696.0",
      "avg_value": 9053821.193386773,
      "std_dev": 6449368.165403832,
      "example_values": [
        "1338.0",
        "3017849.0",
        "8382083.0",
        "14952895.5",
        "19354696.0"
      ],
      "semantic_context": "Column 'owner_user_id' from table 'posts_answers' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 903 unique values. About 0.2% of values are null. Sample numeric values include: 1338.0, 3017849.0, 8382083.0, 14952895.5, 19354696.0. Values range from 1338.0 to 19354696.0. The average value is 9053821.19."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "parent_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 960,
      "min_value": "316866",
      "max_value": "72651316",
      "avg_value": 64940065.717,
      "std_dev": 16553833.653156037,
      "example_values": [
        "316866.0",
        "68997713.25",
        "72635332.0",
        "72647300.0",
        "72651316.0"
      ],
      "semantic_context": "Column 'parent_id' from table 'posts_answers' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 960 unique values. This column has no null values. Sample numeric values include: 316866.0, 68997713.25, 72635332.0, 72647300.0, 72651316.0. Values range from 316866 to 72651316. The average value is 64940065.72."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "post_type_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "2",
      "max_value": "2",
      "avg_value": 2.0,
      "std_dev": 0.0,
      "example_values": [
        "2.0"
      ],
      "semantic_context": "Column 'post_type_id' from table 'posts_answers' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 2.0. Values range from 2 to 2. The average value is 2.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'score' from table 'posts_answers' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "tags",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'tags' from table 'posts_answers' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_answers",
      "column_name": "view_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'view_count' from table 'posts_answers' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 342,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 342,
      "min_value": "4729550",
      "max_value": "69621918",
      "avg_value": 23580371.75730994,
      "std_dev": 18290767.8126446,
      "example_values": [
        "4729550.0",
        "8042220.75",
        "21687407.5",
        "33686875.0",
        "69621918.0"
      ],
      "semantic_context": "Column 'id' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 342 unique values. This column has no null values. Sample numeric values include: 4729550.0, 8042220.75, 21687407.5, 33686875.0, 69621918.0. Values range from 4729550 to 69621918. The average value is 23580371.76."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "title",
      "data_type": "object",
      "total_count": 342,
      "null_count": 342,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'title' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "body",
      "data_type": "STRING",
      "total_count": 342,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 342,
      "example_values": [
        "<p>I am detail oriented and would like to moderate this site to keep it a clean and fun place to visit everyday.</p>",
        "<h1>Machavity</h1>\n<p>I'm Machavity and I'm running for moderator.</p>\n<h1>Why Me</h1>\n<p>I already spend a fair amount of time doing moderation around SO as it is. You can usually find me in <a href=\"https://chat.stackoverflow.com/rooms/41570/so-close-vote-reviewers\">SOCVR</a> helping with user-level moderation, or in <a href=\"https://chat.stackexchange.com/rooms/11540/charcoal-hq\">Charcoal</a> helping with spam (they got <a href=\"https://stackoverflow.blog/2020/06/25/how-does-spam-protection-work-on-stack-exchange/\">a blog entry recently</a>)</p>\n<p>I have been a Trusted User for quite a while now. I regularly review things and am deeply familiar with the site and moderation. I have a lot of reviews and helpful flags under my belt.</p>\n<p>I have a strong philosophy of curation (which is what I call the level below diamond moderation). I <a href=\"https://meta.stackoverflow.com/questions/367016/curation-and-cynicism-or-why-stack-overflow-sometimes-doesnt-seem-welcoming\">once wrote a Meta about it</a>.</p>\n<p>I regularly work with others in moderation activities and I'm not afraid to take criticism.</p>\n<h1>Why not me</h1>\n<p>I close things. A lot of things. I might delete them too.</p>\n<p><a href=\"https://meta.stackoverflow.com/a/399152\">My Meta questionnaire</a></p>",
        "<p>I was going to nominate myself in the last Stack Overflow election, but the rising reputation requirements quickly made that impossible. I see that as a good thing - I'm now far more prepared to be a Stack Overflow moderator than I was before.</p>\n\n<p>As some of you may know, I'm a moderator over on Stack Overflow's softer side, <a href=\"http://programmers.stackexchange.com\">Programmers</a>. You can check out my <a href=\"http://programmers.stackexchange.com/users/226/anna-lear?tab=activity\">activity stream</a> there and get a pretty good picture of my moderation style and commitment to meeting the guidelines set out in the <a href=\"http://blog.stackoverflow.com/2009/05/a-theory-of-moderation/\">Theory of Moderation</a>.</p>\n\n<p>I monitor flag queues daily, check 10k tools, suggested edits queue, and of course the front page itself. My reputation gain has significantly slowed down since I became a moderator and I even lost a bunch of rep once we started clearing out older, now-significantly-offtopic questions. I'm always putting my duties as a moderator first and personal gains second.</p>\n\n<p>I've worked with Stack Overflow moderators over the last 10 months or so and I know how much work is involved and how complex and/or tedious certain issues can be. I think I'm up to the challenge. I have all the requisite badges (including the two that were dropped from the criteria) and I'm <a href=\"http://meta.stackoverflow.com/users/155160/anna-lear\">quite active</a> on Meta. I also have the time.</p>\n\n<p>My SO rep leaves a bit to be desired, but I check in daily now both looking for questions to answer, questions that are possibly better asked on Programmers, and questions and answers that otherwise need attention. I gained roughly 2300 reputation since the last SO election, which perhaps isn't much but it's certainly a move in the right direction. :)</p>\n\n<p>I know there's been some tension between Programmers and Stack Overflow, and I think it'd be kinda neat to have a moderator who's very well familiar with both sites and the rest of the network. I think I could be that moderator. </p>\n\n<p>P.S. In the interest of full disclosure, I'm also a pro tem moderator on <a href=\"http://literature.stackexchange.com\">Literature</a>. It requires very little moderation however, unlike the bigger sites in the network.</p>\n\n<p><strong>Q&amp;A:</strong></p>\n\n<blockquote>\n  <p>Are you sure you want to handle the moderation load (and abuse by non-content users) of two sites at once?</p>\n</blockquote>\n\n<p>Yes, I'm sure. I have the time to devote to it and the abuse doesn't bother me much. Outright abuse is actually fairly rare and the rest of the time it's just people wondering why a decision has been made. I can always explain my thought process for any action as a moderator and I'm happy to revert actions that turned out to be in error, so I think things work out well in the end.</p>",
        "<p>Hey SO. I am Prasoon Saurav from India. I've been a member of SO since August 2009 and ever since then I am addicted to it.\nSO is a great place (best I guess) for getting your problems solved. I generally ask and answer questions related to C++. </p>\n\n<p>I have been moderating some programming communities at orkut and facebook and I have done pretty well :-) so indirectly I've a bit of experience as well. :P\nI think  I can be a good moderator because I have enough patience and ability to handle difficult situations. </p>\n\n<hr>\n\n<h3>Badge summary</h3>\n\n<p><strong>Community participation</strong> (non technical) badges earned :</p>\n\n<ul>\n<li>Strunk and White</li>\n<li>Pundit</li>\n<li>Sportsmanship</li>\n<li>Yearling</li>\n<li>Electorate</li>\n<li>Civic Duty </li>\n</ul>\n\n<hr>\n\n<p>Thanks</p>\n\n<p><strong>P.S</strong>: Moderation in temper is always a virtue; but moderation in principle is always a vice. --Thomas Paine </p>",
        "<h1>Makyen</h1>\n<p>Hello, I'm Makyen.</p>\n<p>I've been hooked on SO ever since answering a question 6 years ago.</p>\n<h2>Why me?</h2>\n<ul>\n<li>I believe moderators should be accountable to the community via Meta SO.</li>\n<li>I've been active in user-level moderation for years, with 41k+ close-votes, 5.4k+ flags on SO (99.7% helpful), and 6.2k+ reviews.</li>\n<li>I fight spam and rude/abusive (R/A) content, having reviewed 52k+ posts, raised 20k+ flags across SE (99.7% helpful), and am an administrator for <a href=\"//chat.stackexchange.com/rooms/11540\">Charcoal</a>.</li>\n<li>I've been active in chat moderation as a Room Owner for <a href=\"//chat.stackoverflow.com/rooms/41570\">SOCVR</a> (user-level moderation) and Charcoal HQ.</li>\n<li>I believe off-topic questions should be closed quickly, but users should be given the chance and encouragement to edit their questions to be on-topic, but inherently off-topic questions should be deleted or left for the Roomba script.</li>\n<li>I routinely question closure and deletion requests in SOCVR, when I feel they are for inappropriate reasons, or the question is on-topic.</li>\n<li>I believe we should quickly delete inappropriate content, spam/R/A, &amp; content that's causing harm.</li>\n</ul>\n<p><a href=\"//meta.stackoverflow.com/a/399297\">Questionnaire</a></p>",
        "<p>I'm Stephen Rauch, a committed and avid user who enjoys improving the quality of the site. I equally enjoy helping new users produce better posts, and deleting the irredeemable.</p>\n\n<h3>What do I bring?</h3>\n\n<ul>\n<li>I am here everyday. A lot. More on most weekends. I spend much of that time on moderating activities.</li>\n<li><p>I have an appetite for this work. In my short time here I have done considerable numbers of reviews, flags, edits and votes.</p>\n\n<p>eg: 2400 SO helpful post flags and 3300 more flags network wide.</p></li>\n</ul>\n\n<h3>What am I missing?</h3>\n\n<ul>\n<li><p>I have been here &lt; 15 months, that will pale compared to other nominees</p>\n\n<p>But in those 15 months I have been very active, primarily on SO, but also on several other sites</p></li>\n</ul>\n\n<h3>Philosophy?</h3>\n\n<ul>\n<li><p>Bullies and Trolls are incompatible with Be Nice!</p></li>\n<li><p>See a post that had some effort put into it, but it missed the mark of what is SO?</p>\n\n<p>Please leave a comment to help understand where the post went wrong</p></li>\n<li><p>Written negative feedback is more valuable than positive feedback</p>\n\n<p>But please be respectful and polite; an opinion on why and what would be better, should be readily at hand.</p></li>\n</ul>\n\n<p><a href=\"https://meta.stackoverflow.com/a/364500/7311767\">My answers are here</a>.</p>",
        "<p>I'm Cody Gray, and I'd like to nominate myself as a candidate for moderator.</p>\n\n<p>I feel the most serious issue facing Stack Overflow is <strong>a constant deluge of garbage that crowds out useful and interesting content</strong>. This problem truly affects everyone: answerers, askers, and even infrequent browsers.</p>\n\n<p>Although everyone has a role to play in helping to keep the site clean, that often isn't enough. We have too much cleaning to do, and too few people with the tools to handle it. <strong>I'm asking for you to entrust me with more and better \u2666 tools, so I can get out there and work on this problem</strong> (and others, as they arise, of course).</p>\n\n<p>I've been contributing here for a long time, monitoring a diverse (and changing) array of tags, and doing my best to moderate. I edit a <em>lot</em> of posts and thoroughly exercise my current privileges. I'm well-acquainted with our standards, and I have an excellent eye for quality. I'm also fair, reasonable, and committed.</p>\n\n<p>As an active participant on Meta, my posts there speak for themselves. Anyone who frequents Meta knows me and what I stand for. Anyone who doesn't should <a href=\"https://meta.stackoverflow.com/a/352628/\">see <strong>my answers to your questions</strong></a>.</p>",
        "<p><strong><a href=\"http://meta.stackoverflow.com/a/290107\">Thomas Owens' answers to your questions</a></strong></p>\n\n<hr>\n\n<p>I want to moderate Stack Overflow so I can handle the relationship with the other software development related sites, such as Programmers, Code Review, and Programming Puzzles &amp; Code Golf. As a current moderator on Programmers, I have familiarity with the procedures of moderation, the tools available to me, and a desire to make the network a better place.</p>\n\n<p>I will make it my mission to ensure that the high quality questions are migrated to the right site and the low quality questions are stopped dead in their tracks. I pledge to rain hell-fire down upon those who suggest that users cross-post to other sites, especially when they do not show signs of participation on those sites.</p>",
        "<p><strong><a href=\"http://meta.stackoverflow.com/a/290128\">Jon Clements' answers to your questions</a></strong></p>\n\n<hr>\n\n<p>I'm still here a (after yet another) year on with more experience of the community and with no less passion than I did before to help out where I can...</p>\n\n<p>My beliefs/actions are still the same:</p>\n\n<ul>\n<li>editing and improving posts where possible (no point closing a question if it's reasonably salvageable by an edit), participating in close (especially to tidy up duplicates)/re-open, (un)delete votes and assisting with flagged posts</li>\n<li>part of a community that's working on a system for a Python Wiki based on SO and building SO chat rooms</li>\n<li>have spent several years dealing with conflicts as an IRC Operator and Channel Services Admin</li>\n<li>being respectful, open-minded, patient and fair - just don't confuse that with being non-decisive or a \"walkover\"</li>\n<li>keep up to date with Meta (even if I don't say much that often)</li>\n</ul>",
        "<p>I'd like to <em>-ahem-</em> humbly nominate myself for a moderator position on Stack Overflow. Although I've been a member for more than two years (since May 2009), I've only been active starting May 2010. That said, I've been <em>extremely active</em>, and I do somehow have <em>two</em> Yearling badges!</p>\n\n<p>Anyway, first off, I'm <strong>19 years old</strong>, and I live in <strong>Singapore</strong>. So, I hail from the other side of the world \u2014 for many of you, anyway. If you think about timezone issues with users, questions and answers around the site, that may be a good or bad thing (I'm in UTC+8). I also happen to be <a href=\"http://data.stackexchange.com/stackoverflow/s/802/top-users-singapore\" rel=\"nofollow noreferrer\">the top user in my country by reputation</a>! I spend much more time on the site answering questions compared to other active Singaporean SE users like <a href=\"http://stackoverflow.com/users/313758/yi-jiang\">Yi Jiang</a>, but we all contribute in our own ways to the same site(s) as a whole, which is nice :)</p>\n\n<p>In terms of tags, you'll often find me answering questions about:</p>\n\n<ul>\n<li>Frontend web development, which includes <a href=\"/questions/tagged/html\" class=\"post-tag\" title=\"show questions tagged &#39;html&#39;\" rel=\"tag\">html</a><a href=\"/questions/tagged/css\" class=\"post-tag\" title=\"show questions tagged &#39;css&#39;\" rel=\"tag\">css</a><a href=\"/questions/tagged/javascript\" class=\"post-tag\" title=\"show questions tagged &#39;javascript&#39;\" rel=\"tag\">javascript</a><a href=\"/questions/tagged/jquery\" class=\"post-tag\" title=\"show questions tagged &#39;jquery&#39;\" rel=\"tag\">jquery</a>.</li>\n<li>Web development with <a href=\"/questions/tagged/php\" class=\"post-tag\" title=\"show questions tagged &#39;php&#39;\" rel=\"tag\">php</a>, where I'd been less active lately but I'm returning to.</li>\n<li><a href=\"/questions/tagged/ios\" class=\"post-tag\" title=\"show questions tagged &#39;ios&#39;\" rel=\"tag\">ios</a> development with <a href=\"/questions/tagged/objective-c\" class=\"post-tag\" title=\"show questions tagged &#39;objective-c&#39;\" rel=\"tag\">objective-c</a><a href=\"/questions/tagged/cocoa-touch\" class=\"post-tag\" title=\"show questions tagged &#39;cocoa-touch&#39;\" rel=\"tag\">cocoa-touch</a>.</li>\n<li><a href=\"/questions/tagged/c%23\" class=\"post-tag\" title=\"show questions tagged &#39;c#&#39;\" rel=\"tag\">c#</a><a href=\"/questions/tagged/.net\" class=\"post-tag\" title=\"show questions tagged &#39;.net&#39;\" rel=\"tag\">.net</a>, with which I have relatively less experience; don't ask me how I got that <a href=\"http://stackoverflow.com/badges/40/c-sharp?userid=106224\">gold</a> <a href=\"/questions/tagged/c%23\" class=\"post-tag\" title=\"show questions tagged &#39;c#&#39;\" rel=\"tag\">c#</a> badge...</li>\n<li>A little bit of <a href=\"/questions/tagged/actionscript-3\" class=\"post-tag\" title=\"show questions tagged &#39;actionscript-3&#39;\" rel=\"tag\">actionscript-3</a><a href=\"/questions/tagged/flash\" class=\"post-tag\" title=\"show questions tagged &#39;flash&#39;\" rel=\"tag\">flash</a> as well. Unless you recognize me from <a href=\"http://boltclock.newgrounds.com\" rel=\"nofollow noreferrer\">elsewhere on the Internet</a>, it may surprise you that I've known and used Flash longer than PHP! Mostly for animation, though.</li>\n</ul>\n\n<p>You may also, or otherwise, know me on Stack Overflow for:</p>\n\n<ul>\n<li>My \"specialty tag\", <a href=\"/questions/tagged/css-selectors\" class=\"post-tag\" title=\"show questions tagged &#39;css-selectors&#39;\" rel=\"tag\">css-selectors</a> (over 1000 questions total, <a href=\"http://stackoverflow.com/search?q=user:106224+%5Bcss-selectors%5D\">over 20% answered by me</a>)</li>\n<li>This question: <a href=\"http://stackoverflow.com/q/3009380/106224\">What&#39;s the shebang/hashbang (#!) in Facebook and new Twitter URLs for?</a></li>\n</ul>\n\n<p>I also carry out retags (<strong>lots and lots</strong> of retags on <a href=\"/questions/tagged/html5\" class=\"post-tag\" title=\"show questions tagged &#39;html5&#39;\" rel=\"tag\">html5</a><a href=\"/questions/tagged/css3\" class=\"post-tag\" title=\"show questions tagged &#39;css3&#39;\" rel=\"tag\">css3</a> questions...), formatting edits, link fixes and others such in the aforementioned tags, so it's not just answering questions. In fact, I'm recently finding myself commenting and editing more than answering \u2014 so much that I've been among <a href=\"http://stackoverflow.com/users?tab=editors&amp;filter=all\">the top 20 editors of all time</a> for a while!</p>\n\n<p>Not that less or more of either is better, of course. However, as a moderator I believe I can be more efficient than ever with post revisions and other janitorial duties, as I continue with my question-answering business. While I actively add fresh content to the site, I'd love to help out with cleaning and polishing our currently-existing posts. \"Dust tends to settle\", and all that jazz.</p>\n\n<p>I visit meta once in a while, but most of my time spent there is with questions and on voting on other posts. I'm trying to answer more meta questions!</p>\n\n<p>In terms of flags, my flag weight is about <strong>670</strong> right now. I'll often flag bad posts that I come across while doing cleanup work, as well as posts where drama is brewing. Admittedly, the mod queue has been quite a turn-off for me with that consistently large number on the top bar; that's one reason why I feel bad about raising flags at times. Consequently, as a regular user, I also feel bad about being unable to help the existing moderators in dealing with the mod queue directly.</p>\n\n<p>In short: I'm tired of raising flags (and I can't hold a candle to Brad Larson in that aspect!), and want to start resolving them. I imagine it'll be a challenge, again given that consistently large number up at the top, but I'd like to help out however I can.</p>\n\n<p>Another thing I felt I <em>had</em> to bring up: you probably know me for leaving comments almost everywhere. And, well, you may know me for being quite snarky with my comments sometimes. I'm very much aware of that. But I'm doing my best to change that over time, because I'm frankly not liking the way I'm sometimes treating others either. If <em>anything else</em>, my reputation is at stake too :P And besides, moderators are humans too, right? (Well, except <a href=\"http://stackoverflow.com/users/1288/bill-the-lizard\">Bill the Lizard</a>, maybe <em>-shrug-</em>)</p>\n\n<p>Oh and yes, I'll continue to be active here in the coming months. My visit streak is at <strong>348 days</strong> as of this nomination phase, just less than three weeks shy of a full year! The last time I broke that streak was last November, when I went under the knife after being found with appendicitis. I'm not usually this sick, but obviously that was one time I was definitely not supposed to be here ;) I'm OK now, though!</p>\n\n<p>Last but not least, at the end of the day I'm only sincerely hoping to improve myself so I can do a much more effective job at lending myself to improving the site for the rest of us. Whether I'm a moderator or not, though, I shall continue to contribute to the site to the best of my efforts and my ability. I'll definitely work to prove myself either way, and if I get chosen as a moderator this round or in the future, that'll certainly be another privilege, on top of one I already have of working with Stack Overflow itself.</p>"
      ],
      "semantic_context": "Column 'body' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 342 unique values. This column has no null values. Sample values include: \"<p>I am detail oriented and would like to moderate this site to keep it a clean and fun place to visit everyday.</p>\", \"<h1>Machavity</h1>\n<p>I'm Machavity and I'm running for moderator.</p>\n<h1>Why Me</h1>\n<p>I already spend a fair amount of time doing moderation around SO as it is. You can usually find me in <a href=\"https://chat.stackoverflow.com/rooms/41570/so-close-vote-reviewers\">SOCVR</a> helping with user-level moderation, or in <a href=\"https://chat.stackexchange.com/rooms/11540/charcoal-hq\">Charcoal</a> helping with spam (they got <a href=\"https://stackoverflow.blog/2020/06/25/how-does-spam-protection-work-on-stack-exchange/\">a blog entry recently</a>)</p>\n<p>I have been a Trusted User for quite a while now. I regularly review things and am deeply familiar with the site and moderation. I have a lot of reviews and helpful flags under my belt.</p>\n<p>I have a strong philosophy of curation (which is what I call the level below diamond moderation). I <a href=\"https://meta.stackoverflow.com/questions/367016/curation-and-cynicism-or-why-stack-overflow-sometimes-doesnt-seem-welcoming\">once wrote a Meta about it</a>.</p>\n<p>I regularly work with others in moderation activities and I'm not afraid to take criticism.</p>\n<h1>Why not me</h1>\n<p>I close things. A lot of things. I might delete them too.</p>\n<p><a href=\"https://meta.stackoverflow.com/a/399152\">My Meta questionnaire</a></p>\", \"<p>I was going to nominate myself in the last Stack Overflow election, but the rising reputation requirements quickly made that impossible. I see that as a good thing - I'm now far more prepared to be a Stack Overflow moderator than I was before.</p>\n\n<p>As some of you may know, I'm a moderator over on Stack Overflow's softer side, <a href=\"http://programmers.stackexchange.com\">Programmers</a>. You can check out my <a href=\"http://programmers.stackexchange.com/users/226/anna-lear?tab=activity\">activity stream</a> there and get a pretty good picture of my moderation style and commitment to meeting the guidelines set out in the <a href=\"http://blog.stackoverflow.com/2009/05/a-theory-of-moderation/\">Theory of Moderation</a>.</p>\n\n<p>I monitor flag queues daily, check 10k tools, suggested edits queue, and of course the front page itself. My reputation gain has significantly slowed down since I became a moderator and I even lost a bunch of rep once we started clearing out older, now-significantly-offtopic questions. I'm always putting my duties as a moderator first and personal gains second.</p>\n\n<p>I've worked with Stack Overflow moderators over the last 10 months or so and I know how much work is involved and how complex and/or tedious certain issues can be. I think I'm up to the challenge. I have all the requisite badges (including the two that were dropped from the criteria) and I'm <a href=\"http://meta.stackoverflow.com/users/155160/anna-lear\">quite active</a> on Meta. I also have the time.</p>\n\n<p>My SO rep leaves a bit to be desired, but I check in daily now both looking for questions to answer, questions that are possibly better asked on Programmers, and questions and answers that otherwise need attention. I gained roughly 2300 reputation since the last SO election, which perhaps isn't much but it's certainly a move in the right direction. :)</p>\n\n<p>I know there's been some tension between Programmers and Stack Overflow, and I think it'd be kinda neat to have a moderator who's very well familiar with both sites and the rest of the network. I think I could be that moderator. </p>\n\n<p>P.S. In the interest of full disclosure, I'm also a pro tem moderator on <a href=\"http://literature.stackexchange.com\">Literature</a>. It requires very little moderation however, unlike the bigger sites in the network.</p>\n\n<p><strong>Q&amp;A:</strong></p>\n\n<blockquote>\n  <p>Are you sure you want to handle the moderation load (and abuse by non-content users) of two sites at once?</p>\n</blockquote>\n\n<p>Yes, I'm sure. I have the time to devote to it and the abuse doesn't bother me much. Outright abuse is actually fairly rare and the rest of the time it's just people wondering why a decision has been made. I can always explain my thought process for any action as a moderator and I'm happy to revert actions that turned out to be in error, so I think things work out well in the end.</p>\", \"<p>Hey SO. I am Prasoon Saurav from India. I've been a member of SO since August 2009 and ever since then I am addicted to it.\nSO is a great place (best I guess) for getting your problems solved. I generally ask and answer questions related to C++. </p>\n\n<p>I have been moderating some programming communities at orkut and facebook and I have done pretty well :-) so indirectly I've a bit of experience as well. :P\nI think  I can be a good moderator because I have enough patience and ability to handle difficult situations. </p>\n\n<hr>\n\n<h3>Badge summary</h3>\n\n<p><strong>Community participation</strong> (non technical) badges earned :</p>\n\n<ul>\n<li>Strunk and White</li>\n<li>Pundit</li>\n<li>Sportsmanship</li>\n<li>Yearling</li>\n<li>Electorate</li>\n<li>Civic Duty </li>\n</ul>\n\n<hr>\n\n<p>Thanks</p>\n\n<p><strong>P.S</strong>: Moderation in temper is always a virtue; but moderation in principle is always a vice. --Thomas Paine </p>\", \"<h1>Makyen</h1>\n<p>Hello, I'm Makyen.</p>\n<p>I've been hooked on SO ever since answering a question 6 years ago.</p>\n<h2>Why me?</h2>\n<ul>\n<li>I believe moderators should be accountable to the community via Meta SO.</li>\n<li>I've been active in user-level moderation for years, with 41k+ close-votes, 5.4k+ flags on SO (99.7% helpful), and 6.2k+ reviews.</li>\n<li>I fight spam and rude/abusive (R/A) content, having reviewed 52k+ posts, raised 20k+ flags across SE (99.7% helpful), and am an administrator for <a href=\"//chat.stackexchange.com/rooms/11540\">Charcoal</a>.</li>\n<li>I've been active in chat moderation as a Room Owner for <a href=\"//chat.stackoverflow.com/rooms/41570\">SOCVR</a> (user-level moderation) and Charcoal HQ.</li>\n<li>I believe off-topic questions should be closed quickly, but users should be given the chance and encouragement to edit their questions to be on-topic, but inherently off-topic questions should be deleted or left for the Roomba script.</li>\n<li>I routinely question closure and deletion requests in SOCVR, when I feel they are for inappropriate reasons, or the question is on-topic.</li>\n<li>I believe we should quickly delete inappropriate content, spam/R/A, &amp; content that's causing harm.</li>\n</ul>\n<p><a href=\"//meta.stackoverflow.com/a/399297\">Questionnaire</a></p>\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "accepted_answer_id",
      "data_type": "object",
      "total_count": 342,
      "null_count": 342,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'accepted_answer_id' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "answer_count",
      "data_type": "object",
      "total_count": 342,
      "null_count": 342,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'answer_count' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "comment_count",
      "data_type": "NUMERIC",
      "total_count": 342,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 69,
      "min_value": "0",
      "max_value": "122",
      "avg_value": 20.05263157894737,
      "std_dev": 19.574435167229407,
      "example_values": [
        "0.0",
        "6.0",
        "15.0",
        "28.0",
        "122.0"
      ],
      "semantic_context": "Column 'comment_count' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is NUMERIC. It has moderate cardinality with 69 unique values. This column has no null values. Sample numeric values include: 0.0, 6.0, 15.0, 28.0, 122.0. Values range from 0 to 122. The average value is 20.05. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "community_owned_date",
      "data_type": "DATETIME",
      "total_count": 342,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 342,
      "min_value": "2011-01-18 22:02:01.400000+00:00",
      "max_value": "2021-10-18 19:59:07.080000+00:00",
      "example_values": [
        "2011-01-18 22:02:01.400000+00:00",
        "2011-01-18 22:55:00.247000+00:00",
        "2011-01-20 15:14:28.720000+00:00",
        "2011-11-09 07:46:53.047000+00:00",
        "2013-02-26 17:54:17.620000+00:00",
        "2014-02-11 21:47:17.767000+00:00",
        "2015-04-07 15:49:19.267000+00:00",
        "2016-11-07 20:08:07.870000+00:00",
        "2018-03-13 06:51:22.760000+00:00",
        "2021-10-18 19:59:07.080000+00:00"
      ],
      "semantic_context": "Column 'community_owned_date' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 342 unique values. This column has no null values. Sample dates include: 2011-01-18 22:02:01.400000+00:00, 2011-01-18 22:55:00.247000+00:00, 2011-01-20 15:14:28.720000+00:00. Date values range from 2011-01-18 22:02:01.400000+00:00 to 2021-10-18 19:59:07.080000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 342,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 342,
      "min_value": "2011-01-18 22:02:01.400000+00:00",
      "max_value": "2021-10-18 19:59:07.080000+00:00",
      "example_values": [
        "2011-01-18 22:02:01.400000+00:00",
        "2011-01-18 22:55:00.247000+00:00",
        "2011-01-20 15:14:28.720000+00:00",
        "2011-11-09 07:46:53.047000+00:00",
        "2013-02-26 17:54:17.620000+00:00",
        "2014-02-11 21:47:17.767000+00:00",
        "2015-04-07 15:49:19.267000+00:00",
        "2016-11-07 20:08:07.870000+00:00",
        "2018-03-13 06:51:22.760000+00:00",
        "2021-10-18 19:59:07.080000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 342 unique values. This column has no null values. Sample dates include: 2011-01-18 22:02:01.400000+00:00, 2011-01-18 22:55:00.247000+00:00, 2011-01-20 15:14:28.720000+00:00. Date values range from 2011-01-18 22:02:01.400000+00:00 to 2021-10-18 19:59:07.080000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "favorite_count",
      "data_type": "object",
      "total_count": 342,
      "null_count": 342,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'favorite_count' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "last_activity_date",
      "data_type": "DATETIME",
      "total_count": 342,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 342,
      "min_value": "2011-01-18 22:02:01.400000+00:00",
      "max_value": "2021-10-21 02:36:23.673000+00:00",
      "example_values": [
        "2011-01-18 22:02:01.400000+00:00",
        "2011-01-18 23:35:37.527000+00:00",
        "2011-01-25 22:36:06.403000+00:00",
        "2011-11-15 16:28:14.200000+00:00",
        "2013-02-28 23:43:38.653000+00:00",
        "2014-02-19 20:58:57.180000+00:00",
        "2015-04-17 19:36:41.020000+00:00",
        "2016-11-07 20:08:07.870000+00:00",
        "2018-03-16 12:06:09.887000+00:00",
        "2021-10-21 02:36:23.673000+00:00"
      ],
      "semantic_context": "Column 'last_activity_date' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 342 unique values. This column has no null values. Sample dates include: 2011-01-18 22:02:01.400000+00:00, 2011-01-18 23:35:37.527000+00:00, 2011-01-25 22:36:06.403000+00:00. Date values range from 2011-01-18 22:02:01.400000+00:00 to 2021-10-21 02:36:23.673000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "last_edit_date",
      "data_type": "DATETIME",
      "total_count": 342,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 300,
      "min_value": "2011-01-18 22:02:01.400000+00:00",
      "max_value": "2021-10-21 02:36:23.673000+00:00",
      "example_values": [
        "2011-01-18 22:02:01.400000+00:00",
        "2011-01-18 23:57:14.053000+00:00",
        "2011-01-27 20:11:04.100000+00:00",
        "2012-06-06 22:11:45.280000+00:00",
        "2014-02-11 16:44:25.053000+00:00",
        "2014-04-25 11:18:23.540000+00:00",
        "2015-04-17 19:36:41.020000+00:00",
        "2016-11-07 20:08:07.870000+00:00",
        "2018-03-16 12:06:09.887000+00:00",
        "2021-10-21 02:36:23.673000+00:00"
      ],
      "semantic_context": "Column 'last_edit_date' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is DATETIME. It contains 300 distinct values. This column has no null values. Sample dates include: 2011-01-18 22:02:01.400000+00:00, 2011-01-18 23:57:14.053000+00:00, 2011-01-27 20:11:04.100000+00:00. Date values range from 2011-01-18 22:02:01.400000+00:00 to 2021-10-21 02:36:23.673000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "last_editor_display_name",
      "data_type": "STRING",
      "total_count": 342,
      "null_count": 337,
      "null_percentage": 98.53801169590643,
      "distinct_count": 4,
      "example_values": [
        "user3956566",
        "user529758",
        "user2140173",
        "user4639281"
      ],
      "top_values": {
        "user3956566": 2,
        "user529758": 1,
        "user2140173": 1,
        "user4639281": 1
      },
      "semantic_context": "Column 'last_editor_display_name' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is STRING. It is a low-cardinality categorical field with 4 unique values. This column is mostly empty with 98.5% null values. Sample values include: \"user3956566\", \"user529758\", \"user2140173\", \"user4639281\". The most common values are: user3956566, user529758, user2140173. This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "last_editor_user_id",
      "data_type": "NUMERIC",
      "total_count": 342,
      "null_count": 5,
      "null_percentage": 1.461988304093567,
      "distinct_count": 190,
      "min_value": "-1.0",
      "max_value": "7311767.0",
      "avg_value": 762424.2255192879,
      "std_dev": 1332940.7586500421,
      "example_values": [
        "-1.0",
        "1114.0",
        "207335.0",
        "900873.0",
        "7311767.0"
      ],
      "semantic_context": "Column 'last_editor_user_id' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is NUMERIC. It contains 190 distinct values. About 1.5% of values are null. Sample numeric values include: -1.0, 1114.0, 207335.0, 900873.0, 7311767.0. Values range from -1.0 to 7311767.0. The average value is 762424.23."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "owner_display_name",
      "data_type": "STRING",
      "total_count": 342,
      "null_count": 336,
      "null_percentage": 98.24561403508771,
      "distinct_count": 4,
      "example_values": [
        "user3956566",
        "user529758",
        "user2140173",
        "user4639281"
      ],
      "top_values": {
        "user3956566": 3,
        "user529758": 1,
        "user2140173": 1,
        "user4639281": 1
      },
      "semantic_context": "Column 'owner_display_name' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is STRING. It is a low-cardinality categorical field with 4 unique values. This column is mostly empty with 98.2% null values. Sample values include: \"user3956566\", \"user529758\", \"user2140173\", \"user4639281\". The most common values are: user3956566, user529758, user2140173. This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "owner_user_id",
      "data_type": "NUMERIC",
      "total_count": 342,
      "null_count": 6,
      "null_percentage": 1.7543859649122806,
      "distinct_count": 219,
      "min_value": "13.0",
      "max_value": "7311767.0",
      "avg_value": 959464.5505952381,
      "std_dev": 1322350.256354673,
      "example_values": [
        "13.0",
        "121828.5",
        "426671.0",
        "1246852.75",
        "7311767.0"
      ],
      "semantic_context": "Column 'owner_user_id' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is NUMERIC. It contains 219 distinct values. About 1.8% of values are null. Sample numeric values include: 13.0, 121828.5, 426671.0, 1246852.75, 7311767.0. Values range from 13.0 to 7311767.0. The average value is 959464.55."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "parent_id",
      "data_type": "object",
      "total_count": 342,
      "null_count": 342,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'parent_id' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "post_type_id",
      "data_type": "NUMERIC",
      "total_count": 342,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "6",
      "max_value": "6",
      "avg_value": 6.0,
      "std_dev": 0.0,
      "example_values": [
        "6.0"
      ],
      "semantic_context": "Column 'post_type_id' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 6.0. Values range from 6 to 6. The average value is 6.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 342,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 225,
      "min_value": "-166",
      "max_value": "15940",
      "avg_value": 1571.7251461988303,
      "std_dev": 2679.221209208044,
      "example_values": [
        "-166.0",
        "0.0",
        "297.0",
        "1979.0",
        "15940.0"
      ],
      "semantic_context": "Column 'score' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is NUMERIC. It contains 225 distinct values. This column has no null values. Sample numeric values include: -166.0, 0.0, 297.0, 1979.0, 15940.0. Values range from -166 to 15940. The average value is 1571.73. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "tags",
      "data_type": "object",
      "total_count": 342,
      "null_count": 342,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'tags' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_moderator_nomination",
      "column_name": "view_count",
      "data_type": "object",
      "total_count": 342,
      "null_count": 342,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'view_count' from table 'posts_moderator_nomination' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 167,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 167,
      "min_value": "3609896",
      "max_value": "6111551",
      "avg_value": 5119249.299401198,
      "std_dev": 724736.3366531748,
      "example_values": [
        "3609896.0",
        "4915650.5",
        "5142775.0",
        "5702296.0",
        "6111551.0"
      ],
      "semantic_context": "Column 'id' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 167 unique values. This column has no null values. Sample numeric values include: 3609896.0, 4915650.5, 5142775.0, 5702296.0, 6111551.0. Values range from 3609896 to 6111551. The average value is 5119249.30."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "title",
      "data_type": "object",
      "total_count": 167,
      "null_count": 167,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'title' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "body",
      "data_type": "STRING",
      "total_count": 167,
      "null_count": 56,
      "null_percentage": 33.532934131736525,
      "distinct_count": 109,
      "example_values": [
        "<p>Please do not use this tag.</p>\n\n<p>If a question is off-topic and you have enough reputation, simply vote to close it. If you do not have enough reputation and you feel the question is not likely to be closed in a timely manner, flag it for moderator attention.</p>",
        "Microsoft Dynamics CRM is a multi-lingual Customer Relationship Management software package developed by Microsoft. It has built in support for Sales, Marketing and Service.",
        "<p><a href=\"http://en.wikipedia.org/wiki/Argument-dependent_name_lookup\" rel=\"nofollow\">ADL</a> is mostly associated with <a href=\"/tags/c++/info\">C++</a>.</p>",
        "<p>JibGrid is a silverlight grid control available on Codeplex (http://jibgrid.codeplex.com/) that provides nice features for conditional filtering of the data.</p>",
        "Html Agility Pack is an HTML parser for the .NET platform. It is very tolerant to \"real world\" malformed HTML.",
        "<p>Html Agility Pack (a.k.a \"HAP\") is an agile HTML parser that builds a read/write DOM and supports plain XPATH or XSLT (you actually don't HAVE to understand XPATH nor XSLT to use it, don't worry...). It is a .NET code library that allows you to parse \"out of the web\" HTML files. The parser is very tolerant with \"real world\" malformed HTML. The object model is very similar to what proposes System.Xml, but for HTML documents (or streams).</p>\n\n<p>Html Agility Pack now supports Linq to Objects (via a LINQ to Xml Like interface).</p>\n\n<p>Sample applications:</p>\n\n<ul>\n<li>Page fixing or generation. You can fix a page the way you want, modify the DOM, add nodes, copy nodes, well... you name it.</li>\n<li>Web scanners. You can easily get to img/src or a/hrefs with a bunch XPATH queries.</li>\n<li>Web scrapers. You can easily scrap any existing web page into an RSS feed for example, with just an XSLT file serving as the binding. Examples are is provided.</li>\n</ul>\n\n<p>There is no dependency on anything else than .Net's XPATH implementation. There is no dependency on Internet Explorer's MSHTML dll or W3C's HTML tidy or ActiveX / COM object, or anything like that. There is also no adherence to XHTML or XML, although you can actually produce XML using the tool.</p>\n\n<p>The binaries and source code can be downloaded from CodePlex here: <a href=\"http://htmlagilitypack.codeplex.com/\" rel=\"nofollow\">http://htmlagilitypack.codeplex.com/</a></p>",
        "A no javascript question is one which asks about creating web pages which will work on browsers without javascript enabled.",
        "JibGrid is a silverlight grid control that provides features for conditional filtering of the data.",
        "<p>DSP is an acronym for digital signal processing.  Common DSP operations are filtering, convolution, and Fourier transforms.  DSP arises in audio, image, and scientific data processing.</p>",
        "<p>Description</p>\n\n<p>The Microsoft UI Automation Framework is a part of the Microsoft .Net Framework (from 3.0 on) that enables elements on the Windows Desktop to be manipulated programmatically regardless of the technology they were originally created by - although typically they will be WinForms, WPF or Silverlight applications. </p>\n\n<p>The principle uses of the UIAutomation Framework are creating Screen Readers, and Test Automation.</p>\n\n<p>Resources</p>\n\n<p>UIAutomation </p>"
      ],
      "semantic_context": "Column 'body' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is STRING. It contains 109 distinct values. About 33.5% of values are null. Sample values include: \"<p>Please do not use this tag.</p>\n\n<p>If a question is off-topic and you have enough reputation, simply vote to close it. If you do not have enough reputation and you feel the question is not likely to be closed in a timely manner, flag it for moderator attention.</p>\", \"Microsoft Dynamics CRM is a multi-lingual Customer Relationship Management software package developed by Microsoft. It has built in support for Sales, Marketing and Service.\", \"<p><a href=\"http://en.wikipedia.org/wiki/Argument-dependent_name_lookup\" rel=\"nofollow\">ADL</a> is mostly associated with <a href=\"/tags/c++/info\">C++</a>.</p>\", \"<p>JibGrid is a silverlight grid control available on Codeplex (http://jibgrid.codeplex.com/) that provides nice features for conditional filtering of the data.</p>\", \"Html Agility Pack is an HTML parser for the .NET platform. It is very tolerant to \"real world\" malformed HTML.\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "accepted_answer_id",
      "data_type": "object",
      "total_count": 167,
      "null_count": 167,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'accepted_answer_id' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "answer_count",
      "data_type": "object",
      "total_count": 167,
      "null_count": 167,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'answer_count' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "comment_count",
      "data_type": "NUMERIC",
      "total_count": 167,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 2,
      "min_value": "0",
      "max_value": "1",
      "avg_value": 0.005988023952095809,
      "std_dev": 0.07738232325341368,
      "example_values": [
        "0.0",
        "1.0"
      ],
      "semantic_context": "Column 'comment_count' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 2 unique values. This column has no null values. Sample numeric values include: 0.0, 1.0. Values range from 0 to 1. The average value is 0.01. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "community_owned_date",
      "data_type": "DATETIME",
      "total_count": 167,
      "null_count": 164,
      "null_percentage": 98.20359281437125,
      "distinct_count": 3,
      "min_value": "2011-01-18 22:02:35.490000+00:00",
      "max_value": "2011-01-18 22:13:11.890000+00:00",
      "example_values": [
        "2011-01-18 22:02:35.490000+00:00",
        "2011-01-18 22:03:04.133000+00:00",
        "2011-01-18 22:13:11.890000+00:00"
      ],
      "semantic_context": "Column 'community_owned_date' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 3 unique values. This column is mostly empty with 98.2% null values. Sample dates include: 2011-01-18 22:02:35.490000+00:00, 2011-01-18 22:03:04.133000+00:00, 2011-01-18 22:13:11.890000+00:00. Date values range from 2011-01-18 22:02:35.490000+00:00 to 2011-01-18 22:13:11.890000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 167,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 88,
      "min_value": "2010-07-22 18:39:58.787000+00:00",
      "max_value": "2011-05-24 13:56:49.893000+00:00",
      "example_values": [
        "2010-07-22 18:39:58.787000+00:00",
        "2010-09-10 20:50:55.843000+00:00",
        "2011-01-18 22:13:11.890000+00:00",
        "2011-02-16 03:27:20.400000+00:00",
        "2011-02-23 17:00:07.353000+00:00",
        "2011-03-07 01:36:46.377000+00:00",
        "2011-04-06 11:02:26.840000+00:00",
        "2011-04-22 12:44:49.420000+00:00",
        "2011-05-09 22:27:33.963000+00:00",
        "2011-05-24 13:56:49.893000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is DATETIME. It has moderate cardinality with 88 unique values. This column has no null values. Sample dates include: 2010-07-22 18:39:58.787000+00:00, 2010-09-10 20:50:55.843000+00:00, 2011-01-18 22:13:11.890000+00:00. Date values range from 2010-07-22 18:39:58.787000+00:00 to 2011-05-24 13:56:49.893000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "favorite_count",
      "data_type": "object",
      "total_count": 167,
      "null_count": 167,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'favorite_count' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "last_activity_date",
      "data_type": "DATETIME",
      "total_count": 167,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 135,
      "min_value": "2010-08-01 09:51:37.270000+00:00",
      "max_value": "2011-05-30 19:30:22.523000+00:00",
      "example_values": [
        "2010-08-01 09:51:37.270000+00:00",
        "2010-10-18 16:28:13.220000+00:00",
        "2011-02-06 19:49:09.317000+00:00",
        "2011-02-16 22:42:24.563000+00:00",
        "2011-02-25 15:35:27.087000+00:00",
        "2011-03-10 08:15:42.303000+00:00",
        "2011-04-08 18:02:25.570000+00:00",
        "2011-04-28 05:02:49.923000+00:00",
        "2011-05-11 08:09:55.177000+00:00",
        "2011-05-30 19:30:22.523000+00:00"
      ],
      "semantic_context": "Column 'last_activity_date' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is DATETIME. It contains 135 distinct values. This column has no null values. Sample dates include: 2010-08-01 09:51:37.270000+00:00, 2010-10-18 16:28:13.220000+00:00, 2011-02-06 19:49:09.317000+00:00. Date values range from 2010-08-01 09:51:37.270000+00:00 to 2011-05-30 19:30:22.523000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "last_edit_date",
      "data_type": "DATETIME",
      "total_count": 167,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 131,
      "min_value": "2010-08-01 09:51:37.270000+00:00",
      "max_value": "2014-04-24 17:07:48.717000+00:00",
      "example_values": [
        "2010-08-01 09:51:37.270000+00:00",
        "2010-10-18 16:28:13.220000+00:00",
        "2011-02-06 19:49:09.317000+00:00",
        "2011-02-16 22:42:24.563000+00:00",
        "2011-02-25 15:35:27.087000+00:00",
        "2011-03-16 16:01:06.410000+00:00",
        "2011-04-09 14:51:39.647000+00:00",
        "2011-04-30 20:13:12.730000+00:00",
        "2011-05-15 13:47:05.170000+00:00",
        "2014-04-24 17:07:48.717000+00:00"
      ],
      "semantic_context": "Column 'last_edit_date' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is DATETIME. It contains 131 distinct values. This column has no null values. Sample dates include: 2010-08-01 09:51:37.270000+00:00, 2010-10-18 16:28:13.220000+00:00, 2011-02-06 19:49:09.317000+00:00. Date values range from 2010-08-01 09:51:37.270000+00:00 to 2014-04-24 17:07:48.717000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "last_editor_display_name",
      "data_type": "STRING",
      "total_count": 167,
      "null_count": 165,
      "null_percentage": 98.80239520958084,
      "distinct_count": 1,
      "example_values": [
        "Roger Pate"
      ],
      "top_values": {
        "Roger Pate": 2
      },
      "semantic_context": "Column 'last_editor_display_name' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is STRING. It contains a single constant value. This column is mostly empty with 98.8% null values. Sample values include: \"Roger Pate\". The most common values are: Roger Pate. This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "last_editor_user_id",
      "data_type": "NUMERIC",
      "total_count": 167,
      "null_count": 2,
      "null_percentage": 1.1976047904191618,
      "distinct_count": 59,
      "min_value": "-1.0",
      "max_value": "726755.0",
      "avg_value": 133970.60606060605,
      "std_dev": 188216.27816633976,
      "example_values": [
        "-1.0",
        "21234.0",
        "215752.0",
        "726755.0"
      ],
      "semantic_context": "Column 'last_editor_user_id' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It has moderate cardinality with 59 unique values. About 1.2% of values are null. Sample numeric values include: -1.0, 21234.0, 215752.0, 726755.0. Values range from -1.0 to 726755.0. The average value is 133970.61."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "owner_display_name",
      "data_type": "object",
      "total_count": 167,
      "null_count": 167,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'owner_display_name' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "owner_user_id",
      "data_type": "NUMERIC",
      "total_count": 167,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 4,
      "min_value": "-1",
      "max_value": "525868",
      "avg_value": 4755.125748502994,
      "std_dev": 45318.93654206119,
      "example_values": [
        "-1.0",
        "525868.0"
      ],
      "semantic_context": "Column 'owner_user_id' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 4 unique values. This column has no null values. Sample numeric values include: -1.0, 525868.0. Values range from -1 to 525868. The average value is 4755.13."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "parent_id",
      "data_type": "object",
      "total_count": 167,
      "null_count": 167,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'parent_id' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "post_type_id",
      "data_type": "NUMERIC",
      "total_count": 167,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "3",
      "max_value": "3",
      "avg_value": 3.0,
      "std_dev": 0.0,
      "example_values": [
        "3.0"
      ],
      "semantic_context": "Column 'post_type_id' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 3.0. Values range from 3 to 3. The average value is 3.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 167,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'score' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "tags",
      "data_type": "object",
      "total_count": 167,
      "null_count": 167,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'tags' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_orphaned_tag_wiki",
      "column_name": "view_count",
      "data_type": "object",
      "total_count": 167,
      "null_count": 167,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'view_count' from table 'posts_orphaned_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 2,
      "min_value": "15111874",
      "max_value": "16443138",
      "avg_value": 15777506.0,
      "std_dev": 941345.801949528,
      "example_values": [
        "15111874.0",
        "15444690.0",
        "15777506.0",
        "16110322.0",
        "16443138.0"
      ],
      "semantic_context": "Column 'id' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 2 unique values. This column has no null values. Sample numeric values include: 15111874.0, 15444690.0, 15777506.0, 16110322.0, 16443138.0. Values range from 15111874 to 16443138. The average value is 15777506.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "title",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'title' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "body",
      "data_type": "STRING",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 2,
      "example_values": [
        "<h3>What is edit questions and answers?</h3>\n\n<p>We believe in the power of community editing. That means once you've generated enough reputation, we trust you to edit <em>anything</em> in the system without it going through the peer review system. Not just your posts\u2014<em>anyone's posts!</em></p>\n\n<h3>When should I edit posts?</h3>\n\n<p>Any time you feel you can make the post better, and are inclined to do so. Editing is encouraged!</p>\n\n<p>Some common reasons to edit are:</p>\n\n<ul>\n<li>to fix grammatical or spelling mistakes</li>\n<li>to clarify the meaning of a post without changing it</li>\n<li>to correct minor mistakes or add addendums / updates as the post ages</li>\n<li>to add related resources or hyperlinks</li>\n</ul>\n\n<p>Try to make the post substantively better when you edit, not just change a single character. Tiny, trivial edits are discouraged.</p>\n\n<h3>How do I edit posts?</h3>\n\n<p>The <code>edit</code> link is available under each post.</p>\n\n<h3>What happens when I edit a post?</h3>\n\n<p>The post will be updated to show the latest editor, as well as the original author. All edits are saved and tracked in a revision history with attribution to each editor. </p>\n\n<p>The revision history can be viewed by clicking the date and time next to the edited post (e.g. \"edited 3 days ago\").</p>\n\n<p>Editing a post also bumps the question to the top of the homepage. Too many edits can also force a post into <a href=\"/privileges/community-wiki\">community wiki mode</a>. Make your edits count.</p>\n\n<h3>Reviewing suggested edits</h3>\n\n<p>In addition, users with this privilege level also get access to the suggested edits queue. The queue has a list of posts which have been edited upon by users who don't have edit privileges. This queue can be accessed over at the <a href=\"/review/suggested-edits\">suggested edits tab in the review section</a>.<br>\nUsers with this privilege level get access to the <a href=\"/review/low-quality-posts\">Low Quality Posts</a> list where they can improve the low quality posts, or suggest they are deleted.</p>",
        "<h3>What is retagging a question?</h3>\n\n<p>A tag is a keyword or label that categorizes your question with other, similar questions. When you retag a question, you're correcting the existing tags on the question. </p>\n\n<p>When you receive this privilege you get the ability to retag posts without having to go through the peer review system (this applied to edits that change tags and <em>nothing else</em>). When you reach 2000 reputation <a href=\"/privileges/edit\">all of your edits will bypass the peer review system</a>.</p>\n\n<h3>When should I retag a question?</h3>\n\n<p>Questions should be tagged correctly so others can more easily find them and answer them. Retag when a community member has:</p>\n\n<ul>\n<li>chosen incorrect tags that don't properly represent the actual question topic</li>\n<li>added excess, superfluous tags</li>\n<li>created an inappropriate new tag</li>\n<li>made a mistake with tags, such as using spaces instead of hyphens</li>\n</ul>\n\n<h3>How do I retag a question?</h3>\n\n<p>Click the <code>edit</code> menu option under the post and add/remove tags.</p>\n\n<h3>What badges can I earn?</h3>\n\n<p>When you retag a post for the first time, you will earn the Organizer badge:</p>\n\n<p><img src=\"https://i.stack.imgur.com/qZOgn.png\" alt=\"organizer badge\"></p>"
      ],
      "top_values": {
        "<h3>What is edit questions and answers?</h3>\n\n<p>We believe in the power of community editing. That means once you've generated enough reputation, we trust you to edit <em>anything</em> in the system without it going through the peer review system. Not just your posts\u2014<em>anyone's posts!</em></p>\n\n<h3>When should I edit posts?</h3>\n\n<p>Any time you feel you can make the post better, and are inclined to do so. Editing is encouraged!</p>\n\n<p>Some common reasons to edit are:</p>\n\n<ul>\n<li>to fix grammatical or spelling mistakes</li>\n<li>to clarify the meaning of a post without changing it</li>\n<li>to correct minor mistakes or add addendums / updates as the post ages</li>\n<li>to add related resources or hyperlinks</li>\n</ul>\n\n<p>Try to make the post substantively better when you edit, not just change a single character. Tiny, trivial edits are discouraged.</p>\n\n<h3>How do I edit posts?</h3>\n\n<p>The <code>edit</code> link is available under each post.</p>\n\n<h3>What happens when I edit a post?</h3>\n\n<p>The post will be updated to show the latest editor, as well as the original author. All edits are saved and tracked in a revision history with attribution to each editor. </p>\n\n<p>The revision history can be viewed by clicking the date and time next to the edited post (e.g. \"edited 3 days ago\").</p>\n\n<p>Editing a post also bumps the question to the top of the homepage. Too many edits can also force a post into <a href=\"/privileges/community-wiki\">community wiki mode</a>. Make your edits count.</p>\n\n<h3>Reviewing suggested edits</h3>\n\n<p>In addition, users with this privilege level also get access to the suggested edits queue. The queue has a list of posts which have been edited upon by users who don't have edit privileges. This queue can be accessed over at the <a href=\"/review/suggested-edits\">suggested edits tab in the review section</a>.<br>\nUsers with this privilege level get access to the <a href=\"/review/low-quality-posts\">Low Quality Posts</a> list where they can improve the low quality posts, or suggest they are deleted.</p>": 1,
        "<h3>What is retagging a question?</h3>\n\n<p>A tag is a keyword or label that categorizes your question with other, similar questions. When you retag a question, you're correcting the existing tags on the question. </p>\n\n<p>When you receive this privilege you get the ability to retag posts without having to go through the peer review system (this applied to edits that change tags and <em>nothing else</em>). When you reach 2000 reputation <a href=\"/privileges/edit\">all of your edits will bypass the peer review system</a>.</p>\n\n<h3>When should I retag a question?</h3>\n\n<p>Questions should be tagged correctly so others can more easily find them and answer them. Retag when a community member has:</p>\n\n<ul>\n<li>chosen incorrect tags that don't properly represent the actual question topic</li>\n<li>added excess, superfluous tags</li>\n<li>created an inappropriate new tag</li>\n<li>made a mistake with tags, such as using spaces instead of hyphens</li>\n</ul>\n\n<h3>How do I retag a question?</h3>\n\n<p>Click the <code>edit</code> menu option under the post and add/remove tags.</p>\n\n<h3>What badges can I earn?</h3>\n\n<p>When you retag a post for the first time, you will earn the Organizer badge:</p>\n\n<p><img src=\"https://i.stack.imgur.com/qZOgn.png\" alt=\"organizer badge\"></p>": 1
      },
      "semantic_context": "Column 'body' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is STRING. It is a low-cardinality categorical field with 2 unique values. This column has no null values. Sample values include: \"<h3>What is edit questions and answers?</h3>\n\n<p>We believe in the power of community editing. That means once you've generated enough reputation, we trust you to edit <em>anything</em> in the system without it going through the peer review system. Not just your posts\u2014<em>anyone's posts!</em></p>\n\n<h3>When should I edit posts?</h3>\n\n<p>Any time you feel you can make the post better, and are inclined to do so. Editing is encouraged!</p>\n\n<p>Some common reasons to edit are:</p>\n\n<ul>\n<li>to fix grammatical or spelling mistakes</li>\n<li>to clarify the meaning of a post without changing it</li>\n<li>to correct minor mistakes or add addendums / updates as the post ages</li>\n<li>to add related resources or hyperlinks</li>\n</ul>\n\n<p>Try to make the post substantively better when you edit, not just change a single character. Tiny, trivial edits are discouraged.</p>\n\n<h3>How do I edit posts?</h3>\n\n<p>The <code>edit</code> link is available under each post.</p>\n\n<h3>What happens when I edit a post?</h3>\n\n<p>The post will be updated to show the latest editor, as well as the original author. All edits are saved and tracked in a revision history with attribution to each editor. </p>\n\n<p>The revision history can be viewed by clicking the date and time next to the edited post (e.g. \"edited 3 days ago\").</p>\n\n<p>Editing a post also bumps the question to the top of the homepage. Too many edits can also force a post into <a href=\"/privileges/community-wiki\">community wiki mode</a>. Make your edits count.</p>\n\n<h3>Reviewing suggested edits</h3>\n\n<p>In addition, users with this privilege level also get access to the suggested edits queue. The queue has a list of posts which have been edited upon by users who don't have edit privileges. This queue can be accessed over at the <a href=\"/review/suggested-edits\">suggested edits tab in the review section</a>.<br>\nUsers with this privilege level get access to the <a href=\"/review/low-quality-posts\">Low Quality Posts</a> list where they can improve the low quality posts, or suggest they are deleted.</p>\", \"<h3>What is retagging a question?</h3>\n\n<p>A tag is a keyword or label that categorizes your question with other, similar questions. When you retag a question, you're correcting the existing tags on the question. </p>\n\n<p>When you receive this privilege you get the ability to retag posts without having to go through the peer review system (this applied to edits that change tags and <em>nothing else</em>). When you reach 2000 reputation <a href=\"/privileges/edit\">all of your edits will bypass the peer review system</a>.</p>\n\n<h3>When should I retag a question?</h3>\n\n<p>Questions should be tagged correctly so others can more easily find them and answer them. Retag when a community member has:</p>\n\n<ul>\n<li>chosen incorrect tags that don't properly represent the actual question topic</li>\n<li>added excess, superfluous tags</li>\n<li>created an inappropriate new tag</li>\n<li>made a mistake with tags, such as using spaces instead of hyphens</li>\n</ul>\n\n<h3>How do I retag a question?</h3>\n\n<p>Click the <code>edit</code> menu option under the post and add/remove tags.</p>\n\n<h3>What badges can I earn?</h3>\n\n<p>When you retag a post for the first time, you will earn the Organizer badge:</p>\n\n<p><img src=\"https://i.stack.imgur.com/qZOgn.png\" alt=\"organizer badge\"></p>\". The most common values are: <h3>What is edit questions and answers?</h3>\n\n<p>We believe in the power of community editing. That means once you've generated enough reputation, we trust you to edit <em>anything</em> in the system without it going through the peer review system. Not just your posts\u2014<em>anyone's posts!</em></p>\n\n<h3>When should I edit posts?</h3>\n\n<p>Any time you feel you can make the post better, and are inclined to do so. Editing is encouraged!</p>\n\n<p>Some common reasons to edit are:</p>\n\n<ul>\n<li>to fix grammatical or spelling mistakes</li>\n<li>to clarify the meaning of a post without changing it</li>\n<li>to correct minor mistakes or add addendums / updates as the post ages</li>\n<li>to add related resources or hyperlinks</li>\n</ul>\n\n<p>Try to make the post substantively better when you edit, not just change a single character. Tiny, trivial edits are discouraged.</p>\n\n<h3>How do I edit posts?</h3>\n\n<p>The <code>edit</code> link is available under each post.</p>\n\n<h3>What happens when I edit a post?</h3>\n\n<p>The post will be updated to show the latest editor, as well as the original author. All edits are saved and tracked in a revision history with attribution to each editor. </p>\n\n<p>The revision history can be viewed by clicking the date and time next to the edited post (e.g. \"edited 3 days ago\").</p>\n\n<p>Editing a post also bumps the question to the top of the homepage. Too many edits can also force a post into <a href=\"/privileges/community-wiki\">community wiki mode</a>. Make your edits count.</p>\n\n<h3>Reviewing suggested edits</h3>\n\n<p>In addition, users with this privilege level also get access to the suggested edits queue. The queue has a list of posts which have been edited upon by users who don't have edit privileges. This queue can be accessed over at the <a href=\"/review/suggested-edits\">suggested edits tab in the review section</a>.<br>\nUsers with this privilege level get access to the <a href=\"/review/low-quality-posts\">Low Quality Posts</a> list where they can improve the low quality posts, or suggest they are deleted.</p>, <h3>What is retagging a question?</h3>\n\n<p>A tag is a keyword or label that categorizes your question with other, similar questions. When you retag a question, you're correcting the existing tags on the question. </p>\n\n<p>When you receive this privilege you get the ability to retag posts without having to go through the peer review system (this applied to edits that change tags and <em>nothing else</em>). When you reach 2000 reputation <a href=\"/privileges/edit\">all of your edits will bypass the peer review system</a>.</p>\n\n<h3>When should I retag a question?</h3>\n\n<p>Questions should be tagged correctly so others can more easily find them and answer them. Retag when a community member has:</p>\n\n<ul>\n<li>chosen incorrect tags that don't properly represent the actual question topic</li>\n<li>added excess, superfluous tags</li>\n<li>created an inappropriate new tag</li>\n<li>made a mistake with tags, such as using spaces instead of hyphens</li>\n</ul>\n\n<h3>How do I retag a question?</h3>\n\n<p>Click the <code>edit</code> menu option under the post and add/remove tags.</p>\n\n<h3>What badges can I earn?</h3>\n\n<p>When you retag a post for the first time, you will earn the Organizer badge:</p>\n\n<p><img src=\"https://i.stack.imgur.com/qZOgn.png\" alt=\"organizer badge\"></p>."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "accepted_answer_id",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'accepted_answer_id' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "answer_count",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'answer_count' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "comment_count",
      "data_type": "NUMERIC",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'comment_count' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "community_owned_date",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'community_owned_date' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 2,
      "min_value": "2013-02-27 12:13:24.423000+00:00",
      "max_value": "2013-05-08 14:20:30.940000+00:00",
      "example_values": [
        "2013-02-27 12:13:24.423000+00:00",
        "2013-05-08 14:20:30.940000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 2 unique values. This column has no null values. Sample dates include: 2013-02-27 12:13:24.423000+00:00, 2013-05-08 14:20:30.940000+00:00. Date values range from 2013-02-27 12:13:24.423000+00:00 to 2013-05-08 14:20:30.940000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "favorite_count",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'favorite_count' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "last_activity_date",
      "data_type": "DATETIME",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 2,
      "min_value": "2013-02-27 12:13:24.423000+00:00",
      "max_value": "2013-05-08 14:20:30.940000+00:00",
      "example_values": [
        "2013-02-27 12:13:24.423000+00:00",
        "2013-05-08 14:20:30.940000+00:00"
      ],
      "semantic_context": "Column 'last_activity_date' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 2 unique values. This column has no null values. Sample dates include: 2013-02-27 12:13:24.423000+00:00, 2013-05-08 14:20:30.940000+00:00. Date values range from 2013-02-27 12:13:24.423000+00:00 to 2013-05-08 14:20:30.940000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "last_edit_date",
      "data_type": "DATETIME",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 2,
      "min_value": "2013-02-27 12:13:24.423000+00:00",
      "max_value": "2013-05-08 14:20:30.940000+00:00",
      "example_values": [
        "2013-02-27 12:13:24.423000+00:00",
        "2013-05-08 14:20:30.940000+00:00"
      ],
      "semantic_context": "Column 'last_edit_date' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 2 unique values. This column has no null values. Sample dates include: 2013-02-27 12:13:24.423000+00:00, 2013-05-08 14:20:30.940000+00:00. Date values range from 2013-02-27 12:13:24.423000+00:00 to 2013-05-08 14:20:30.940000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "last_editor_display_name",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'last_editor_display_name' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "last_editor_user_id",
      "data_type": "NUMERIC",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "1583",
      "max_value": "1583",
      "avg_value": 1583.0,
      "std_dev": 0.0,
      "example_values": [
        "1583.0"
      ],
      "semantic_context": "Column 'last_editor_user_id' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 1583.0. Values range from 1583 to 1583. The average value is 1583.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "owner_display_name",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'owner_display_name' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "owner_user_id",
      "data_type": "NUMERIC",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "-1",
      "max_value": "-1",
      "avg_value": -1.0,
      "std_dev": 0.0,
      "example_values": [
        "-1.0"
      ],
      "semantic_context": "Column 'owner_user_id' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: -1.0. Values range from -1 to -1. The average value is -1.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "parent_id",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'parent_id' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "post_type_id",
      "data_type": "NUMERIC",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "8",
      "max_value": "8",
      "avg_value": 8.0,
      "std_dev": 0.0,
      "example_values": [
        "8.0"
      ],
      "semantic_context": "Column 'post_type_id' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 8.0. Values range from 8 to 8. The average value is 8.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 2,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "1",
      "max_value": "1",
      "avg_value": 1.0,
      "std_dev": 0.0,
      "example_values": [
        "1.0"
      ],
      "semantic_context": "Column 'score' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 1.0. Values range from 1 to 1. The average value is 1.00. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "tags",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'tags' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_privilege_wiki",
      "column_name": "view_count",
      "data_type": "object",
      "total_count": 2,
      "null_count": 2,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'view_count' from table 'posts_privilege_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "52449828",
      "max_value": "52903019",
      "avg_value": 52679475.562,
      "std_dev": 128841.26929449885,
      "example_values": [
        "52449828.0",
        "52567796.25",
        "52682320.5",
        "52787906.25",
        "52903019.0"
      ],
      "semantic_context": "Column 'id' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 52449828.0, 52567796.25, 52682320.5, 52787906.25, 52903019.0. Values range from 52449828 to 52903019. The average value is 52679475.56."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "title",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "example_values": [
        "unable to install ui-grid-auto-fit-columns for Angularjs 1.6 project",
        "In context of \"Illumeo on 3rd party PACS\" project, what the following components mean: preproc, prefetch, prepstore, retrieve",
        "Making a WhatsApp voice/video call",
        "Filter Dates which are NOT in current month using power Query",
        "Can I use FOR ALL ENTRIES with GROUP BY?",
        "How can I add specific value on x-axis in ggsurvplot/survminer in R?",
        "testcafe - how to assert text contains in html body",
        "Docker mount not working...what am I missing here?",
        "How to restart a Docker service in global mode (non-replicated)?",
        "Is it possible to animate to 100% in react-spring?"
      ],
      "semantic_context": "Column 'title' from table 'posts_questions' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample values include: \"unable to install ui-grid-auto-fit-columns for Angularjs 1.6 project\", \"In context of \"Illumeo on 3rd party PACS\" project, what the following components mean: preproc, prefetch, prepstore, retrieve\", \"Making a WhatsApp voice/video call\", \"Filter Dates which are NOT in current month using power Query\", \"Can I use FOR ALL ENTRIES with GROUP BY?\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "body",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "example_values": [
        "<p>I am working with Angularjs 1.6 and ui-grid 4.4.2 and I hit a snag. I need my grid column widths to expand to the widest content in the column. I found an NPM Package that does this but I am unable to install it. </p>\n\n<p>When I include the package in my angular module I get the following error:</p>\n\n<pre><code>Unhandled exception at line 5014, column 9 in http://localhost:29236/Scripts/angular.js\n0x800a139e - JavaScript runtime error: [$injector:modulerr] Failed to instantiate module CRNApp due to:\nError: [$injector:modulerr] Failed to instantiate module ui.grid.autoFitColumns due to:\n\nError: [$injector:nomod] Module 'ui.grid.autoFitColumns' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.\n</code></pre>\n\n<p>Part of my Angular definition:</p>\n\n<pre><code>(function () {\n    'use strict';\n\n    angular.module('CRNApp', ['ui.bootstrap', 'ui.grid', 'ui.grid.autoFitColumns', 'ui.grid.autoResize', 'ui.grid.emptyBaseLayer', 'ui.grid.selection', 'toaster','ngAnimate']);\n\n    MainController.$inject = ['$scope', '$http', '$uibModal', '$log', 'uiGridConstants', '$rootScope','toaster'];\n\n    angular.module('CRNApp')\n    .controller('MainController', MainController);\n</code></pre>\n\n<p>The installation instructions are at <a href=\"https://github.com/Den-dp/ui-grid-auto-fit-columns\" rel=\"nofollow noreferrer\">https://github.com/Den-dp/ui-grid-auto-fit-columns</a></p>\n\n<p>The install command is: npm install ui-grid-auto-fit-columns -S</p>\n\n<p>After I typed int he NPM install command I saw a new set of folders appear:\n<a href=\"https://i.stack.imgur.com/7CkBh.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/7CkBh.jpg\" alt=\"enter image description here\"></a></p>\n\n<p>I am inexperienced with Angularjs and NPM so I am not sure what I am doing wrong. Any ideas?</p>",
        "<p>In context of \"Illumeo on 3rd party PACS\" project we have a few workflows (available in <a href=\"https://teams.microsoft.com/_#/pdf/viewer/teams/https%3A~2F~2Fshare.philips.com~2Fsites~2FIllumeoStandaloneIntegrationForum~2FShared%20Documents~2FGeneral~2FWorkflow_sequences_20181016.pdf?threadId=19%3Abec50ea05f494c70a834e0610181430c%40thread.skype&amp;baseUrl=https%3A~2F~2Fshare.philips.com~2Fsites~2FIllumeoStandaloneIntegrationForum&amp;fileId=D5194380-F295-406C-8438-9775833000A5&amp;ctx=files&amp;viewerAction=view\" rel=\"nofollow noreferrer\">MSTeams</a> or in <a href=\"http://tfsemea1.ta.philips.com:8080/tfs/TPC_Region11/riinnovation/_wiki?pagePath=%2FNPD-Tech%2FBusiness-Programs%2FEnabling-Stand-Alone-Illumeo%2FWorkflow-Sequences\" rel=\"nofollow noreferrer\">TFS</a>) where there are some components which purpose is not clear, particularly: preproc, prefetch, prepstore, retrieve.\nWhat are they for?</p>",
        "<p>I'm trying to find out how I can make a whatsapp call (both video and voice) straight from the app. I read this post: <a href=\"https://stackoverflow.com/questions/38655458/android-make-whatsapp-call\">android-make whatsapp call</a> but I don't understand it. I want the user to be able to select a contact from their contact list and then they are brought to a screen with two buttons: Video Call and Voice Call. The contact's phone number will also be shown as a textview on top. They can click either one of the buttons and the app will make a whatsapp call. I'm not sure how I can get a specific contact's id and call that. </p>\n\n<p>If anyone could explain it in another way, I'd be very grateful.</p>\n\n<p>Thanks</p>",
        "<p>in power bi's <strong>query editor</strong>, i needed a date column to be split into two more columns. One as <em>\"In current month\"</em> and the other one is <em>\"Not in current month\"</em></p>\n\n<p>for <em>\"In current month\"</em> i used <code>Date.IsInCurrentMonth</code>, now i need the same for <em>\"Not in Current Month\"</em></p>\n\n<p>any help is appreciated.<br>\nTy.</p>",
        "<p>Currently the code looks something like this:</p>\n\n<pre><code>LOOP AT lt_orders ASSIGNING &lt;fs_order&gt;.\n  SELECT COUNT(*) AS cnt\n      FROM order_items\n      INTO &lt;fs_order&gt;-cnt\n      WHERE order_id = &lt;fs_order&gt;-order_id.\nENDLOOP.\n</code></pre>\n\n<p>It is the slowest part of the report. I want to speed it up.</p>\n\n<p>How can I use FOR ALL ENTRIES with GROUP BY?</p>",
        "<p>I want 56 to show on the x-axis, but I can't figure it out.</p>\n\n<p>I have the following script. I have tried to add the following to the script <code>xlim = c(seq(0,100, by=10),56)</code> but that does not seem to work.</p>\n\n<p>I have tried to google it and I have read on R-documentation. I hope you can help.</p>\n\n<pre><code>library(survival)\nlibrary(survminer)\nlibrary(ggplot2)\nfit &lt;- survfit(Surv(p$time.recur.months, p$recurrence) ~ p$simpson.grade, \n               conf.type=\"log\", data=p)\n\nj &lt;- ggsurvplot(\n  fit,                     \n  data = p, \n  fun=\"cumhaz\",\n  risk.table = TRUE,       \n  pval = TRUE,      \n  pval.coord = c(0, 0.25),\n  conf.int = F,         \n  legend.labs=c(\"Simpson Grade 1\" ,\"Simpson Grade 2\", \"Simpson Grade 3\", \n                \"Simpson Grade 4\"),\n  size=c(0.7,0.7,0.7,0.7),                    \n  xlim = c(0,100),\n  alpha=c(0.7),\n  break.time.by = 10,    \n  xlab=\"Time in months\",\n  #ylab=\"Survival probability\",\n  ggtheme = theme_gray(),             \n  risk.table.y.text.col = T,\n  risk.table.y.text = TRUE,           \n  ylim=c(0,0.5),\n  cumevents=T,\n  palette=\"Set1\"       \n)\n\n# My Data\np &lt;- structure(list(recurrence = c(0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, \n0L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, \n0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, \n0L, 0L, 0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, \n1L, 1L, 0L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, NA, 0L, 0L, 0L, 0L, 0L, \n0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, \n0L, 0L, 0L, 0L, 1L, 0L, 1L, 0L, 0L, 0L, 1L, 1L, 1L, 1L, 0L, 0L, \n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, 0L, 0L, \n0L, 0L, 0L, 1L, 0L, 1L, 1L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, \n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, \n0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L, 0L, 1L, \n0L, 0L, 0L, 0L, 0L, 0L, 1L, 0L), time.recur.months = c(NA, NA, \nNA, NA, NA, NA, 92L, NA, NA, NA, 74L, NA, NA, NA, 2L, 8L, NA, \nNA, NA, NA, 58L, NA, NA, NA, NA, NA, 3L, NA, 4L, NA, NA, NA, \nNA, NA, NA, NA, NA, NA, NA, 39L, NA, NA, NA, NA, 15L, NA, NA, \nNA, NA, NA, NA, NA, NA, NA, NA, 12L, 56L, 57L, NA, NA, 49L, 17L, \nNA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 5L, \nNA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, 9L, NA, \n89L, NA, NA, NA, 8L, 6L, 8L, 4L, NA, NA, NA, NA, NA, NA, NA, \nNA, NA, NA, NA, NA, 60L, NA, NA, 38L, NA, NA, NA, NA, NA, 90L, \nNA, 58L, 54L, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \nNA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \nNA, NA, NA, NA, NA, NA, NA, NA, NA, 53L, NA, NA, 124L, NA, NA, \nNA, NA, NA, NA, 7L, NA), simpson.grade = c(3L, 1L, 1L, 2L, 4L, \n1L, 1L, 1L, 2L, 1L, 4L, 1L, 1L, 2L, 1L, 2L, 1L, 4L, 2L, 3L, 2L, \n1L, 1L, 1L, 1L, 1L, 3L, 1L, 1L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, \n1L, 2L, 1L, 1L, 3L, 1L, 1L, 2L, 1L, 1L, 1L, 1L, 1L, 1L, 2L, 1L, \n1L, 1L, 4L, 3L, 1L, 1L, 4L, 1L, 3L, 1L, 1L, 1L, 1L, 1L, 3L, 1L, \n3L, 4L, 1L, 1L, 2L, 2L, 1L, 1L, 2L, 4L, 1L, 1L, 1L, 4L, 1L, 1L, \n1L, 2L, 1L, 2L, 4L, 4L, 1L, 4L, 4L, 1L, 2L, 1L, 1L, 4L, 4L, 4L, \n4L, 1L, 1L, 1L, 1L, 1L, 1L, 1L, 4L, 1L, 2L, 1L, 4L, 1L, 1L, 4L, \n4L, 1L, 3L, 1L, 1L, 1L, 3L, 2L, 4L, 4L, 1L, 4L, 4L, 4L, 4L, 1L, \n1L, 1L, 1L, 4L, 1L, 4L, 4L, 1L, 4L, 4L, 1L, 4L, 4L, 3L, 1L, 1L, \n1L, 4L, 1L, 1L, 1L, 1L, 3L, 1L, 1L, 2L, 2L, 2L, 4L, 1L, 4L, 2L, \n1L, 1L, 2L, 2L, 1L, 1L, 1L, 1L, 1L, 3L, 1L)), .Names = c(\"recurrence\", \n\"time.recur.months\", \"simpson.grade\"), class = \"data.frame\", row.names \n= c(NA, \n-176L))\n</code></pre>",
        "<p>I am using testcafe for api testing however our api requires login. Below is my code. I can see json response fine. But i am not sure how to assert on the page. </p>\n\n<p><div class=\"snippet\" data-lang=\"js\" data-hide=\"false\" data-console=\"true\" data-babel=\"false\">\n<div class=\"snippet-code\">\n<pre class=\"snippet-code-html lang-html prettyprint-override\"><code>import { Selector } from 'testcafe';\n\nimport Page from './page';\n// Page model\nconst page = new Page();\nconst url = 'https://myexample.com';\n\nconst elementWithIdOrClassName = Selector(value =&gt; {\n  return document.getElementById(value) || document.getElementsByTagName(value);\n});\n\nfixture `Test`\n    .page(url + '/talent/career')\n    .beforeEach( async t =&gt; {\n      await t\n      .typeText(page.username, 'gvp50')\n      .typeText(page.password, 'password')\n      .click(page.login_button)\n    });\n\n\n\n// Tests\ntest('Text typing basics', async t =&gt; {\n    await t\n      .navigateTo(url+'/api/learner/learning_items')\n      .expect(Selector('html')).contains('learning_items');\n});</code></pre>\n</div>\n</div>\n</p>\n\n<p>Testcafe just hangs after i run this code. I tried Selector('body') as well but it doesn't work.</p>",
        "<p>My Dockerfile looks like follows;</p>\n\n<pre><code>FROM python:2.7\nCOPY . /temp\nWORKDIR /temp\nCMD [\"python\", \"app.py\", \"100\"]\n</code></pre>\n\n<p>My Python file looks like this,</p>\n\n<pre><code>import sys\nprint \"This is the name of the script: \", sys.argv[0]\nprint \"Number of arguments: \", len(sys.argv)\nprint \"The arguments are: \" , str(sys.argv)\nfile = open(\"log.log\", \"a\")\n\nx = int(sys.argv[1])\nprint \"received value of x is: \", x\n\nif x &lt; 100:\n    file.write('entered value is less than 100: Exiting with exit code 0; SUCEESS')\nelif x == 100:\n    file.write('entered value is equal to 100: Exiting with exit code 1; SUCEESS')\nelse:\n    file.write('entered value is more than 100: Exiting with exit code 2; FAILED')\n</code></pre>\n\n<p>The way I build this container is as follows:\n<code>docker build python-container .</code></p>\n\n<p>The way I run the container is as follows:\n<code>docker run -v ~/logs/:app python-container</code></p>\n\n<p>What I want is to mount the container directory in which log in generated to my host so that the log file generated by the python is available on my host computer.</p>\n\n<p>But unfortunately, this is not happening,</p>\n\n<p>Debug done by me:</p>\n\n<ol>\n<li><p>I initially used the python in ENTRYPOINT but it seems the commands in ENTRYPOINT are compressed and bundled in the container and then the container is mounted and thus it failed.</p></li>\n<li><p>I kept the container running forever by using the <code>ENTRYPOINT [\"tail\", \"-f\", \"/dev/null\"]</code> but still it failed.</p></li>\n<li><p>I also used docket volumes, created volumes, mounted them and then run the containers and still the log is not available outside.</p></li>\n</ol>\n\n<p>My question here is what am I missing?</p>\n\n<p>Ultimately, my aim is to have different containers running different python jobs and generating different log files in a specific directory on my host...</p>\n\n<p>I would really appreciate any help in this matter...</p>",
        "<p>In Docker Swarm mode, how can I restart a single global service? Is it even possible? I know you can scale replicated services to zero then back to 1+, but there doesn't appear to be any documentation on how to have the same effect with global services.</p>\n\n<p>I am updating my SSL certificate so would like to just restart our reverse proxy instead of restarting our entire app (via restarting the <code>docker</code> service).</p>\n\n<p>The docs just mention <a href=\"https://docs.docker.com/engine/reference/commandline/service_scale/#extended-description\" rel=\"noreferrer\">you cannot scale global services</a>:</p>\n\n<blockquote>\n  <p>The scale command enables you to scale one or more replicated services either up or down to the desired number of replicas. This command cannot be applied on services which are global mode.</p>\n</blockquote>",
        "<p>I am using react-spring to try and animate in AJAX content as it is loaded.</p>\n\n<p>I have a container component that I sometimes want to animate to 'auto' from 0 and sometimes I want to animate to 100% depending on a prop that is passed in.</p>\n\n<p>I have a const that I set that is then passed into a calculatedHeight property in the Transition component. I then use this to set the height property in the mounted child component's style property.</p>\n\n<pre><code>const Container = ({ data, children, stretchHeight }) =&gt; {\n  const loaded = data.loadStatus === 'LOADED';\n  const loading = data.loadStatus === 'LOADING';\n\n  const animationHeight = stretchHeight ? '100%' : 'auto';\n\n  return (\n    &lt;div\n      className={classnames({\n        'data-container': true,\n        'is-loading': loading,\n        'is-loaded': loaded,\n        'stretch-height': stretchHeight\n      })}\n      aria-live=\"polite\"\n    &gt;\n      {loading &amp;&amp;\n        &lt;div style={styles} className='data-container__spinner-wrapper'&gt;\n          &lt;LoadingSpinner /&gt;\n        &lt;/div&gt;\n      }\n\n      &lt;Transition\n        from={{ opacity: 0, calculatedHeight: 0 }}\n        enter={{ opacity: 1, calculatedHeight: animationHeight }}\n        leave={{ opacity: 0, calculatedHeight: 0 }}\n        config={config.slow}\n      &gt;\n        {loaded &amp;&amp; (styles =&gt; {\n          return (\n            &lt;div style={{ opacity: styles.opacity, height: styles.calculatedHeight }}&gt;\n              {children}\n            &lt;/div&gt;\n          )\n        }\n        )}\n      &lt;/Transition&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre>\n\n<p>The problem is that this causes a max callstack exceeded error as I don't think react-spring can understand the '100%' string value, only 'auto'.</p>\n\n<p>Is there a work around for this?</p>"
      ],
      "semantic_context": "Column 'body' from table 'posts_questions' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample values include: \"<p>I am working with Angularjs 1.6 and ui-grid 4.4.2 and I hit a snag. I need my grid column widths to expand to the widest content in the column. I found an NPM Package that does this but I am unable to install it. </p>\n\n<p>When I include the package in my angular module I get the following error:</p>\n\n<pre><code>Unhandled exception at line 5014, column 9 in http://localhost:29236/Scripts/angular.js\n0x800a139e - JavaScript runtime error: [$injector:modulerr] Failed to instantiate module CRNApp due to:\nError: [$injector:modulerr] Failed to instantiate module ui.grid.autoFitColumns due to:\n\nError: [$injector:nomod] Module 'ui.grid.autoFitColumns' is not available! You either misspelled the module name or forgot to load it. If registering a module ensure that you specify the dependencies as the second argument.\n</code></pre>\n\n<p>Part of my Angular definition:</p>\n\n<pre><code>(function () {\n    'use strict';\n\n    angular.module('CRNApp', ['ui.bootstrap', 'ui.grid', 'ui.grid.autoFitColumns', 'ui.grid.autoResize', 'ui.grid.emptyBaseLayer', 'ui.grid.selection', 'toaster','ngAnimate']);\n\n    MainController.$inject = ['$scope', '$http', '$uibModal', '$log', 'uiGridConstants', '$rootScope','toaster'];\n\n    angular.module('CRNApp')\n    .controller('MainController', MainController);\n</code></pre>\n\n<p>The installation instructions are at <a href=\"https://github.com/Den-dp/ui-grid-auto-fit-columns\" rel=\"nofollow noreferrer\">https://github.com/Den-dp/ui-grid-auto-fit-columns</a></p>\n\n<p>The install command is: npm install ui-grid-auto-fit-columns -S</p>\n\n<p>After I typed int he NPM install command I saw a new set of folders appear:\n<a href=\"https://i.stack.imgur.com/7CkBh.jpg\" rel=\"nofollow noreferrer\"><img src=\"https://i.stack.imgur.com/7CkBh.jpg\" alt=\"enter image description here\"></a></p>\n\n<p>I am inexperienced with Angularjs and NPM so I am not sure what I am doing wrong. Any ideas?</p>\", \"<p>In context of \"Illumeo on 3rd party PACS\" project we have a few workflows (available in <a href=\"https://teams.microsoft.com/_#/pdf/viewer/teams/https%3A~2F~2Fshare.philips.com~2Fsites~2FIllumeoStandaloneIntegrationForum~2FShared%20Documents~2FGeneral~2FWorkflow_sequences_20181016.pdf?threadId=19%3Abec50ea05f494c70a834e0610181430c%40thread.skype&amp;baseUrl=https%3A~2F~2Fshare.philips.com~2Fsites~2FIllumeoStandaloneIntegrationForum&amp;fileId=D5194380-F295-406C-8438-9775833000A5&amp;ctx=files&amp;viewerAction=view\" rel=\"nofollow noreferrer\">MSTeams</a> or in <a href=\"http://tfsemea1.ta.philips.com:8080/tfs/TPC_Region11/riinnovation/_wiki?pagePath=%2FNPD-Tech%2FBusiness-Programs%2FEnabling-Stand-Alone-Illumeo%2FWorkflow-Sequences\" rel=\"nofollow noreferrer\">TFS</a>) where there are some components which purpose is not clear, particularly: preproc, prefetch, prepstore, retrieve.\nWhat are they for?</p>\", \"<p>I'm trying to find out how I can make a whatsapp call (both video and voice) straight from the app. I read this post: <a href=\"https://stackoverflow.com/questions/38655458/android-make-whatsapp-call\">android-make whatsapp call</a> but I don't understand it. I want the user to be able to select a contact from their contact list and then they are brought to a screen with two buttons: Video Call and Voice Call. The contact's phone number will also be shown as a textview on top. They can click either one of the buttons and the app will make a whatsapp call. I'm not sure how I can get a specific contact's id and call that. </p>\n\n<p>If anyone could explain it in another way, I'd be very grateful.</p>\n\n<p>Thanks</p>\", \"<p>in power bi's <strong>query editor</strong>, i needed a date column to be split into two more columns. One as <em>\"In current month\"</em> and the other one is <em>\"Not in current month\"</em></p>\n\n<p>for <em>\"In current month\"</em> i used <code>Date.IsInCurrentMonth</code>, now i need the same for <em>\"Not in Current Month\"</em></p>\n\n<p>any help is appreciated.<br>\nTy.</p>\", \"<p>Currently the code looks something like this:</p>\n\n<pre><code>LOOP AT lt_orders ASSIGNING &lt;fs_order&gt;.\n  SELECT COUNT(*) AS cnt\n      FROM order_items\n      INTO &lt;fs_order&gt;-cnt\n      WHERE order_id = &lt;fs_order&gt;-order_id.\nENDLOOP.\n</code></pre>\n\n<p>It is the slowest part of the report. I want to speed it up.</p>\n\n<p>How can I use FOR ALL ENTRIES with GROUP BY?</p>\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "accepted_answer_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 481,
      "null_percentage": 48.1,
      "distinct_count": 519,
      "min_value": "52450330.0",
      "max_value": "72647385.0",
      "avg_value": 52881858.784200385,
      "std_dev": 1480880.506440703,
      "example_values": [
        "52450330.0",
        "52584612.5",
        "52700513.0",
        "52821231.5",
        "72647385.0"
      ],
      "semantic_context": "Column 'accepted_answer_id' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It contains 519 distinct values. About 48.1% of values are null. Sample numeric values include: 52450330.0, 52584612.5, 52700513.0, 52821231.5, 72647385.0. Values range from 52450330.0 to 72647385.0. The average value is 52881858.78."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "answer_count",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 9,
      "min_value": "0",
      "max_value": "15",
      "avg_value": 1.41,
      "std_dev": 1.0153476896762659,
      "example_values": [
        "0.0",
        "1.0",
        "2.0",
        "15.0"
      ],
      "semantic_context": "Column 'answer_count' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 9 unique values. This column has no null values. Sample numeric values include: 0.0, 1.0, 2.0, 15.0. Values range from 0 to 15. The average value is 1.41. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "comment_count",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'comment_count' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "community_owned_date",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'community_owned_date' from table 'posts_questions' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2018-09-21 19:10:54.847000+00:00",
      "max_value": "2018-10-20 06:24:21.780000+00:00",
      "example_values": [
        "2018-09-21 19:10:54.847000+00:00",
        "2018-09-25 17:51:22.150000+00:00",
        "2018-09-28 13:43:16.850000+00:00",
        "2018-10-02 06:17:00.707000+00:00",
        "2018-10-05 07:14:01.923000+00:00",
        "2018-10-08 17:08:07.513000+00:00",
        "2018-10-11 09:07:48.027000+00:00",
        "2018-10-14 06:06:06.483000+00:00",
        "2018-10-17 09:50:26.567000+00:00",
        "2018-10-20 06:24:21.780000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'posts_questions' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2018-09-21 19:10:54.847000+00:00, 2018-09-25 17:51:22.150000+00:00, 2018-09-28 13:43:16.850000+00:00. Date values range from 2018-09-21 19:10:54.847000+00:00 to 2018-10-20 06:24:21.780000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "favorite_count",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 746,
      "null_percentage": 74.6,
      "distinct_count": 9,
      "min_value": "0.0",
      "max_value": "17.0",
      "avg_value": 1.311023622047244,
      "std_dev": 1.5224656695160035,
      "example_values": [
        "0.0",
        "1.0",
        "17.0"
      ],
      "semantic_context": "Column 'favorite_count' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 9 unique values. This column has many nulls (74.6%). Sample numeric values include: 0.0, 1.0, 17.0. Values range from 0.0 to 17.0. The average value is 1.31. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "last_activity_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2018-09-21 19:40:51.810000+00:00",
      "max_value": "2022-09-14 08:14:29.067000+00:00",
      "example_values": [
        "2018-09-21 19:40:51.810000+00:00",
        "2018-09-27 12:30:21.263000+00:00",
        "2018-10-02 15:57:50.093000+00:00",
        "2018-10-07 11:12:55.023000+00:00",
        "2018-10-11 10:57:05.710000+00:00",
        "2018-10-15 23:40:14.823000+00:00",
        "2018-10-19 19:29:24.533000+00:00",
        "2019-02-23 14:18:11.307000+00:00",
        "2020-06-19 10:02:50.423000+00:00",
        "2022-09-14 08:14:29.067000+00:00"
      ],
      "semantic_context": "Column 'last_activity_date' from table 'posts_questions' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2018-09-21 19:40:51.810000+00:00, 2018-09-27 12:30:21.263000+00:00, 2018-10-02 15:57:50.093000+00:00. Date values range from 2018-09-21 19:40:51.810000+00:00 to 2022-09-14 08:14:29.067000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "last_edit_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 485,
      "null_percentage": 48.5,
      "distinct_count": 505,
      "min_value": "2018-09-21 19:47:35.450000+00:00",
      "max_value": "2022-08-17 06:31:52.650000+00:00",
      "example_values": [
        "2018-09-21 19:47:35.450000+00:00",
        "2018-09-26 20:21:48.103000+00:00",
        "2018-10-01 16:44:04.653000+00:00",
        "2018-10-04 14:23:00.210000+00:00",
        "2018-10-08 14:55:25.747000+00:00",
        "2018-10-11 17:09:19.857000+00:00",
        "2018-10-15 14:56:10.640000+00:00",
        "2018-10-19 09:01:10.767000+00:00",
        "2019-07-07 09:42:45.767000+00:00",
        "2022-08-17 06:31:52.650000+00:00"
      ],
      "semantic_context": "Column 'last_edit_date' from table 'posts_questions' in database 'stackoverflow'. Data type is DATETIME. It contains 505 distinct values. About 48.5% of values are null. Sample dates include: 2018-09-21 19:47:35.450000+00:00, 2018-09-26 20:21:48.103000+00:00, 2018-10-01 16:44:04.653000+00:00. Date values range from 2018-09-21 19:47:35.450000+00:00 to 2022-08-17 06:31:52.650000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "last_editor_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 994,
      "null_percentage": 99.4,
      "distinct_count": 5,
      "example_values": [
        "user8682794",
        "user8044236",
        "user7323531",
        "user2100815",
        "user8425075"
      ],
      "top_values": {
        "user8682794": 2,
        "user8044236": 1,
        "user7323531": 1,
        "user2100815": 1,
        "user8425075": 1
      },
      "semantic_context": "Column 'last_editor_display_name' from table 'posts_questions' in database 'stackoverflow'. Data type is STRING. It is a low-cardinality categorical field with 5 unique values. This column is mostly empty with 99.4% null values. Sample values include: \"user8682794\", \"user8044236\", \"user7323531\", \"user2100815\", \"user8425075\". The most common values are: user8682794, user8044236, user7323531. This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "last_editor_user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 491,
      "null_percentage": 49.1,
      "distinct_count": 453,
      "min_value": "-1.0",
      "max_value": "12892553.0",
      "avg_value": 4658195.0255402755,
      "std_dev": 3429167.8576337947,
      "example_values": [
        "-1.0",
        "1505120.0",
        "4370109.0",
        "7433460.0",
        "12892553.0"
      ],
      "semantic_context": "Column 'last_editor_user_id' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It contains 453 distinct values. About 49.1% of values are null. Sample numeric values include: -1.0, 1505120.0, 4370109.0, 7433460.0, 12892553.0. Values range from -1.0 to 12892553.0. The average value is 4658195.03."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "owner_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 984,
      "null_percentage": 98.4,
      "distinct_count": 16,
      "example_values": [
        "user9569059",
        "user9708507",
        "user882670",
        "user9530048",
        "user10161312",
        "user379888",
        "user8044236",
        "user8773215",
        "user7019162",
        "user6580560"
      ],
      "top_values": {
        "user9569059": 1,
        "user9708507": 1,
        "user882670": 1,
        "user9530048": 1,
        "user10161312": 1
      },
      "semantic_context": "Column 'owner_display_name' from table 'posts_questions' in database 'stackoverflow'. Data type is STRING. It has moderate cardinality with 16 unique values. This column is mostly empty with 98.4% null values. Sample values include: \"user9569059\", \"user9708507\", \"user882670\", \"user9530048\", \"user10161312\". The most common values are: user9569059, user9708507, user882670. This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "owner_user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 16,
      "null_percentage": 1.6,
      "distinct_count": 977,
      "min_value": "4747.0",
      "max_value": "12231242.0",
      "avg_value": 6120327.322154472,
      "std_dev": 3464865.0038876943,
      "example_values": [
        "4747.0",
        "2988514.75",
        "6423758.5",
        "9591197.5",
        "12231242.0"
      ],
      "semantic_context": "Column 'owner_user_id' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 977 unique values. About 1.6% of values are null. Sample numeric values include: 4747.0, 2988514.75, 6423758.5, 9591197.5, 12231242.0. Values range from 4747.0 to 12231242.0. The average value is 6120327.32."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "parent_id",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'parent_id' from table 'posts_questions' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "post_type_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "1",
      "max_value": "1",
      "avg_value": 1.0,
      "std_dev": 0.0,
      "example_values": [
        "1.0"
      ],
      "semantic_context": "Column 'post_type_id' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 1.0. Values range from 1 to 1. The average value is 1.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 32,
      "min_value": "-7",
      "max_value": "84",
      "avg_value": 1.67,
      "std_dev": 4.235213930492418,
      "example_values": [
        "-7.0",
        "0.0",
        "1.0",
        "2.0",
        "84.0"
      ],
      "semantic_context": "Column 'score' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It has moderate cardinality with 32 unique values. This column has no null values. Sample numeric values include: -7.0, 0.0, 1.0, 2.0, 84.0. Values range from -7 to 84. The average value is 1.67. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "tags",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 947,
      "example_values": [
        "angular",
        "python|pandas",
        "r|ggplot2",
        "r|shiny",
        "r|dplyr",
        "dart|flutter",
        "javascript|reactjs",
        "docker",
        "python|django",
        "flutter"
      ],
      "semantic_context": "Column 'tags' from table 'posts_questions' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 947 unique values. This column has no null values. Sample values include: \"angular\", \"python|pandas\", \"r|ggplot2\", \"r|shiny\", \"r|dplyr\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_questions",
      "column_name": "view_count",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 190,
      "min_value": "3",
      "max_value": "67329",
      "avg_value": 1940.344,
      "std_dev": 4835.991553753167,
      "example_values": [
        "3.0",
        "261.0",
        "768.0",
        "1538.0",
        "67329.0"
      ],
      "semantic_context": "Column 'view_count' from table 'posts_questions' in database 'stackoverflow'. Data type is NUMERIC. It contains 190 distinct values. This column has no null values. Sample numeric values include: 3.0, 261.0, 768.0, 1538.0, 67329.0. Values range from 3 to 67329. The average value is 1940.34. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "3607689",
      "max_value": "73210228",
      "avg_value": 25874171.21,
      "std_dev": 16970713.08625195,
      "example_values": [
        "3607689.0",
        "13007292.25",
        "20882078.5",
        "33660325.75",
        "73210228.0"
      ],
      "semantic_context": "Column 'id' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 3607689.0, 13007292.25, 20882078.5, 33660325.75, 73210228.0. Values range from 3607689 to 73210228. The average value is 25874171.21."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "title",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 983,
      "null_percentage": 98.3,
      "distinct_count": 17,
      "example_values": [
        "collapse",
        "azure-boards",
        "rtm",
        "go-toolchain",
        "oracle-apex-19.2",
        "shopify-api",
        "micronaut-micrometer",
        "spring-cloud-config-client",
        "alexa-presentation-language",
        "huawei-iap"
      ],
      "top_values": {
        "collapse": 1,
        "azure-boards": 1,
        "rtm": 1,
        "go-toolchain": 1,
        "oracle-apex-19.2": 1
      },
      "semantic_context": "Column 'title' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is STRING. It has moderate cardinality with 17 unique values. This column is mostly empty with 98.3% null values. Sample values include: \"collapse\", \"azure-boards\", \"rtm\", \"go-toolchain\", \"oracle-apex-19.2\". The most common values are: collapse, azure-boards, rtm."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "body",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 44,
      "null_percentage": 4.3999999999999995,
      "distinct_count": 953,
      "example_values": [
        "<p>Do not use this tag.  For more information, please visit <a href=\"http://meta.stackoverflow.com\">Meta</a>.</p>",
        "<p>Design and develop for Glass with the GDK.  The GDK is an Android SDK add-on that contains APIs for Glass-specific features.  By using the Android SDK and GDK, you can leverage the vast array of Android APIs and also design a great experience for Glass.  Unlike the Mirror API, Glassware built with the GDK runs on Glass itself, allowing access to low-level hardware features.</p>\n\n<p>Designed to make the existing Android SDK just work on Glass. This lets you code in a familiar environment, but for a uniquely novel device.</p>\n\n<p>In addition, you can use all of the existing Android development tools, and your Glassware is even delivered as a standard Android package (APK).</p>",
        "<p>OpenJDK (Open Java Development Kit) is a free and open source \nimplementation of the Java Platform, Standard Edition (Java SE). \nThe upstream community project OpenJDK is currently sponsored and \nled by Oracle and is released under the GNU General Public License, \nversion 2, with the Classpath Exception.</p>\n\n<p>Click here for free development subscription which allows you to\ndownload Red Hat's implementation of OpenJDK for \ndevelopment use <a href=\"https://developers.redhat.com/downloads/\" rel=\"nofollow noreferrer\">https://developers.redhat.com/downloads/</a></p>",
        "<p>The Web (short form of \"World Wide Web\") is a collection of usually linked documents that are each accessible on a network. The information on the web is accessible through a web browser, implementing the Hypertext Transport Protocol (HTTP).</p>",
        "<p><strong>Mailto</strong> is the URI scheme that targets the user's client from within the browser. Clicking a <strong>mailto</strong> link creates a new email message in the user's email client, optionally with <em>to</em>, <em>cc</em>, <em>subject</em>, and <em>body</em> pre-populated.</p>\n\n<p>A mailto link can be inserted into a webpage using a standard <a href=\"/questions/tagged/anchor\" class=\"post-tag\" title=\"show questions tagged &#39;anchor&#39;\" rel=\"tag\">anchor</a> link:</p>\n\n<ul>\n<li><p>The simplest mailto link specifying a recipient addresses..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Multiple recipients..</p>\n\n<pre><code>&lt;a href='mailto:nobody@host.com,nowhere@host.com'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Autofill the subject line..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com?subject=This%20is%20the%20subject'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Autofill the subject line and specify the email to be CC'd to..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com?cc=me@me.com&amp;subject=Testing%20mailto&amp;'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Mailto 3 people, with a BCC and a subject..</p>\n\n<pre><code>&lt;a href='mailto:someone@yoursite.com?cc=someoneelse@theirsite.com, another@thatsite.com, me@mysite.com&amp;bcc=lastperson@theirsite.com&amp;subject=Big%20News'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Autofill the subject line and body of the email with a linebreak..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com?subject=Readme&amp;body=This%20is%20the%20first%20line%0D%0AThis%20is%20the%20second'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Add a reply-to address..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com?reply-to=me@me.com'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n</ul>\n\n<h2>Special Character escaping</h2>\n\n<p>Within mailto URLs, the characters \"?\", \"=\", \"&amp;\" are reserved.</p>\n\n<p>Special characters that appear in addresses, headers or message contents must be encoded using a \"%\" followed by a two-digit hex number. See <a href=\"https://tools.ietf.org/html/rfc3986\" rel=\"nofollow\">RFC3986</a> for a exhaustive description of URL encodings.</p>\n\n<pre><code>Space = %20             : = %3A         ] = %5D\nLine Break = %0D%0A     ; = %3B         { = %7B\n\" = %22                 ' = %27         } = %7D\n# = %23                 &lt; = %3C         \\ = %5C\n$ = %24                 &gt; = %3E         | = %7C\n% = %25                 / = %2F         = = %3D\n^ = %5E                 ? = %3F\n&amp; = &amp;amp;               [ = %5B\n</code></pre>\n\n<p>8-bit characters in mailto URLs are forbidden.</p>\n\n<h2>More information</h2>\n\n<ul>\n<li><a href=\"http://www.ietf.org/rfc/rfc2368.txt\" rel=\"nofollow\">RFC 2368</a>, which defines the mailto scheme.</li>\n</ul>",
        "<p><strong><a href=\"https://trigger.io\" rel=\"nofollow\">Trigger.io</a></strong> is a commercial mobile development framework, comparable in purpose to <a href=\"/questions/tagged/phonegap\" class=\"post-tag\" title=\"show questions tagged 'phonegap'\" rel=\"tag\">phonegap</a>. It provides a bridge between <a href=\"/questions/tagged/html\" class=\"post-tag\" title=\"show questions tagged 'html'\" rel=\"tag\">html</a> / <a href=\"/questions/tagged/javascript\" class=\"post-tag\" title=\"show questions tagged 'javascript'\" rel=\"tag\">javascript</a> code and native phone functions (camera, calendar, contacts, push notifications, etc.), allowing development for both <a href=\"/questions/tagged/android\" class=\"post-tag\" title=\"show questions tagged 'android'\" rel=\"tag\"><img src=\"//i.stack.imgur.com/tKsDb.png\" height=\"16\" width=\"18\" alt=\"\" class=\"sponsor-tag-img\">android</a> and <a href=\"/questions/tagged/ios\" class=\"post-tag\" title=\"show questions tagged 'ios'\" rel=\"tag\">ios</a> using a single code base.</p>\n\n<p>One of its key features is <a href=\"https://trigger.io/reload/\" rel=\"nofollow\">Trigger.io Reload</a>, which makes it possible to update your app without re-submitting to the App Store or Google Play.</p>\n\n<p>The <a href=\"https://trigger.io/modules/_/all/\" rel=\"nofollow\">modules</a> that allow access to native functions have been open sourced for the most part by now.</p>\n\n<h2>Useful links</h2>\n\n<ul>\n<li><a href=\"https://trigger.io\" rel=\"nofollow\">Trigger.io homepage</a></li>\n<li><a href=\"https://github.com/trigger-corp\" rel=\"nofollow\">Trigger.io modules on GitHub</a></li>\n</ul>",
        "<p>ServiceStack is a simple, fast, versatile and highly-productive full-featured <a href=\"http://razor.servicestack.net\" rel=\"nofollow noreferrer\">Web</a> and \n<a href=\"http://docs.servicestack.net/web-services\" rel=\"nofollow noreferrer\">Web Services</a> Framework that's \nthoughtfully-architected to <a href=\"http://docs.servicestack.net/why-not-odata#why-not-complexity\" rel=\"nofollow noreferrer\">reduce artificial complexity</a> and promote \n<a href=\"http://docs.servicestack.net/advantages-of-message-based-web-services\" rel=\"nofollow noreferrer\">remote services best-practices</a> \nwith a <a href=\"http://docs.servicestack.net/what-is-a-message-based-web-service\" rel=\"nofollow noreferrer\">message-based design</a> \nthat allows for maximum re-use that can leverage an integrated \n<a href=\"http://docs.servicestack.net/service-gateway\" rel=\"nofollow noreferrer\">Service Gateway</a> \nfor the creation of loosely-coupled \n<a href=\"http://docs.servicestack.net/modularizing-services\" rel=\"nofollow noreferrer\">Modularized Service</a> Architectures.\nServiceStack Services are consumable via an array of built-in fast data formats (inc. JSON, XML, CSV, JSV, ProtoBuf, MsgPack and Wire as well as XSD/WSDL for <a href=\"http://docs.servicestack.net/soap-support\" rel=\"nofollow noreferrer\">SOAP endpoints</a> and \n<a href=\"http://docs.servicestack.net/rabbit-mq\" rel=\"nofollow noreferrer\">Rabbit MQ</a>, \n<a href=\"http://docs.servicestack.net/redis-mq\" rel=\"nofollow noreferrer\">Redis MQ</a>,\n<a href=\"http://docs.servicestack.net/azure-service-bus-mq\" rel=\"nofollow noreferrer\">Azure Service Bus</a> and\n<a href=\"https://github.com/ServiceStack/ServiceStack.Aws#sqsmqserver\" rel=\"nofollow noreferrer\">Amazon SQS</a> MQ hosts. </p>\n\n<p>Its design and simplicity focus offers an unparalleled suite of productivity features that can be declaratively enabled \nwithout code, from creating fully queryable Web API's with just a single Typed Request DTO with\n<a href=\"http://docs.servicestack.net/autoquery\" rel=\"nofollow noreferrer\">Auto Query</a> supporting \n<a href=\"https://github.com/ServiceStack/ServiceStack.OrmLite#8-flavours-of-ormlite-is-on-nuget\" rel=\"nofollow noreferrer\">every major RDBMS</a> \nto the built-in support for\n<a href=\"http://docs.servicestack.net/auto-batched-requests\" rel=\"nofollow noreferrer\">Auto Batched Requests</a> \nor effortlessly enabling rich <a href=\"http://docs.servicestack.net/http-caching\" rel=\"nofollow noreferrer\">HTTP Caching</a> and\n<a href=\"http://docs.servicestack.net/encrypted-messaging\" rel=\"nofollow noreferrer\">Encrypted Messaging</a> \nfor all your existing services via <a href=\"http://docs.servicestack.net/plugins\" rel=\"nofollow noreferrer\">Plugins</a>.</p>\n\n<p>Your same Services also serve as the Controller in ServiceStack's <a href=\"http://razor.servicestack.net/\" rel=\"nofollow noreferrer\">Smart Razor Views</a>\nreducing the effort to serve both \n<a href=\"https://github.com/ServiceStackApps/LiveDemos\" rel=\"nofollow noreferrer\">Web and Single Page Apps</a> as well as \n<a href=\"https://github.com/ServiceStackApps/HelloMobile\" rel=\"nofollow noreferrer\">Rich Desktop and Mobile Clients</a> that are able to deliver instant interactive \nexperiences using ServiceStack's real-time <a href=\"http://docs.servicestack.net/server-events\" rel=\"nofollow noreferrer\">Server Events</a>.</p>\n\n<p>ServiceStack Services also maximize productivity for consumers providing an \n<a href=\"http://docs.servicestack.net/csharp-client\" rel=\"nofollow noreferrer\">instant end-to-end typed API without code-gen</a> enabling\nthe most productive development experience for developing .NET to .NET Web Services.</p>\n\n<h2>ServiceStack Links</h2>\n\n<ul>\n<li><a href=\"http://www.servicestack.net/\" rel=\"nofollow noreferrer\">servicestack.net</a> - See ServiceStack's Website for product info and pricing </li>\n<li><a href=\"https://stackoverflow.com/search?q=servicestack\">StackOverflow</a> - Ask questions on StackOverflow using the <code>servicestack</code> tag</li>\n<li><a href=\"https://forums.servicestack.net/\" rel=\"nofollow noreferrer\">Customer Forums</a> - Customers can get Technical Support in the Customer Forums</li>\n<li><a href=\"https://github.com/ServiceStack/Issues\" rel=\"nofollow noreferrer\">Issue Tracker</a> - Report issues on our Issue Tracker</li>\n<li><a href=\"http://servicestack.uservoice.com/forums/176786-feature-requests\" rel=\"nofollow noreferrer\">Feature Requests</a> - Request features on UserVoice</li>\n<li><a href=\"https://servicestack.net/release-notes\" rel=\"nofollow noreferrer\">Release Notes</a> - Stay up to date with ServiceStack's latest features</li>\n</ul>\n\n<h2>ServiceStack Examples and Live Demos</h2>\n\n<ul>\n<li><a href=\"https://github.com/ServiceStackApps/LiveDemos\" rel=\"nofollow noreferrer\">Live Demos</a> - Web, Mobile and Desktop Apps and Live Demos</li>\n<li><a href=\"https://github.com/NetCoreApps/LiveDemos\" rel=\"nofollow noreferrer\">.NET Core Live Demos</a> - .NET Core Live Demos</li>\n<li><a href=\"http://gistlyn.com\" rel=\"nofollow noreferrer\">Gistlyn</a> - Explore ServiceStack Live on Gistlyn</li>\n</ul>\n\n<h2>ServiceStack Downloads</h2>\n\n<ul>\n<li><a href=\"https://servicestack.net/download\" rel=\"nofollow noreferrer\">ServiceStack Downloads</a> - Official downloads are available on NuGet</li>\n<li><a href=\"https://servicestack.net/myget\" rel=\"nofollow noreferrer\">Pre-release MyGet Packages</a> - Latest pre-release downloads are available on MyGet</li>\n</ul>",
        "<p>Session Storage enables storage and retrieval of key-value-pairs in the browser, that endure only as long as the session.</p>\n\n<ul>\n<li><p>The W3 specification can be viewed here:<br>\n<a href=\"https://html.spec.whatwg.org/multipage/webstorage.html\" rel=\"nofollow noreferrer\">https://html.spec.whatwg.org/multipage/webstorage.html</a><br>\n<a href=\"https://www.w3.org/TR/webstorage/\" rel=\"nofollow noreferrer\">https://www.w3.org/TR/webstorage/</a></p></li>\n<li><p>For more details, see the local-storage tag wiki on Stack Overflow:<br>\n<a href=\"https://stackoverflow.com/tags/local-storage/info\">https://stackoverflow.com/tags/local-storage/info</a></p></li>\n</ul>\n\n<hr>\n\n<h2>The <code>sessionStorage</code> Object</h2>\n\n<p>The <code>sessionStorage</code> object is equal to the <code>localStorage</code> object, except that it stores the data for only one session. The data is deleted when the user closes the browser window.</p>\n\n<p>Only plain-text values can be stored. Arrays, hashes, numbers, strings and booleans can be stored by using <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/stringify\" rel=\"nofollow noreferrer\"><code>JSON.stringify(value)</code></a>. Then, to get the original value when reading the value, use <a href=\"https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/JSON/parse\" rel=\"nofollow noreferrer\"><code>JSON.parse(stringified_value)</code></a>.</p>\n\n<h2>Example</h2>\n\n<pre><code>if (sessionStorage.clickcount) {\n    sessionStorage.clickcount = Number(sessionStorage.clickcount) + 1;\n} else {\n    sessionStorage.clickcount = 1;\n}\ndocument.getElementById(\"result\").innerHTML = \"You have clicked the button \" +\nsessionStorage.clickcount + \" time(s) in this session.\"; \n</code></pre>\n\n<h2>Resources</h2>\n\n<ul>\n<li><a href=\"https://www.w3schools.com/html/html5_webstorage.asp\" rel=\"nofollow noreferrer\">w3schools - HTML5 Local Storage</a></li>\n<li><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\" rel=\"nofollow noreferrer\">MDN - Web API Reference - Using the Web Storage API</a> </li>\n<li><a href=\"/questions/tagged/local-storage\" class=\"post-tag\" title=\"show questions tagged &#39;local-storage&#39;\" rel=\"tag\">local-storage</a></li>\n</ul>",
        "<p>Walrus is a storage service that is part of Eucalyptus.  It is built using the same interface as Amazon's S3 service, with the aim of being inter-operable.</p>\n\n<p><strong>Product information from the vendor</strong></p>\n\n<p><a href=\"http://www.eucalyptus.com/learn/what-is-eucalyptus\" rel=\"nofollow noreferrer\">http://www.eucalyptus.com/learn/what-is-eucalyptus</a></p>\n\n<p><strong>Stack Overflow Wiki on Eucalyptus</strong></p>\n\n<p><a href=\"https://stackoverflow.com/tags/eucalyptus/info\">https://stackoverflow.com/tags/eucalyptus/info</a></p>",
        "<p>Questions about client-side form validation in browsers, as defined in <a href=\"https://html.spec.whatwg.org/multipage/forms.html#client-side-form-validation\" rel=\"nofollow noreferrer\">https://html.spec.whatwg.org/multipage/forms.html#client-side-form-validation</a>. For questions about checking HTML documents for conformance errors, use the <a href=\"/questions/tagged/w3c-validation\" class=\"post-tag\" title=\"show questions tagged &#39;w3c-validation&#39;\" rel=\"tag\">w3c-validation</a> tag instead.</p>"
      ],
      "semantic_context": "Column 'body' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 953 unique values. About 4.4% of values are null. Sample values include: \"<p>Do not use this tag.  For more information, please visit <a href=\"http://meta.stackoverflow.com\">Meta</a>.</p>\", \"<p>Design and develop for Glass with the GDK.  The GDK is an Android SDK add-on that contains APIs for Glass-specific features.  By using the Android SDK and GDK, you can leverage the vast array of Android APIs and also design a great experience for Glass.  Unlike the Mirror API, Glassware built with the GDK runs on Glass itself, allowing access to low-level hardware features.</p>\n\n<p>Designed to make the existing Android SDK just work on Glass. This lets you code in a familiar environment, but for a uniquely novel device.</p>\n\n<p>In addition, you can use all of the existing Android development tools, and your Glassware is even delivered as a standard Android package (APK).</p>\", \"<p>OpenJDK (Open Java Development Kit) is a free and open source \nimplementation of the Java Platform, Standard Edition (Java SE). \nThe upstream community project OpenJDK is currently sponsored and \nled by Oracle and is released under the GNU General Public License, \nversion 2, with the Classpath Exception.</p>\n\n<p>Click here for free development subscription which allows you to\ndownload Red Hat's implementation of OpenJDK for \ndevelopment use <a href=\"https://developers.redhat.com/downloads/\" rel=\"nofollow noreferrer\">https://developers.redhat.com/downloads/</a></p>\", \"<p>The Web (short form of \"World Wide Web\") is a collection of usually linked documents that are each accessible on a network. The information on the web is accessible through a web browser, implementing the Hypertext Transport Protocol (HTTP).</p>\", \"<p><strong>Mailto</strong> is the URI scheme that targets the user's client from within the browser. Clicking a <strong>mailto</strong> link creates a new email message in the user's email client, optionally with <em>to</em>, <em>cc</em>, <em>subject</em>, and <em>body</em> pre-populated.</p>\n\n<p>A mailto link can be inserted into a webpage using a standard <a href=\"/questions/tagged/anchor\" class=\"post-tag\" title=\"show questions tagged &#39;anchor&#39;\" rel=\"tag\">anchor</a> link:</p>\n\n<ul>\n<li><p>The simplest mailto link specifying a recipient addresses..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Multiple recipients..</p>\n\n<pre><code>&lt;a href='mailto:nobody@host.com,nowhere@host.com'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Autofill the subject line..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com?subject=This%20is%20the%20subject'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Autofill the subject line and specify the email to be CC'd to..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com?cc=me@me.com&amp;subject=Testing%20mailto&amp;'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Mailto 3 people, with a BCC and a subject..</p>\n\n<pre><code>&lt;a href='mailto:someone@yoursite.com?cc=someoneelse@theirsite.com, another@thatsite.com, me@mysite.com&amp;bcc=lastperson@theirsite.com&amp;subject=Big%20News'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Autofill the subject line and body of the email with a linebreak..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com?subject=Readme&amp;body=This%20is%20the%20first%20line%0D%0AThis%20is%20the%20second'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n<li><p>Add a reply-to address..</p>\n\n<pre><code>&lt;a href='mailto:someone@host.com?reply-to=me@me.com'&gt;Click to email&lt;/a&gt;\n</code></pre></li>\n</ul>\n\n<h2>Special Character escaping</h2>\n\n<p>Within mailto URLs, the characters \"?\", \"=\", \"&amp;\" are reserved.</p>\n\n<p>Special characters that appear in addresses, headers or message contents must be encoded using a \"%\" followed by a two-digit hex number. See <a href=\"https://tools.ietf.org/html/rfc3986\" rel=\"nofollow\">RFC3986</a> for a exhaustive description of URL encodings.</p>\n\n<pre><code>Space = %20             : = %3A         ] = %5D\nLine Break = %0D%0A     ; = %3B         { = %7B\n\" = %22                 ' = %27         } = %7D\n# = %23                 &lt; = %3C         \\ = %5C\n$ = %24                 &gt; = %3E         | = %7C\n% = %25                 / = %2F         = = %3D\n^ = %5E                 ? = %3F\n&amp; = &amp;amp;               [ = %5B\n</code></pre>\n\n<p>8-bit characters in mailto URLs are forbidden.</p>\n\n<h2>More information</h2>\n\n<ul>\n<li><a href=\"http://www.ietf.org/rfc/rfc2368.txt\" rel=\"nofollow\">RFC 2368</a>, which defines the mailto scheme.</li>\n</ul>\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "accepted_answer_id",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'accepted_answer_id' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "answer_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'answer_count' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "comment_count",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'comment_count' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "community_owned_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 992,
      "null_percentage": 99.2,
      "distinct_count": 8,
      "min_value": "2011-08-29 22:00:40.127000+00:00",
      "max_value": "2013-09-11 20:30:39.530000+00:00",
      "example_values": [
        "2011-08-29 22:00:40.127000+00:00",
        "2012-04-25 02:02:56.677000+00:00",
        "2012-05-01 02:07:55.423000+00:00",
        "2012-06-18 20:31:29.153000+00:00",
        "2012-08-14 14:27:55.160000+00:00",
        "2013-02-06 06:02:18.733000+00:00",
        "2013-04-07 08:06:36.157000+00:00",
        "2013-09-11 20:30:39.530000+00:00"
      ],
      "semantic_context": "Column 'community_owned_date' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 8 unique values. This column is mostly empty with 99.2% null values. Sample dates include: 2011-08-29 22:00:40.127000+00:00, 2012-04-25 02:02:56.677000+00:00, 2012-05-01 02:07:55.423000+00:00. Date values range from 2011-08-29 22:00:40.127000+00:00 to 2013-09-11 20:30:39.530000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2010-07-22 17:16:23.833000+00:00",
      "max_value": "2022-08-02 15:39:46.787000+00:00",
      "example_values": [
        "2010-07-22 17:16:23.833000+00:00",
        "2011-12-10 18:58:13.057000+00:00",
        "2012-08-14 13:40:05.613000+00:00",
        "2013-04-16 13:42:16.690000+00:00",
        "2013-11-06 17:46:45.523000+00:00",
        "2014-03-14 20:34:47.037000+00:00",
        "2015-02-15 00:29:06.147000+00:00",
        "2016-05-21 17:00:05.257000+00:00",
        "2018-07-01 14:18:49.083000+00:00",
        "2022-08-02 15:39:46.787000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2010-07-22 17:16:23.833000+00:00, 2011-12-10 18:58:13.057000+00:00, 2012-08-14 13:40:05.613000+00:00. Date values range from 2010-07-22 17:16:23.833000+00:00 to 2022-08-02 15:39:46.787000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "favorite_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'favorite_count' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "last_activity_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2011-02-11 13:39:58.400000+00:00",
      "max_value": "2022-09-20 09:53:18.880000+00:00",
      "example_values": [
        "2011-02-11 13:39:58.400000+00:00",
        "2012-12-27 17:29:27.667000+00:00",
        "2013-10-26 17:31:07.960000+00:00",
        "2014-02-01 03:46:52.360000+00:00",
        "2014-11-11 20:40:15.430000+00:00",
        "2015-11-22 22:14:18.030000+00:00",
        "2017-06-14 14:31:03.377000+00:00",
        "2019-01-21 23:50:07.267000+00:00",
        "2020-03-30 20:36:51.097000+00:00",
        "2022-09-20 09:53:18.880000+00:00"
      ],
      "semantic_context": "Column 'last_activity_date' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2011-02-11 13:39:58.400000+00:00, 2012-12-27 17:29:27.667000+00:00, 2013-10-26 17:31:07.960000+00:00. Date values range from 2011-02-11 13:39:58.400000+00:00 to 2022-09-20 09:53:18.880000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "last_edit_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2011-02-11 13:39:58.400000+00:00",
      "max_value": "2022-09-20 09:53:18.880000+00:00",
      "example_values": [
        "2011-02-11 13:39:58.400000+00:00",
        "2013-01-13 10:35:45.650000+00:00",
        "2013-10-26 18:15:21.057000+00:00",
        "2014-02-18 13:21:44.530000+00:00",
        "2014-11-11 20:40:15.430000+00:00",
        "2015-11-22 22:14:18.030000+00:00",
        "2017-06-14 14:31:03.377000+00:00",
        "2019-01-21 23:50:07.267000+00:00",
        "2020-03-30 20:36:51.097000+00:00",
        "2022-09-20 09:53:18.880000+00:00"
      ],
      "semantic_context": "Column 'last_edit_date' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2011-02-11 13:39:58.400000+00:00, 2013-01-13 10:35:45.650000+00:00, 2013-10-26 18:15:21.057000+00:00. Date values range from 2011-02-11 13:39:58.400000+00:00 to 2022-09-20 09:53:18.880000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "last_editor_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 695,
      "null_percentage": 69.5,
      "distinct_count": 107,
      "example_values": [
        "user2555451",
        "user1228",
        "user7864386",
        "user2879327",
        "user456814",
        "user1693593",
        "user3956566",
        "user2273202",
        "user4039065",
        "user207616"
      ],
      "semantic_context": "Column 'last_editor_display_name' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is STRING. It contains 107 distinct values. This column has many nulls (69.5%). Sample values include: \"user2555451\", \"user1228\", \"user7864386\", \"user2879327\", \"user456814\". This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "last_editor_user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 277,
      "null_percentage": 27.700000000000003,
      "distinct_count": 369,
      "min_value": "-1.0",
      "max_value": "15497888.0",
      "avg_value": 2063079.2531120332,
      "std_dev": 2213097.1669779853,
      "example_values": [
        "-1.0",
        "584192.0",
        "1150712.0",
        "2824961.0",
        "15497888.0"
      ],
      "semantic_context": "Column 'last_editor_user_id' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains 369 distinct values. About 27.7% of values are null. Sample numeric values include: -1.0, 584192.0, 1150712.0, 2824961.0, 15497888.0. Values range from -1.0 to 15497888.0. The average value is 2063079.25."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "owner_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 608,
      "null_percentage": 60.8,
      "distinct_count": 124,
      "example_values": [
        "user2555451",
        "user1228",
        "user2273202",
        "user7864386",
        "user2879327",
        "user456814",
        "user3956566",
        "user1693593",
        "user207616",
        "user4039065"
      ],
      "semantic_context": "Column 'owner_display_name' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is STRING. It contains 124 distinct values. This column has many nulls (60.8%). Sample values include: \"user2555451\", \"user1228\", \"user2273202\", \"user7864386\", \"user2879327\". This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "owner_user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 392,
      "null_percentage": 39.2,
      "distinct_count": 202,
      "min_value": "3.0",
      "max_value": "13401859.0",
      "avg_value": 1775521.5131578948,
      "std_dev": 1807980.0988133955,
      "example_values": [
        "3.0",
        "534530.0",
        "1104384.0",
        "2824961.0",
        "13401859.0"
      ],
      "semantic_context": "Column 'owner_user_id' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains 202 distinct values. About 39.2% of values are null. Sample numeric values include: 3.0, 534530.0, 1104384.0, 2824961.0, 13401859.0. Values range from 3.0 to 13401859.0. The average value is 1775521.51."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "parent_id",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'parent_id' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "post_type_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "5",
      "max_value": "5",
      "avg_value": 5.0,
      "std_dev": 0.0,
      "example_values": [
        "5.0"
      ],
      "semantic_context": "Column 'post_type_id' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 5.0. Values range from 5 to 5. The average value is 5.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'score' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "tags",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 983,
      "null_percentage": 98.3,
      "distinct_count": 17,
      "example_values": [
        "<collapse>",
        "<azure-boards>",
        "<rtm>",
        "<go-toolchain>",
        "<oracle-apex-19.2>",
        "<shopify-api>",
        "<micronaut-micrometer>",
        "<spring-cloud-config-client>",
        "<alexa-presentation-language>",
        "<huawei-iap>"
      ],
      "top_values": {
        "<collapse>": 1,
        "<azure-boards>": 1,
        "<rtm>": 1,
        "<go-toolchain>": 1,
        "<oracle-apex-19.2>": 1
      },
      "semantic_context": "Column 'tags' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is STRING. It has moderate cardinality with 17 unique values. This column is mostly empty with 98.3% null values. Sample values include: \"<collapse>\", \"<azure-boards>\", \"<rtm>\", \"<go-toolchain>\", \"<oracle-apex-19.2>\". The most common values are: <collapse>, <azure-boards>, <rtm>."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki",
      "column_name": "view_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'view_count' from table 'posts_tag_wiki' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "3624980",
      "max_value": "73141992",
      "avg_value": 25573358.797,
      "std_dev": 16560101.881913811,
      "example_values": [
        "3624980.0",
        "12638919.75",
        "20569447.0",
        "33952881.0",
        "73141992.0"
      ],
      "semantic_context": "Column 'id' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 3624980.0, 12638919.75, 20569447.0, 33952881.0, 73141992.0. Values range from 3624980 to 73141992. The average value is 25573358.80."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "title",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 983,
      "null_percentage": 98.3,
      "distinct_count": 17,
      "example_values": [
        "MAXIFS",
        "app-dynamics-query-language",
        "deconstructor",
        "azure-boards",
        "alexa-presentation-language",
        "Annotation Processing",
        "Mask - TYPO3 extension",
        "anyway-config",
        "pandas-explode",
        "TEXTJOIN worksheet function"
      ],
      "top_values": {
        "MAXIFS": 1,
        "app-dynamics-query-language": 1,
        "deconstructor": 1,
        "azure-boards": 1,
        "alexa-presentation-language": 1
      },
      "semantic_context": "Column 'title' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is STRING. It has moderate cardinality with 17 unique values. This column is mostly empty with 98.3% null values. Sample values include: \"MAXIFS\", \"app-dynamics-query-language\", \"deconstructor\", \"azure-boards\", \"alexa-presentation-language\". The most common values are: MAXIFS, app-dynamics-query-language, deconstructor."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "body",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 8,
      "null_percentage": 0.8,
      "distinct_count": 984,
      "example_values": [
        "DO NOT EVEN THINK OF ASKING THIS QUESTION. List questions (shopping lists) are not suitable for Stack Overflow and are going to be closed as \"Not Constructive\" immediately.",
        "The Glass Development Kit (GDK) is an add-on to the Android SDK that lets you build Glassware that runs directly on Glass.",
        "StackEdit is a full-featured, open-source Markdown editor based on PageDown, the Markdown library used by Stack Overflow and the other Stack Exchange sites.",
        "A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows to load parts for the application on demand. Through \"loaders\" modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.",
        "For development issues encountered while using Red Hat's distribution of OpenJDK.",
        "Open Source Workflow Software and Business Process Management Software",
        "If you are using this tag, it is a good indication that you are asking a question that does not belong here.",
        "Do not use this tag.  Use [angularjs] instead.",
        "This tag should be [i18n] or [l10n].  Do not use this tag.",
        "SlimDX is an MIT-licensed, open-source framework that allows developers working with managed languages like C# and IronPython to leverage DirectX and many of Microsoft's other gaming-related multimedia APIs."
      ],
      "semantic_context": "Column 'body' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 984 unique values. About 0.8% of values are null. Sample values include: \"DO NOT EVEN THINK OF ASKING THIS QUESTION. List questions (shopping lists) are not suitable for Stack Overflow and are going to be closed as \"Not Constructive\" immediately.\", \"The Glass Development Kit (GDK) is an add-on to the Android SDK that lets you build Glassware that runs directly on Glass.\", \"StackEdit is a full-featured, open-source Markdown editor based on PageDown, the Markdown library used by Stack Overflow and the other Stack Exchange sites.\", \"A bundler for javascript and friends. Packs many modules into a few bundled assets. Code Splitting allows to load parts for the application on demand. Through \"loaders\" modules can be CommonJs, AMD, ES6 modules, CSS, Images, JSON, Coffeescript, LESS, ... and your custom stuff.\", \"For development issues encountered while using Red Hat's distribution of OpenJDK.\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "accepted_answer_id",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'accepted_answer_id' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "answer_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'answer_count' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "comment_count",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'comment_count' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "community_owned_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 998,
      "null_percentage": 99.8,
      "distinct_count": 2,
      "min_value": "2012-09-15 02:51:05.430000+00:00",
      "max_value": "2012-10-16 01:44:12.443000+00:00",
      "example_values": [
        "2012-09-15 02:51:05.430000+00:00",
        "2012-10-16 01:44:12.443000+00:00"
      ],
      "semantic_context": "Column 'community_owned_date' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 2 unique values. This column is mostly empty with 99.8% null values. Sample dates include: 2012-09-15 02:51:05.430000+00:00, 2012-10-16 01:44:12.443000+00:00. Date values range from 2012-09-15 02:51:05.430000+00:00 to 2012-10-16 01:44:12.443000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2010-08-15 06:08:07.747000+00:00",
      "max_value": "2022-07-27 17:04:43.680000+00:00",
      "example_values": [
        "2010-08-15 06:08:07.747000+00:00",
        "2012-01-12 11:38:28.327000+00:00",
        "2012-07-27 10:42:00.420000+00:00",
        "2013-05-28 16:35:42.230000+00:00",
        "2013-10-26 18:51:10.557000+00:00",
        "2014-03-14 20:22:14.783000+00:00",
        "2014-12-19 19:51:21.577000+00:00",
        "2016-05-19 15:58:23.957000+00:00",
        "2018-05-07 16:44:07.807000+00:00",
        "2022-07-27 17:04:43.680000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2010-08-15 06:08:07.747000+00:00, 2012-01-12 11:38:28.327000+00:00, 2012-07-27 10:42:00.420000+00:00. Date values range from 2010-08-15 06:08:07.747000+00:00 to 2022-07-27 17:04:43.680000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "favorite_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'favorite_count' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "last_activity_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2010-12-06 17:11:25.483000+00:00",
      "max_value": "2022-09-05 09:58:15.970000+00:00",
      "example_values": [
        "2010-12-06 17:11:25.483000+00:00",
        "2012-06-17 17:38:00.110000+00:00",
        "2013-04-24 12:56:56.967000+00:00",
        "2013-10-26 20:01:45.767000+00:00",
        "2014-03-08 22:36:51.537000+00:00",
        "2014-10-23 16:45:47.180000+00:00",
        "2016-03-03 17:29:40.203000+00:00",
        "2017-10-18 11:18:17.887000+00:00",
        "2019-09-24 07:53:07.713000+00:00",
        "2022-09-05 09:58:15.970000+00:00"
      ],
      "semantic_context": "Column 'last_activity_date' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2010-12-06 17:11:25.483000+00:00, 2012-06-17 17:38:00.110000+00:00, 2013-04-24 12:56:56.967000+00:00. Date values range from 2010-12-06 17:11:25.483000+00:00 to 2022-09-05 09:58:15.970000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "last_edit_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2010-12-06 17:11:25.483000+00:00",
      "max_value": "2022-09-05 09:58:15.970000+00:00",
      "example_values": [
        "2010-12-06 17:11:25.483000+00:00",
        "2012-06-17 17:38:00.110000+00:00",
        "2013-05-01 18:57:09.697000+00:00",
        "2013-10-26 20:26:32.957000+00:00",
        "2014-03-09 19:19:03.003000+00:00",
        "2014-10-23 16:45:47.180000+00:00",
        "2016-03-03 17:29:40.203000+00:00",
        "2017-10-18 11:18:17.887000+00:00",
        "2019-09-24 07:53:07.713000+00:00",
        "2022-09-05 09:58:15.970000+00:00"
      ],
      "semantic_context": "Column 'last_edit_date' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2010-12-06 17:11:25.483000+00:00, 2012-06-17 17:38:00.110000+00:00, 2013-05-01 18:57:09.697000+00:00. Date values range from 2010-12-06 17:11:25.483000+00:00 to 2022-09-05 09:58:15.970000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "last_editor_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 595,
      "null_percentage": 59.5,
      "distinct_count": 140,
      "example_values": [
        "user2555451",
        "user1228",
        "user2273202",
        "user7864386",
        "user207616",
        "user2879327",
        "user764357",
        "user456814",
        "user1693593",
        "user3348051"
      ],
      "semantic_context": "Column 'last_editor_display_name' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is STRING. It contains 140 distinct values. This column has many nulls (59.5%). Sample values include: \"user2555451\", \"user1228\", \"user2273202\", \"user7864386\", \"user207616\". This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "last_editor_user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 384,
      "null_percentage": 38.4,
      "distinct_count": 320,
      "min_value": "-1.0",
      "max_value": "18694400.0",
      "avg_value": 1928316.875,
      "std_dev": 2218402.8683517314,
      "example_values": [
        "-1.0",
        "582746.75",
        "1090562.0",
        "2824961.0",
        "18694400.0"
      ],
      "semantic_context": "Column 'last_editor_user_id' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is NUMERIC. It contains 320 distinct values. About 38.4% of values are null. Sample numeric values include: -1.0, 582746.75, 1090562.0, 2824961.0, 18694400.0. Values range from -1.0 to 18694400.0. The average value is 1928316.88."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "owner_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 513,
      "null_percentage": 51.300000000000004,
      "distinct_count": 156,
      "example_values": [
        "user2555451",
        "user1228",
        "user2273202",
        "user207616",
        "user7864386",
        "user764357",
        "user3348051",
        "user456814",
        "user2879327",
        "user1693593"
      ],
      "semantic_context": "Column 'owner_display_name' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is STRING. It contains 156 distinct values. This column has many nulls (51.3%). Sample values include: \"user2555451\", \"user1228\", \"user2273202\", \"user207616\", \"user7864386\". This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "owner_user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 487,
      "null_percentage": 48.699999999999996,
      "distinct_count": 167,
      "min_value": "1.0",
      "max_value": "18694400.0",
      "avg_value": 1722550.0350877193,
      "std_dev": 1960709.5378300473,
      "example_values": [
        "1.0",
        "584192.0",
        "1090562.0",
        "2824961.0",
        "18694400.0"
      ],
      "semantic_context": "Column 'owner_user_id' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is NUMERIC. It contains 167 distinct values. About 48.7% of values are null. Sample numeric values include: 1.0, 584192.0, 1090562.0, 2824961.0, 18694400.0. Values range from 1.0 to 18694400.0. The average value is 1722550.04."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "parent_id",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'parent_id' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "post_type_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "4",
      "max_value": "4",
      "avg_value": 4.0,
      "std_dev": 0.0,
      "example_values": [
        "4.0"
      ],
      "semantic_context": "Column 'post_type_id' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 4.0. Values range from 4 to 4. The average value is 4.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'score' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "tags",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 990,
      "null_percentage": 99.0,
      "distinct_count": 10,
      "example_values": [
        "<huawei-iap>",
        "<drop-duplicates>",
        "<nested-for-loop>",
        "<pandas-explode>",
        "<app-dynamics-query-language>",
        "<anyway-config>",
        "<alexa-presentation-language>",
        "<azure-boards>",
        "<deconstructor>",
        "<debian-packaging>"
      ],
      "top_values": {
        "<huawei-iap>": 1,
        "<drop-duplicates>": 1,
        "<nested-for-loop>": 1,
        "<pandas-explode>": 1,
        "<app-dynamics-query-language>": 1
      },
      "semantic_context": "Column 'tags' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is STRING. It has moderate cardinality with 10 unique values. This column is mostly empty with 99.0% null values. Sample values include: \"<huawei-iap>\", \"<drop-duplicates>\", \"<nested-for-loop>\", \"<pandas-explode>\", \"<app-dynamics-query-language>\". The most common values are: <huawei-iap>, <drop-duplicates>, <nested-for-loop>."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_tag_wiki_excerpt",
      "column_name": "view_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'view_count' from table 'posts_tag_wiki_excerpt' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 5,
      "min_value": "8041931",
      "max_value": "58551602",
      "avg_value": 21877332.2,
      "std_dev": 20677836.554457907,
      "example_values": [
        "8041931.0",
        "14264003.0",
        "14264412.0",
        "14264713.0",
        "58551602.0"
      ],
      "semantic_context": "Column 'id' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 5 unique values. This column has no null values. Sample numeric values include: 8041931.0, 14264003.0, 14264412.0, 14264713.0, 58551602.0. Values range from 8041931 to 58551602. The average value is 21877332.20."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "title",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'title' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "body",
      "data_type": "STRING",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 5,
      "example_values": [
        "<p>On Stack Exchange, we believe the core <a href=\"https://stackoverflow.com/help/site-moderators\">moderators</a> should come <em>from</em> the community, and be elected <em>by</em> the community itself through popular vote. We hold regular elections to determine who these community moderators will be.</p>\n<p>Community moderators are <a href=\"https://stackoverflow.blog/2009/05/18/a-theory-of-moderation/\">accorded the highest level of privilege in our community</a>, and should themselves be exemplars of positive behavior and leaders within the community.</p>\n<h2>Candidacy Criteria</h2>\n<p>Generally, moderators should have the following qualities:</p>\n<ul>\n<li>patient and fair</li>\n<li>leads by example</li>\n<li>shows respect for their fellow community members in their actions and words</li>\n<li>open to some light but firm moderation to keep the community on track, and resolve uncommon disputes and exceptions</li>\n</ul>\n<p>For the Stack Overflow election, candidates <strong>must</strong> have all the following badges:<br>\n<a href=\"https://stackoverflow.com/badges/32/civic-duty\">Civic Duty</a>,\n<a href=\"https://stackoverflow.com/badges/12/strunk-white\">Strunk &amp; White</a>,\n<a href=\"https://stackoverflow.com/badges/1002/deputy\">Deputy</a>,\n<a href=\"https://stackoverflow.com/badges/901/convention\">Convention</a></p>\n<p>\u2026and also <a href=\"https://meta.stackexchange.com/questions/274114/lets-disallow-nominations-from-people-whove-been-suspended-in-the-past-year\">cannot have been suspended during the past year</a>.</p>\n<p>Furthermore, all moderators <strong>must</strong> abide by the <a href=\"https://stackoverflow.com/legal/moderator-agreement\">moderator agreement</a>.</p>\n<p>Due to the size of Stack Overflow (<em>averaging around 2,700 flags per day</em>), moderation can be <a href=\"https://meta.stackoverflow.com/questions/287878/should-stack-overflow-moderators-have-a-standard-of-duty\">a significant responsibility</a> \u2014 if you can't dedicate <strong>at least 30 minutes daily</strong> to help shoulder the load, please defer to those who can.</p>\n<h2>Election Process</h2>\n<p>Every election has up to three phases:</p>\n<ol>\n<li><a href=\"https://stackoverflow.com/election/?tab=nomination\">Nomination</a></li>\n<li><a href=\"https://stackoverflow.com/election/?tab=primary\">Primary</a> (<em>active only if there are &gt;10 nominees</em>)</li>\n<li><a href=\"https://stackoverflow.com/election/?tab=election\">Election</a></li>\n</ol>\n<p>Their descriptions can be found in the blue notice boxes at the top of each corresponding page.</p>\n<p>For questions about the election process itself, you can search <a href=\"https://meta.stackoverflow.com/questions/tagged/election?tab=Active\">Meta</a>, or ask in the election chat room linked in the section below.</p>\n<p>Please participate in the moderator elections by ranking the candidates, and perhaps even by nominating yourself to be a community moderator.</p>",
        "<p><br></p>\n\n<h2>Welcome to the Stack Overflow Help Center!</h2>\n\n<p>If you are unable to find the answer you need here, you can also search for or ask a question about Stack Overflow on <a href=\"https://meta.stackoverflow.com\">Meta</a>!</p>\n\n<p><a href=\"https://meta.stackoverflow.com/questions/tagged/faq?tab=Votes\">Frequently Asked Questions</a> on Meta:<br></p>\n\n<ul>\n  <li><a href=\"https://meta.stackoverflow.com/q/334822\">How do I ask and answer homework questions?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/261592\">How much research effort is expected of Stack Overflow users?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/269653\">Why did I gain/lose reputation?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/252252\">What can I do when I think my question is not a duplicate?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/255583\">What can I do when getting \u201cWe are no longer accepting questions/answers from this account\u201d?</a>\n  <li><i>see also</i> <a href=\"https://meta.stackoverflow.com/questions/251225/faq-index-for-stack-overflow\">FAQ index</a>\n</ul>\n\n<p><br></p>",
        "<ul>\n    <li>Specific programming problems</li>\n    <li>Software algorithms</li>\n    <li>Coding techniques</li>\n    <li>Software development tools</li></ul>",
        "<p><strong>Stack Overflow</strong> is a question and answer site for professional and enthusiast programmers. It's built and run <em>by you</em> as part of the <a href=\"http://stackexchange.com\">Stack Exchange</a> network of Q&amp;A sites. With your help, we're working together to build a library of detailed, high-quality answers to every question about programming.</p>",
        "<ul>\n<li>Questions you haven't <em>tried</em> to find an answer for (show your work!)</li>\n<li>Product or service recommendations or comparisons</li>\n<li>Requests for lists of things, polls, opinions, discussions, etc.</li>\n</ul>"
      ],
      "top_values": {
        "<p>On Stack Exchange, we believe the core <a href=\"https://stackoverflow.com/help/site-moderators\">moderators</a> should come <em>from</em> the community, and be elected <em>by</em> the community itself through popular vote. We hold regular elections to determine who these community moderators will be.</p>\n<p>Community moderators are <a href=\"https://stackoverflow.blog/2009/05/18/a-theory-of-moderation/\">accorded the highest level of privilege in our community</a>, and should themselves be exemplars of positive behavior and leaders within the community.</p>\n<h2>Candidacy Criteria</h2>\n<p>Generally, moderators should have the following qualities:</p>\n<ul>\n<li>patient and fair</li>\n<li>leads by example</li>\n<li>shows respect for their fellow community members in their actions and words</li>\n<li>open to some light but firm moderation to keep the community on track, and resolve uncommon disputes and exceptions</li>\n</ul>\n<p>For the Stack Overflow election, candidates <strong>must</strong> have all the following badges:<br>\n<a href=\"https://stackoverflow.com/badges/32/civic-duty\">Civic Duty</a>,\n<a href=\"https://stackoverflow.com/badges/12/strunk-white\">Strunk &amp; White</a>,\n<a href=\"https://stackoverflow.com/badges/1002/deputy\">Deputy</a>,\n<a href=\"https://stackoverflow.com/badges/901/convention\">Convention</a></p>\n<p>\u2026and also <a href=\"https://meta.stackexchange.com/questions/274114/lets-disallow-nominations-from-people-whove-been-suspended-in-the-past-year\">cannot have been suspended during the past year</a>.</p>\n<p>Furthermore, all moderators <strong>must</strong> abide by the <a href=\"https://stackoverflow.com/legal/moderator-agreement\">moderator agreement</a>.</p>\n<p>Due to the size of Stack Overflow (<em>averaging around 2,700 flags per day</em>), moderation can be <a href=\"https://meta.stackoverflow.com/questions/287878/should-stack-overflow-moderators-have-a-standard-of-duty\">a significant responsibility</a> \u2014 if you can't dedicate <strong>at least 30 minutes daily</strong> to help shoulder the load, please defer to those who can.</p>\n<h2>Election Process</h2>\n<p>Every election has up to three phases:</p>\n<ol>\n<li><a href=\"https://stackoverflow.com/election/?tab=nomination\">Nomination</a></li>\n<li><a href=\"https://stackoverflow.com/election/?tab=primary\">Primary</a> (<em>active only if there are &gt;10 nominees</em>)</li>\n<li><a href=\"https://stackoverflow.com/election/?tab=election\">Election</a></li>\n</ol>\n<p>Their descriptions can be found in the blue notice boxes at the top of each corresponding page.</p>\n<p>For questions about the election process itself, you can search <a href=\"https://meta.stackoverflow.com/questions/tagged/election?tab=Active\">Meta</a>, or ask in the election chat room linked in the section below.</p>\n<p>Please participate in the moderator elections by ranking the candidates, and perhaps even by nominating yourself to be a community moderator.</p>": 1,
        "<p><br></p>\n\n<h2>Welcome to the Stack Overflow Help Center!</h2>\n\n<p>If you are unable to find the answer you need here, you can also search for or ask a question about Stack Overflow on <a href=\"https://meta.stackoverflow.com\">Meta</a>!</p>\n\n<p><a href=\"https://meta.stackoverflow.com/questions/tagged/faq?tab=Votes\">Frequently Asked Questions</a> on Meta:<br></p>\n\n<ul>\n  <li><a href=\"https://meta.stackoverflow.com/q/334822\">How do I ask and answer homework questions?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/261592\">How much research effort is expected of Stack Overflow users?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/269653\">Why did I gain/lose reputation?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/252252\">What can I do when I think my question is not a duplicate?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/255583\">What can I do when getting \u201cWe are no longer accepting questions/answers from this account\u201d?</a>\n  <li><i>see also</i> <a href=\"https://meta.stackoverflow.com/questions/251225/faq-index-for-stack-overflow\">FAQ index</a>\n</ul>\n\n<p><br></p>": 1,
        "<ul>\n    <li>Specific programming problems</li>\n    <li>Software algorithms</li>\n    <li>Coding techniques</li>\n    <li>Software development tools</li></ul>": 1,
        "<p><strong>Stack Overflow</strong> is a question and answer site for professional and enthusiast programmers. It's built and run <em>by you</em> as part of the <a href=\"http://stackexchange.com\">Stack Exchange</a> network of Q&amp;A sites. With your help, we're working together to build a library of detailed, high-quality answers to every question about programming.</p>": 1,
        "<ul>\n<li>Questions you haven't <em>tried</em> to find an answer for (show your work!)</li>\n<li>Product or service recommendations or comparisons</li>\n<li>Requests for lists of things, polls, opinions, discussions, etc.</li>\n</ul>": 1
      },
      "semantic_context": "Column 'body' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is STRING. It is a low-cardinality categorical field with 5 unique values. This column has no null values. Sample values include: \"<p>On Stack Exchange, we believe the core <a href=\"https://stackoverflow.com/help/site-moderators\">moderators</a> should come <em>from</em> the community, and be elected <em>by</em> the community itself through popular vote. We hold regular elections to determine who these community moderators will be.</p>\n<p>Community moderators are <a href=\"https://stackoverflow.blog/2009/05/18/a-theory-of-moderation/\">accorded the highest level of privilege in our community</a>, and should themselves be exemplars of positive behavior and leaders within the community.</p>\n<h2>Candidacy Criteria</h2>\n<p>Generally, moderators should have the following qualities:</p>\n<ul>\n<li>patient and fair</li>\n<li>leads by example</li>\n<li>shows respect for their fellow community members in their actions and words</li>\n<li>open to some light but firm moderation to keep the community on track, and resolve uncommon disputes and exceptions</li>\n</ul>\n<p>For the Stack Overflow election, candidates <strong>must</strong> have all the following badges:<br>\n<a href=\"https://stackoverflow.com/badges/32/civic-duty\">Civic Duty</a>,\n<a href=\"https://stackoverflow.com/badges/12/strunk-white\">Strunk &amp; White</a>,\n<a href=\"https://stackoverflow.com/badges/1002/deputy\">Deputy</a>,\n<a href=\"https://stackoverflow.com/badges/901/convention\">Convention</a></p>\n<p>\u2026and also <a href=\"https://meta.stackexchange.com/questions/274114/lets-disallow-nominations-from-people-whove-been-suspended-in-the-past-year\">cannot have been suspended during the past year</a>.</p>\n<p>Furthermore, all moderators <strong>must</strong> abide by the <a href=\"https://stackoverflow.com/legal/moderator-agreement\">moderator agreement</a>.</p>\n<p>Due to the size of Stack Overflow (<em>averaging around 2,700 flags per day</em>), moderation can be <a href=\"https://meta.stackoverflow.com/questions/287878/should-stack-overflow-moderators-have-a-standard-of-duty\">a significant responsibility</a> \u2014 if you can't dedicate <strong>at least 30 minutes daily</strong> to help shoulder the load, please defer to those who can.</p>\n<h2>Election Process</h2>\n<p>Every election has up to three phases:</p>\n<ol>\n<li><a href=\"https://stackoverflow.com/election/?tab=nomination\">Nomination</a></li>\n<li><a href=\"https://stackoverflow.com/election/?tab=primary\">Primary</a> (<em>active only if there are &gt;10 nominees</em>)</li>\n<li><a href=\"https://stackoverflow.com/election/?tab=election\">Election</a></li>\n</ol>\n<p>Their descriptions can be found in the blue notice boxes at the top of each corresponding page.</p>\n<p>For questions about the election process itself, you can search <a href=\"https://meta.stackoverflow.com/questions/tagged/election?tab=Active\">Meta</a>, or ask in the election chat room linked in the section below.</p>\n<p>Please participate in the moderator elections by ranking the candidates, and perhaps even by nominating yourself to be a community moderator.</p>\", \"<p><br></p>\n\n<h2>Welcome to the Stack Overflow Help Center!</h2>\n\n<p>If you are unable to find the answer you need here, you can also search for or ask a question about Stack Overflow on <a href=\"https://meta.stackoverflow.com\">Meta</a>!</p>\n\n<p><a href=\"https://meta.stackoverflow.com/questions/tagged/faq?tab=Votes\">Frequently Asked Questions</a> on Meta:<br></p>\n\n<ul>\n  <li><a href=\"https://meta.stackoverflow.com/q/334822\">How do I ask and answer homework questions?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/261592\">How much research effort is expected of Stack Overflow users?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/269653\">Why did I gain/lose reputation?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/252252\">What can I do when I think my question is not a duplicate?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/255583\">What can I do when getting \u201cWe are no longer accepting questions/answers from this account\u201d?</a>\n  <li><i>see also</i> <a href=\"https://meta.stackoverflow.com/questions/251225/faq-index-for-stack-overflow\">FAQ index</a>\n</ul>\n\n<p><br></p>\", \"<ul>\n    <li>Specific programming problems</li>\n    <li>Software algorithms</li>\n    <li>Coding techniques</li>\n    <li>Software development tools</li></ul>\", \"<p><strong>Stack Overflow</strong> is a question and answer site for professional and enthusiast programmers. It's built and run <em>by you</em> as part of the <a href=\"http://stackexchange.com\">Stack Exchange</a> network of Q&amp;A sites. With your help, we're working together to build a library of detailed, high-quality answers to every question about programming.</p>\", \"<ul>\n<li>Questions you haven't <em>tried</em> to find an answer for (show your work!)</li>\n<li>Product or service recommendations or comparisons</li>\n<li>Requests for lists of things, polls, opinions, discussions, etc.</li>\n</ul>\". The most common values are: <p>On Stack Exchange, we believe the core <a href=\"https://stackoverflow.com/help/site-moderators\">moderators</a> should come <em>from</em> the community, and be elected <em>by</em> the community itself through popular vote. We hold regular elections to determine who these community moderators will be.</p>\n<p>Community moderators are <a href=\"https://stackoverflow.blog/2009/05/18/a-theory-of-moderation/\">accorded the highest level of privilege in our community</a>, and should themselves be exemplars of positive behavior and leaders within the community.</p>\n<h2>Candidacy Criteria</h2>\n<p>Generally, moderators should have the following qualities:</p>\n<ul>\n<li>patient and fair</li>\n<li>leads by example</li>\n<li>shows respect for their fellow community members in their actions and words</li>\n<li>open to some light but firm moderation to keep the community on track, and resolve uncommon disputes and exceptions</li>\n</ul>\n<p>For the Stack Overflow election, candidates <strong>must</strong> have all the following badges:<br>\n<a href=\"https://stackoverflow.com/badges/32/civic-duty\">Civic Duty</a>,\n<a href=\"https://stackoverflow.com/badges/12/strunk-white\">Strunk &amp; White</a>,\n<a href=\"https://stackoverflow.com/badges/1002/deputy\">Deputy</a>,\n<a href=\"https://stackoverflow.com/badges/901/convention\">Convention</a></p>\n<p>\u2026and also <a href=\"https://meta.stackexchange.com/questions/274114/lets-disallow-nominations-from-people-whove-been-suspended-in-the-past-year\">cannot have been suspended during the past year</a>.</p>\n<p>Furthermore, all moderators <strong>must</strong> abide by the <a href=\"https://stackoverflow.com/legal/moderator-agreement\">moderator agreement</a>.</p>\n<p>Due to the size of Stack Overflow (<em>averaging around 2,700 flags per day</em>), moderation can be <a href=\"https://meta.stackoverflow.com/questions/287878/should-stack-overflow-moderators-have-a-standard-of-duty\">a significant responsibility</a> \u2014 if you can't dedicate <strong>at least 30 minutes daily</strong> to help shoulder the load, please defer to those who can.</p>\n<h2>Election Process</h2>\n<p>Every election has up to three phases:</p>\n<ol>\n<li><a href=\"https://stackoverflow.com/election/?tab=nomination\">Nomination</a></li>\n<li><a href=\"https://stackoverflow.com/election/?tab=primary\">Primary</a> (<em>active only if there are &gt;10 nominees</em>)</li>\n<li><a href=\"https://stackoverflow.com/election/?tab=election\">Election</a></li>\n</ol>\n<p>Their descriptions can be found in the blue notice boxes at the top of each corresponding page.</p>\n<p>For questions about the election process itself, you can search <a href=\"https://meta.stackoverflow.com/questions/tagged/election?tab=Active\">Meta</a>, or ask in the election chat room linked in the section below.</p>\n<p>Please participate in the moderator elections by ranking the candidates, and perhaps even by nominating yourself to be a community moderator.</p>, <p><br></p>\n\n<h2>Welcome to the Stack Overflow Help Center!</h2>\n\n<p>If you are unable to find the answer you need here, you can also search for or ask a question about Stack Overflow on <a href=\"https://meta.stackoverflow.com\">Meta</a>!</p>\n\n<p><a href=\"https://meta.stackoverflow.com/questions/tagged/faq?tab=Votes\">Frequently Asked Questions</a> on Meta:<br></p>\n\n<ul>\n  <li><a href=\"https://meta.stackoverflow.com/q/334822\">How do I ask and answer homework questions?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/261592\">How much research effort is expected of Stack Overflow users?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/269653\">Why did I gain/lose reputation?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/252252\">What can I do when I think my question is not a duplicate?</a>\n  <li><a href=\"https://meta.stackoverflow.com/q/255583\">What can I do when getting \u201cWe are no longer accepting questions/answers from this account\u201d?</a>\n  <li><i>see also</i> <a href=\"https://meta.stackoverflow.com/questions/251225/faq-index-for-stack-overflow\">FAQ index</a>\n</ul>\n\n<p><br></p>, <ul>\n    <li>Specific programming problems</li>\n    <li>Software algorithms</li>\n    <li>Coding techniques</li>\n    <li>Software development tools</li></ul>."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "accepted_answer_id",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'accepted_answer_id' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "answer_count",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'answer_count' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "comment_count",
      "data_type": "NUMERIC",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'comment_count' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "community_owned_date",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'community_owned_date' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 5,
      "min_value": "2011-11-07 20:07:04.337000+00:00",
      "max_value": "2019-10-25 02:58:15.170000+00:00",
      "example_values": [
        "2011-11-07 20:07:04.337000+00:00",
        "2013-01-10 17:42:17.640000+00:00",
        "2013-01-10 18:06:00.407000+00:00",
        "2013-01-10 18:23:13.957000+00:00",
        "2019-10-25 02:58:15.170000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 5 unique values. This column has no null values. Sample dates include: 2011-11-07 20:07:04.337000+00:00, 2013-01-10 17:42:17.640000+00:00, 2013-01-10 18:06:00.407000+00:00. Date values range from 2011-11-07 20:07:04.337000+00:00 to 2019-10-25 02:58:15.170000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "favorite_count",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'favorite_count' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "last_activity_date",
      "data_type": "DATETIME",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 5,
      "min_value": "2013-01-17 01:22:09.657000+00:00",
      "max_value": "2021-10-29 07:11:57.020000+00:00",
      "example_values": [
        "2013-01-17 01:22:09.657000+00:00",
        "2020-06-09 05:32:24.067000+00:00",
        "2021-10-04 18:10:02.047000+00:00",
        "2021-10-21 03:41:34.307000+00:00",
        "2021-10-29 07:11:57.020000+00:00"
      ],
      "semantic_context": "Column 'last_activity_date' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 5 unique values. This column has no null values. Sample dates include: 2013-01-17 01:22:09.657000+00:00, 2020-06-09 05:32:24.067000+00:00, 2021-10-04 18:10:02.047000+00:00. Date values range from 2013-01-17 01:22:09.657000+00:00 to 2021-10-29 07:11:57.020000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "last_edit_date",
      "data_type": "DATETIME",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 5,
      "min_value": "2013-01-17 01:22:09.657000+00:00",
      "max_value": "2021-10-29 07:11:57.020000+00:00",
      "example_values": [
        "2013-01-17 01:22:09.657000+00:00",
        "2020-06-09 05:32:24.067000+00:00",
        "2021-10-04 18:10:02.047000+00:00",
        "2021-10-21 03:41:34.307000+00:00",
        "2021-10-29 07:11:57.020000+00:00"
      ],
      "semantic_context": "Column 'last_edit_date' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 5 unique values. This column has no null values. Sample dates include: 2013-01-17 01:22:09.657000+00:00, 2020-06-09 05:32:24.067000+00:00, 2021-10-04 18:10:02.047000+00:00. Date values range from 2013-01-17 01:22:09.657000+00:00 to 2021-10-29 07:11:57.020000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "last_editor_display_name",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'last_editor_display_name' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "last_editor_user_id",
      "data_type": "NUMERIC",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 4,
      "min_value": "811",
      "max_value": "584192",
      "avg_value": 401754.8,
      "std_dev": 241643.77070121214,
      "example_values": [
        "811.0",
        "366904.0",
        "472675.0",
        "584192.0"
      ],
      "semantic_context": "Column 'last_editor_user_id' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 4 unique values. This column has no null values. Sample numeric values include: 811.0, 366904.0, 472675.0, 584192.0. Values range from 811 to 584192. The average value is 401754.80."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "owner_display_name",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'owner_display_name' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "owner_user_id",
      "data_type": "NUMERIC",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "-1",
      "max_value": "-1",
      "avg_value": -1.0,
      "std_dev": 0.0,
      "example_values": [
        "-1.0"
      ],
      "semantic_context": "Column 'owner_user_id' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: -1.0. Values range from -1 to -1. The average value is -1.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "parent_id",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'parent_id' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "post_type_id",
      "data_type": "NUMERIC",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "7",
      "max_value": "7",
      "avg_value": 7.0,
      "std_dev": 0.0,
      "example_values": [
        "7.0"
      ],
      "semantic_context": "Column 'post_type_id' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 7.0. Values range from 7 to 7. The average value is 7.00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 5,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 3,
      "min_value": "0",
      "max_value": "2",
      "avg_value": 0.6,
      "std_dev": 0.8944271909999159,
      "example_values": [
        "0.0",
        "1.0",
        "2.0"
      ],
      "semantic_context": "Column 'score' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 3 unique values. This column has no null values. Sample numeric values include: 0.0, 1.0, 2.0. Values range from 0 to 2. The average value is 0.60. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "tags",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'tags' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "posts_wiki_placeholder",
      "column_name": "view_count",
      "data_type": "object",
      "total_count": 5,
      "null_count": 5,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'view_count' from table 'posts_wiki_placeholder' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "15319",
      "max_value": "37753493",
      "avg_value": 17552813.204,
      "std_dev": 11706390.73445732,
      "example_values": [
        "15319.0",
        "6996968.25",
        "17530249.5",
        "27913634.0",
        "37753493.0"
      ],
      "semantic_context": "Column 'id' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 15319.0, 6996968.25, 17530249.5, 27913634.0, 37753493.0. Values range from 15319 to 37753493. The average value is 17552813.20."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "title",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'title' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "body",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 4,
      "null_percentage": 0.4,
      "distinct_count": 996,
      "example_values": [
        "<p>I would recommend that you cache them somewhere inside the DOM itself either at their natural place or in a cache <code>div</code> just hide them or their container (<code>visibility: hidden</code>). Move them around the DOM (e.g. <code>final_container.appendChild(cache.removeChild(cached_item))</code>) and show them as required. This should give you the best bang for the buck in terms of memory efficiency speed and simplicity when dealing with moderate amounts of cached information.</p> <p>With the proper cache directives inside your AJAX replies' headers the browser might also perform caching for your AJAX replies just like for regular pages.</p> <p>Check out <a href= http://ajaxpatterns.org/Browser-Side%5FCache rel= nofollow >this Browser-Side Cache article</a> for ideas too.</p>",
        "<p>Use takeUnretainedValue() and takeRetainedValue() to get CFString object and cast it to NSString</p> <pre><code>func peoplePickerNavigationController(peoplePicker: ABPeoplePickerNavigationController! didSelectPerson person: ABRecord!) { let nameCFString : CFString = ABRecordCopyCompositeName(person).takeRetainedValue() let name : NSString = nameCFString as NSString } </code></pre>",
        "<p>There are a couple of global options that might affect how values are printed. In this case <code>scipen</code> is the one you want to move:</p> <pre><code>old_op &lt;- options(scipen=10) xyplot(lat*1000000 ~ long data = quakes) options(old_op) # probably better to restore it so the rest of you session is more normal </code></pre>",
        "<p>Managing tabs is a view concern. Rather than implementing a factory I recommend creating two directives: <code>tabContainer</code> and <code>tab</code>. The <code>tab</code> directive registers itself with the parent <code>tabContainer</code> using the <code>require</code> attribute to access the parent directive's controller API.</p> <p><a href= http://plnkr.co/edit/DX5yz8X4FHMmnQvDZNDG?p=preview rel= nofollow >Demo</a></p> <h3>Usage</h3> <pre><code>&lt;tab-container selected= tab2 &gt; &lt;tab name= tab1 &gt;tab1&lt;/tab&gt; &lt;tab name= tab2 &gt;tab2&lt;/tab&gt; &lt;/tab-container&gt; </code></pre> <h2>Parent Directive</h2> <p>The parent directive publishes the following controller API that the child tab directives will access:</p> <p><b>tabContainer controller</b></p> <pre><code>// registers this tab with the parent tabContainer this.register = function(element) { $scope.tabs.push(element); } // returns the selected tab object whose // name property indicates which tab is active this.getSelected = function() { return $scope.selectedTab; } </code></pre> <h2>Child Directive</h2> <p>The tab directive is able to access the parent controller by requiring the parent directive in its directive definition and accessing the parent directive's controller as the 4th argument to the tab directive's link function:</p> <p><b> tab directive definition</b></p> <pre><code>scope: true require: '^tabContainer' link: function(scope element attr tabContainer) { // set the tab so that it is visible in the tab directive's scope. scope.tab = { name: attr.name element:element}; scope.selectedTab = tabContainer.getSelected(); tabContainer.register(scope.tab); } </code></pre> <p>The scope is set to <code>true</code> so that each tab will create its own child scope and not interfere with the scope of other tabs.</p> <h2>Template Files</h2> <p>For example purposes the directive templates are embedded in the HTML:</p> <pre><code>&lt;script type= text/ng-template id= tabContainer.html &gt; &lt;ul class= nav nav-tabs &gt; &lt;li ng-repeat= tab in tabs data-ng-class= {active:selectedTab.name===tab.name} &gt; &lt;a href ng-click= changeTab(tab) &gt; &lt;i class= fa fa-list &gt;{{tab.name}}&lt;/i&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ng-transclude&gt;&lt;/ng-transclude&gt; &lt;/script&gt; &lt;script type= text/ng-template id= tab.html &gt; &lt;div data-ng-class= {activeTab:selectedTab.name===tab.name} ng-show= selectedTab.name === tab.name &gt; &lt;ng-transclude&gt;&lt;/ng-transclude&gt; &lt;/div&gt; &lt;/script&gt; </code></pre> <p>It is recommended to move these to dedicated HTML files.</p> <h2>Changing the Active Tab</h2> <p>The user is able to change the active tab by clicking the tab link. This is achieved by publishing a <code>$scope</code> function in the parent controller:</p> <pre><code>$scope.changeTab = function(tab) { $scope.selectedTab.name = tab.name; } </code></pre> <h2>Creating a Tabs Module</h2> <p>The beauty of AngularJS and its pluggable modular architecture is that you can extend the AngularJS directive ecosystem and have the directives work together seamlessly. For example you could encapsulate the above tabs directive into a <code>tabs</code> module and even use the ngRepeat directive to bind the tabs.</p> <p><a href= http://plnkr.co/edit/NpT6RIn1O71GUhWcr8qm?p=preview rel= nofollow >Demo</a></p> <h3>Controller</h3> <pre><code>var app = angular.module('app'['tabs']); app.controller('ctrl' function($scope) { $scope.tabData = [ { name: 'tab1' body: 'You selected tab1!'} { name: 'tab2' body: 'You selected tab2!'} { name: 'tab3' body: 'You selected tab3!'} { name: 'tab4' body: 'You selected tab4!'} ]; }); </code></pre> <h3>View</h3> <pre><code>&lt;div class= container ng-controller= ctrl &gt; &lt;tab-container selected= tab1 &gt; &lt;tab ng-repeat= tab in tabData name= {{tab.name}} &gt;{{ tab.body }} &lt;/tab&gt; &lt;/tab-container&gt; &lt;/div&gt; </code></pre>",
        "<p>I changed the cdoSMTPServer to localhost all ship shape!</p>",
        "<p>The correct initializer for a <code>CALayer</code> is <code>+layer</code> you should override the <code>+layer</code> method instead of the <code>-init</code> that is maybe not even called at all.</p>",
        "<p>first one changes whole doc second one to show changes only changes #font all you need is </p> <pre><code> $('document').css('font-family''DilleniaUPC'); </code></pre> <p><div class= snippet data-lang= js data-hide= false > <div class= snippet-code > <pre class= snippet-code-js lang-js prettyprint-override ><code> $('document').css('font-family''Georgia'); $('#font').css('font-family''Arial');</code></pre> <pre class= snippet-code-html lang-html prettyprint-override ><code>&lt;script src= https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js &gt;&lt;/script&gt; Hello &lt;div id= font &gt;Hello&lt;/div&gt;</code></pre> </div> </div> </p>",
        "<p>Please add <strong>line-height</strong> in your css it will work also ie6</p>",
        "<p>Even better:</p> <pre><code>[self dismissViewControllerAnimated:NO completion:^(void) { // Perform the segue here. }]; </code></pre>",
        "<p>A character literal is always an array of <em>read-only</em> characters with the array of course including the string terminator. As all arrays it of course decays to a pointer to the first element but being <em>read-only</em> makes it a pointer to a <code>const</code>. It originated in C and was inherited by C++.</p> <p>The thing is that C99 allows the weaker <code>char *</code> (without <code>const</code>) which C++ (with its stronger type system) does not allow. Some compilers may issue a warning if making a non-constant <code>char *</code> point to a string literal but it's allowed. Trying to modify the string through the non-const <code>char *</code> of course leads to <em>undefined behavior</em>.</p> <p>I don't have a copy of the C11 specification in front of me but I don't think that C11 makes this stronger.</p>"
      ],
      "semantic_context": "Column 'body' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 996 unique values. About 0.4% of values are null. Sample values include: \"<p>I would recommend that you cache them somewhere inside the DOM itself either at their natural place or in a cache <code>div</code> just hide them or their container (<code>visibility: hidden</code>). Move them around the DOM (e.g. <code>final_container.appendChild(cache.removeChild(cached_item))</code>) and show them as required. This should give you the best bang for the buck in terms of memory efficiency speed and simplicity when dealing with moderate amounts of cached information.</p> <p>With the proper cache directives inside your AJAX replies' headers the browser might also perform caching for your AJAX replies just like for regular pages.</p> <p>Check out <a href= http://ajaxpatterns.org/Browser-Side%5FCache rel= nofollow >this Browser-Side Cache article</a> for ideas too.</p>\", \"<p>Use takeUnretainedValue() and takeRetainedValue() to get CFString object and cast it to NSString</p> <pre><code>func peoplePickerNavigationController(peoplePicker: ABPeoplePickerNavigationController! didSelectPerson person: ABRecord!) { let nameCFString : CFString = ABRecordCopyCompositeName(person).takeRetainedValue() let name : NSString = nameCFString as NSString } </code></pre>\", \"<p>There are a couple of global options that might affect how values are printed. In this case <code>scipen</code> is the one you want to move:</p> <pre><code>old_op &lt;- options(scipen=10) xyplot(lat*1000000 ~ long data = quakes) options(old_op) # probably better to restore it so the rest of you session is more normal </code></pre>\", \"<p>Managing tabs is a view concern. Rather than implementing a factory I recommend creating two directives: <code>tabContainer</code> and <code>tab</code>. The <code>tab</code> directive registers itself with the parent <code>tabContainer</code> using the <code>require</code> attribute to access the parent directive's controller API.</p> <p><a href= http://plnkr.co/edit/DX5yz8X4FHMmnQvDZNDG?p=preview rel= nofollow >Demo</a></p> <h3>Usage</h3> <pre><code>&lt;tab-container selected= tab2 &gt; &lt;tab name= tab1 &gt;tab1&lt;/tab&gt; &lt;tab name= tab2 &gt;tab2&lt;/tab&gt; &lt;/tab-container&gt; </code></pre> <h2>Parent Directive</h2> <p>The parent directive publishes the following controller API that the child tab directives will access:</p> <p><b>tabContainer controller</b></p> <pre><code>// registers this tab with the parent tabContainer this.register = function(element) { $scope.tabs.push(element); } // returns the selected tab object whose // name property indicates which tab is active this.getSelected = function() { return $scope.selectedTab; } </code></pre> <h2>Child Directive</h2> <p>The tab directive is able to access the parent controller by requiring the parent directive in its directive definition and accessing the parent directive's controller as the 4th argument to the tab directive's link function:</p> <p><b> tab directive definition</b></p> <pre><code>scope: true require: '^tabContainer' link: function(scope element attr tabContainer) { // set the tab so that it is visible in the tab directive's scope. scope.tab = { name: attr.name element:element}; scope.selectedTab = tabContainer.getSelected(); tabContainer.register(scope.tab); } </code></pre> <p>The scope is set to <code>true</code> so that each tab will create its own child scope and not interfere with the scope of other tabs.</p> <h2>Template Files</h2> <p>For example purposes the directive templates are embedded in the HTML:</p> <pre><code>&lt;script type= text/ng-template id= tabContainer.html &gt; &lt;ul class= nav nav-tabs &gt; &lt;li ng-repeat= tab in tabs data-ng-class= {active:selectedTab.name===tab.name} &gt; &lt;a href ng-click= changeTab(tab) &gt; &lt;i class= fa fa-list &gt;{{tab.name}}&lt;/i&gt;&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;ng-transclude&gt;&lt;/ng-transclude&gt; &lt;/script&gt; &lt;script type= text/ng-template id= tab.html &gt; &lt;div data-ng-class= {activeTab:selectedTab.name===tab.name} ng-show= selectedTab.name === tab.name &gt; &lt;ng-transclude&gt;&lt;/ng-transclude&gt; &lt;/div&gt; &lt;/script&gt; </code></pre> <p>It is recommended to move these to dedicated HTML files.</p> <h2>Changing the Active Tab</h2> <p>The user is able to change the active tab by clicking the tab link. This is achieved by publishing a <code>$scope</code> function in the parent controller:</p> <pre><code>$scope.changeTab = function(tab) { $scope.selectedTab.name = tab.name; } </code></pre> <h2>Creating a Tabs Module</h2> <p>The beauty of AngularJS and its pluggable modular architecture is that you can extend the AngularJS directive ecosystem and have the directives work together seamlessly. For example you could encapsulate the above tabs directive into a <code>tabs</code> module and even use the ngRepeat directive to bind the tabs.</p> <p><a href= http://plnkr.co/edit/NpT6RIn1O71GUhWcr8qm?p=preview rel= nofollow >Demo</a></p> <h3>Controller</h3> <pre><code>var app = angular.module('app'['tabs']); app.controller('ctrl' function($scope) { $scope.tabData = [ { name: 'tab1' body: 'You selected tab1!'} { name: 'tab2' body: 'You selected tab2!'} { name: 'tab3' body: 'You selected tab3!'} { name: 'tab4' body: 'You selected tab4!'} ]; }); </code></pre> <h3>View</h3> <pre><code>&lt;div class= container ng-controller= ctrl &gt; &lt;tab-container selected= tab1 &gt; &lt;tab ng-repeat= tab in tabData name= {{tab.name}} &gt;{{ tab.body }} &lt;/tab&gt; &lt;/tab-container&gt; &lt;/div&gt; </code></pre>\", \"<p>I changed the cdoSMTPServer to localhost all ship shape!</p>\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "accepted_answer_id",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'accepted_answer_id' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "answer_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'answer_count' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "comment_count",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "min_value": "0",
      "max_value": "0",
      "avg_value": 0.0,
      "std_dev": 0.0,
      "example_values": [
        "0.0"
      ],
      "semantic_context": "Column 'comment_count' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is NUMERIC. It contains a single constant value. This column has no null values. Sample numeric values include: 0.0. Values range from 0 to 0. The average value is 0.00. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "community_owned_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 996,
      "null_percentage": 99.6,
      "distinct_count": 4,
      "min_value": "2008-11-29 06:28:08.180000+00:00",
      "max_value": "2013-03-13 11:16:37.463000+00:00",
      "example_values": [
        "2008-11-29 06:28:08.180000+00:00",
        "2009-02-25 16:40:17.990000+00:00",
        "2013-02-01 09:16:58.790000+00:00",
        "2013-03-13 11:16:37.463000+00:00"
      ],
      "semantic_context": "Column 'community_owned_date' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is DATETIME. It is a low-cardinality categorical field with 4 unique values. This column is mostly empty with 99.6% null values. Sample dates include: 2008-11-29 06:28:08.180000+00:00, 2009-02-25 16:40:17.990000+00:00, 2013-02-01 09:16:58.790000+00:00. Date values range from 2008-11-29 06:28:08.180000+00:00 to 2013-03-13 11:16:37.463000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2008-08-18 22:26:57.630000+00:00",
      "max_value": "2016-06-10 16:53:59.167000+00:00",
      "example_values": [
        "2008-08-18 22:26:57.630000+00:00",
        "2009-12-21 14:40:54.583000+00:00",
        "2011-04-06 08:32:34.250000+00:00",
        "2012-04-04 11:41:02.017000+00:00",
        "2013-02-23 16:03:44.410000+00:00",
        "2013-10-23 11:31:59.700000+00:00",
        "2014-06-18 13:47:35.103000+00:00",
        "2015-03-16 20:37:10.127000+00:00",
        "2015-11-05 12:22:44.470000+00:00",
        "2016-06-10 16:53:59.167000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2008-08-18 22:26:57.630000+00:00, 2009-12-21 14:40:54.583000+00:00, 2011-04-06 08:32:34.250000+00:00. Date values range from 2008-08-18 22:26:57.630000+00:00 to 2016-06-10 16:53:59.167000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "favorite_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'favorite_count' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "last_activity_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2008-08-18 22:26:57.630000+00:00",
      "max_value": "2016-06-10 16:53:59.167000+00:00",
      "example_values": [
        "2008-08-18 22:26:57.630000+00:00",
        "2010-01-05 08:04:00.723000+00:00",
        "2011-06-13 02:38:35.200000+00:00",
        "2012-05-09 13:23:24.720000+00:00",
        "2013-03-20 20:31:11.913000+00:00",
        "2013-11-10 20:52:08.077000+00:00",
        "2014-06-30 22:25:06.357000+00:00",
        "2015-04-07 17:49:03.027000+00:00",
        "2015-11-06 04:58:12.827000+00:00",
        "2016-06-10 16:53:59.167000+00:00"
      ],
      "semantic_context": "Column 'last_activity_date' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2008-08-18 22:26:57.630000+00:00, 2010-01-05 08:04:00.723000+00:00, 2011-06-13 02:38:35.200000+00:00. Date values range from 2008-08-18 22:26:57.630000+00:00 to 2016-06-10 16:53:59.167000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "last_edit_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 777,
      "null_percentage": 77.7,
      "distinct_count": 223,
      "min_value": "2008-09-16 14:23:32.427000+00:00",
      "max_value": "2016-06-09 18:03:49.163000+00:00",
      "example_values": [
        "2008-09-16 14:23:32.427000+00:00",
        "2010-06-23 16:53:12.833000+00:00",
        "2012-01-17 04:33:41.650000+00:00",
        "2012-12-21 09:55:57.913000+00:00",
        "2013-06-05 02:28:47.587000+00:00",
        "2014-01-08 22:33:04.263000+00:00",
        "2014-07-11 18:34:05.553000+00:00",
        "2015-04-10 07:12:54.037000+00:00",
        "2015-12-03 23:22:24.133000+00:00",
        "2016-06-09 18:03:49.163000+00:00"
      ],
      "semantic_context": "Column 'last_edit_date' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is DATETIME. It contains 223 distinct values. This column has many nulls (77.7%). Sample dates include: 2008-09-16 14:23:32.427000+00:00, 2010-06-23 16:53:12.833000+00:00, 2012-01-17 04:33:41.650000+00:00. Date values range from 2008-09-16 14:23:32.427000+00:00 to 2016-06-09 18:03:49.163000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "last_editor_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 985,
      "null_percentage": 98.5,
      "distinct_count": 15,
      "example_values": [
        "Vlad Romascanu",
        "Fabrizio C.",
        "user166390",
        "jsumners",
        "Mark Bessey",
        "sjbotha",
        "MattK",
        "Matt Hamilton",
        "casperOne",
        "LiraNuna"
      ],
      "top_values": {
        "Vlad Romascanu": 1,
        "Fabrizio C.": 1,
        "user166390": 1,
        "jsumners": 1,
        "Mark Bessey": 1
      },
      "semantic_context": "Column 'last_editor_display_name' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is STRING. It has moderate cardinality with 15 unique values. This column is mostly empty with 98.5% null values. Sample values include: \"Vlad Romascanu\", \"Fabrizio C.\", \"user166390\", \"jsumners\", \"Mark Bessey\". The most common values are: Vlad Romascanu, Fabrizio C., user166390. This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "last_editor_user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 778,
      "null_percentage": 77.8,
      "distinct_count": 214,
      "min_value": "-1.0",
      "max_value": "5698098.0",
      "avg_value": 1119140.207207207,
      "std_dev": 1190889.9730026894,
      "example_values": [
        "-1.0",
        "180562.0",
        "757414.5",
        "1597067.5",
        "5698098.0"
      ],
      "semantic_context": "Column 'last_editor_user_id' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is NUMERIC. It contains 214 distinct values. This column has many nulls (77.8%). Sample numeric values include: -1.0, 180562.0, 757414.5, 1597067.5, 5698098.0. Values range from -1.0 to 5698098.0. The average value is 1119140.21."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "owner_display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 900,
      "null_percentage": 90.0,
      "distinct_count": 99,
      "example_values": [
        "casperOne",
        "Vlad Romascanu",
        "Brian Sadler",
        "user6117020",
        "K. Brian Kelley",
        "Shamik Majumdar",
        "Karna",
        "toolkit",
        "John Saunders",
        "RedGrittyBrick"
      ],
      "top_values": {
        "casperOne": 2,
        "Vlad Romascanu": 1,
        "Brian Sadler": 1,
        "user6117020": 1,
        "K. Brian Kelley": 1
      },
      "semantic_context": "Column 'owner_display_name' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is STRING. It has moderate cardinality with 99 unique values. This column has many nulls (90.0%). Sample values include: \"casperOne\", \"Vlad Romascanu\", \"Brian Sadler\", \"user6117020\", \"K. Brian Kelley\". This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "owner_user_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 19,
      "null_percentage": 1.9,
      "distinct_count": 963,
      "min_value": "-1.0",
      "max_value": "6339395.0",
      "avg_value": 1429705.2966360857,
      "std_dev": 1502363.9661453024,
      "example_values": [
        "-1.0",
        "220147.0",
        "942224.0",
        "2081121.0",
        "6339395.0"
      ],
      "semantic_context": "Column 'owner_user_id' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 963 unique values. About 1.9% of values are null. Sample numeric values include: -1.0, 220147.0, 942224.0, 2081121.0, 6339395.0. Values range from -1.0 to 6339395.0. The average value is 1429705.30."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "parent_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 11,
      "null_percentage": 1.0999999999999999,
      "distinct_count": 988,
      "min_value": "14872.0",
      "max_value": "37753419.0",
      "avg_value": 15817070.45197169,
      "std_dev": 11443713.878252722,
      "example_values": [
        "14872.0",
        "4865783.0",
        "14628356.0",
        "25631473.0",
        "37753419.0"
      ],
      "semantic_context": "Column 'parent_id' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 988 unique values. About 1.1% of values are null. Sample numeric values include: 14872.0, 4865783.0, 14628356.0, 25631473.0, 37753419.0. Values range from 14872.0 to 37753419.0. The average value is 15817070.45."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "post_type_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 3,
      "min_value": "2",
      "max_value": "5",
      "avg_value": 2.03,
      "std_dev": 0.28841494965272374,
      "example_values": [
        "2.0",
        "5.0"
      ],
      "semantic_context": "Column 'post_type_id' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 3 unique values. This column has no null values. Sample numeric values include: 2.0, 5.0. Values range from 2 to 5. The average value is 2.03."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "score",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 20,
      "min_value": "-3",
      "max_value": "38",
      "avg_value": 1.285,
      "std_dev": 2.6123934618658806,
      "example_values": [
        "-3.0",
        "0.0",
        "1.0",
        "2.0",
        "38.0"
      ],
      "semantic_context": "Column 'score' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is NUMERIC. It has moderate cardinality with 20 unique values. This column has no null values. Sample numeric values include: -3.0, 0.0, 1.0, 2.0, 38.0. Values range from -3 to 38. The average value is 1.28. This appears to be a score or rating field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "tags",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1,
      "example_values": [
        ""
      ],
      "top_values": {
        "": 1000
      },
      "semantic_context": "Column 'tags' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is STRING. It contains a single constant value. This column has no null values. Sample values include: \"\". The most common values are: ."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "stackoverflow_posts",
      "column_name": "view_count",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'view_count' from table 'stackoverflow_posts' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "tags",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "1906",
      "max_value": "153625",
      "avg_value": 113246.063,
      "std_dev": 23569.411013781562,
      "example_values": [
        "1906.0",
        "102571.5",
        "115533.5",
        "130251.75",
        "153625.0"
      ],
      "semantic_context": "Column 'id' from table 'tags' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 1906.0, 102571.5, 115533.5, 130251.75, 153625.0. Values range from 1906 to 153625. The average value is 113246.06."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "tags",
      "column_name": "tag_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "example_values": [
        "announcement",
        "rhel.net",
        "merlin-project",
        "accountview",
        "pecl-dio",
        "pecl-ev",
        "bychan",
        "request-monitor",
        "ezswiftextensions",
        "insightedge"
      ],
      "semantic_context": "Column 'tag_name' from table 'tags' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample values include: \"announcement\", \"rhel.net\", \"merlin-project\", \"accountview\", \"pecl-dio\". This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "tags",
      "column_name": "count",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 14,
      "min_value": "0",
      "max_value": "22016",
      "avg_value": 103.336,
      "std_dev": 960.7049042328331,
      "example_values": [
        "0.0",
        "1.0",
        "22016.0"
      ],
      "semantic_context": "Column 'count' from table 'tags' in database 'stackoverflow'. Data type is NUMERIC. It has moderate cardinality with 14 unique values. This column has no null values. Sample numeric values include: 0.0, 1.0, 22016.0. Values range from 0 to 22016. The average value is 103.34. This appears to be a quantity or count field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "tags",
      "column_name": "excerpt_post_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "3936251",
      "max_value": "71786372",
      "avg_value": 35107899.289,
      "std_dev": 14675492.375623727,
      "example_values": [
        "3936251.0",
        "23228373.75",
        "33575115.0",
        "48088646.25",
        "71786372.0"
      ],
      "semantic_context": "Column 'excerpt_post_id' from table 'tags' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 3936251.0, 23228373.75, 33575115.0, 48088646.25, 71786372.0. Values range from 3936251 to 71786372. The average value is 35107899.29."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "tags",
      "column_name": "wiki_post_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "3936250",
      "max_value": "71786371",
      "avg_value": 35107898.286,
      "std_dev": 14675492.374583459,
      "example_values": [
        "3936250.0",
        "23228372.75",
        "33575114.0",
        "48088645.25",
        "71786371.0"
      ],
      "semantic_context": "Column 'wiki_post_id' from table 'tags' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 3936250.0, 23228372.75, 33575114.0, 48088645.25, 71786371.0. Values range from 3936250 to 71786371. The average value is 35107898.29."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "4378",
      "max_value": "5078624",
      "avg_value": 2020387.715,
      "std_dev": 1402694.9987859973,
      "example_values": [
        "4378.0",
        "852325.0",
        "1754486.0",
        "3085776.75",
        "5078624.0"
      ],
      "semantic_context": "Column 'id' from table 'users' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 4378.0, 852325.0, 1754486.0, 3085776.75, 5078624.0. Values range from 4378 to 5078624. The average value is 2020387.72."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "display_name",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 996,
      "example_values": [
        "Sam",
        "Andy",
        "James",
        "xd6_",
        "Mounica Reddy",
        "sophia",
        "Aman",
        "gsitu322",
        "Ant\u00f3nio Regadas",
        "Faizan Ayubi"
      ],
      "semantic_context": "Column 'display_name' from table 'users' in database 'stackoverflow'. Data type is STRING. It appears to be a high-cardinality identifier with 996 unique values. This column has no null values. Sample values include: \"Sam\", \"Andy\", \"James\", \"xd6_\", \"Mounica Reddy\". This appears to be a name field."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "about_me",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 661,
      "null_percentage": 66.10000000000001,
      "distinct_count": 338,
      "example_values": [
        "<p>Software Engineer</p>",
        "<p>I make things and I break things, mostly with code, and mostly on The Internet.</p>",
        "<blockquote>\n  <p><strong>I intend to live forever - so far, so good.</strong></p>\n</blockquote>\n\n<p>&emsp;-Steven Wright</p>\n\n<hr>\n\n<p>Profile image designed and drawn by the one and only <a href=\"https://interpersonal.stackexchange.com/users/4550/avazula\">@Avazula</a>. Full original image <a href=\"https://i.stack.imgur.com/Hi34I.jpg\" rel=\"nofollow noreferrer\">here</a>.</p>",
        "<p>I have been involved in software developing/testing about 15 years.</p>\n<p>I've worked in huge size companies like Huawei, Alcatel, Oracle, and also in 2 startup companies.</p>\n<p>Good at Python based developing, including web developing, tools developing, test automation. So I'm familiar with the related technologies, here are some of them: Django, Celery, Gunicorn, memcached, rabbitmq, load balance, robotframework, selenium, appium...</p>\n<p>Recently also involved in front end developing, like web frontend, mobile app, so get more and more familiar with front end technology, like js, webpack, React,  React native, Redux.</p>\n<p>What I'm most proud of is I have pretty good skills to  analize and solve real problems in software project. Of course Google help me most :)</p>\n<p>Pretty good English reading/writting and OK oral communication.</p>\n<p>In my off-work time, I created a website to teach Chinese student python based developing. Here is the link :  <a href=\"https://www.byhy.net\" rel=\"nofollow noreferrer\">https://www.byhy.net</a></p>\n<p>Currently I'm looking for a part time job or project.  So contact me if you are interested.</p>\n<p>Email: jcyrss@gmail.com</p>",
        "<p>Web-developer, laser optics physicist.</p>",
        "<p>Chill</p>",
        "<p>I am working as a software developer in India.</p>",
        "<p>I Love Programming</p>",
        "<p>I'm a creative Web Developer with a passion for building rich web interfaces using the latest technologies.</p>\n\n<p>My goal is to make the web move forward and be more usable, with simple, clean a user friendly content.</p>",
        "<p>Java Developer from Germany</p>"
      ],
      "semantic_context": "Column 'about_me' from table 'users' in database 'stackoverflow'. Data type is STRING. It contains 338 distinct values. This column has many nulls (66.1%). Sample values include: \"<p>Software Engineer</p>\", \"<p>I make things and I break things, mostly with code, and mostly on The Internet.</p>\", \"<blockquote>\n  <p><strong>I intend to live forever - so far, so good.</strong></p>\n</blockquote>\n\n<p>&emsp;-Steven Wright</p>\n\n<hr>\n\n<p>Profile image designed and drawn by the one and only <a href=\"https://interpersonal.stackexchange.com/users/4550/avazula\">@Avazula</a>. Full original image <a href=\"https://i.stack.imgur.com/Hi34I.jpg\" rel=\"nofollow noreferrer\">here</a>.</p>\", \"<p>I have been involved in software developing/testing about 15 years.</p>\n<p>I've worked in huge size companies like Huawei, Alcatel, Oracle, and also in 2 startup companies.</p>\n<p>Good at Python based developing, including web developing, tools developing, test automation. So I'm familiar with the related technologies, here are some of them: Django, Celery, Gunicorn, memcached, rabbitmq, load balance, robotframework, selenium, appium...</p>\n<p>Recently also involved in front end developing, like web frontend, mobile app, so get more and more familiar with front end technology, like js, webpack, React,  React native, Redux.</p>\n<p>What I'm most proud of is I have pretty good skills to  analize and solve real problems in software project. Of course Google help me most :)</p>\n<p>Pretty good English reading/writting and OK oral communication.</p>\n<p>In my off-work time, I created a website to teach Chinese student python based developing. Here is the link :  <a href=\"https://www.byhy.net\" rel=\"nofollow noreferrer\">https://www.byhy.net</a></p>\n<p>Currently I'm looking for a part time job or project.  So contact me if you are interested.</p>\n<p>Email: jcyrss@gmail.com</p>\", \"<p>Web-developer, laser optics physicist.</p>\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "age",
      "data_type": "object",
      "total_count": 1000,
      "null_count": 1000,
      "null_percentage": 100.0,
      "distinct_count": 0,
      "semantic_context": "Column 'age' from table 'users' in database 'stackoverflow'. Data type is object. This column is mostly empty with 100.0% null values."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2008-09-03 10:07:55.413000+00:00",
      "max_value": "2015-07-03 17:17:58.667000+00:00",
      "example_values": [
        "2008-09-03 10:07:55.413000+00:00",
        "2010-05-31 17:49:01.487000+00:00",
        "2011-05-16 06:02:44.130000+00:00",
        "2011-12-27 12:00:02.633000+00:00",
        "2012-07-10 09:11:42.647000+00:00",
        "2013-01-22 03:19:38.440000+00:00",
        "2013-07-04 16:35:45.937000+00:00",
        "2014-02-06 13:11:58.333000+00:00",
        "2014-10-02 15:10:36.723000+00:00",
        "2015-07-03 17:17:58.667000+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'users' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2008-09-03 10:07:55.413000+00:00, 2010-05-31 17:49:01.487000+00:00, 2011-05-16 06:02:44.130000+00:00. Date values range from 2008-09-03 10:07:55.413000+00:00 to 2015-07-03 17:17:58.667000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "last_access_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "2009-01-29 18:37:07.940000+00:00",
      "max_value": "2022-09-25 05:01:41.703000+00:00",
      "example_values": [
        "2009-01-29 18:37:07.940000+00:00",
        "2014-04-25 11:36:13.467000+00:00",
        "2017-04-07 13:09:18.810000+00:00",
        "2019-10-02 18:37:16.697000+00:00",
        "2021-01-26 17:46:51.980000+00:00",
        "2022-03-02 20:59:38.250000+00:00",
        "2022-08-25 08:04:27.977000+00:00",
        "2022-09-21 00:13:13.180000+00:00",
        "2022-09-23 14:20:57.497000+00:00",
        "2022-09-25 05:01:41.703000+00:00"
      ],
      "semantic_context": "Column 'last_access_date' from table 'users' in database 'stackoverflow'. Data type is DATETIME. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample dates include: 2009-01-29 18:37:07.940000+00:00, 2014-04-25 11:36:13.467000+00:00, 2017-04-07 13:09:18.810000+00:00. Date values range from 2009-01-29 18:37:07.940000+00:00 to 2022-09-25 05:01:41.703000+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "location",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 509,
      "null_percentage": 50.9,
      "distinct_count": 317,
      "example_values": [
        "India",
        "United Kingdom",
        "London, United Kingdom",
        "Canada",
        "San Francisco, CA",
        "Bangalore, India",
        "United States",
        "Brazil",
        "Berlin, Germany",
        "Australia"
      ],
      "semantic_context": "Column 'location' from table 'users' in database 'stackoverflow'. Data type is STRING. It contains 317 distinct values. This column has many nulls (50.9%). Sample values include: \"India\", \"United Kingdom\", \"London, United Kingdom\", \"Canada\", \"San Francisco, CA\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "reputation",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 644,
      "min_value": "5",
      "max_value": "229878",
      "avg_value": 1943.328,
      "std_dev": 11080.250440501793,
      "example_values": [
        "5.0",
        "117.75",
        "361.0",
        "1067.0",
        "229878.0"
      ],
      "semantic_context": "Column 'reputation' from table 'users' in database 'stackoverflow'. Data type is NUMERIC. It contains 644 distinct values. This column has no null values. Sample numeric values include: 5.0, 117.75, 361.0, 1067.0, 229878.0. Values range from 5 to 229878. The average value is 1943.33."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "up_votes",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 285,
      "min_value": "0",
      "max_value": "7331",
      "avg_value": 142.408,
      "std_dev": 472.0567604866189,
      "example_values": [
        "0.0",
        "4.0",
        "19.0",
        "87.0",
        "7331.0"
      ],
      "semantic_context": "Column 'up_votes' from table 'users' in database 'stackoverflow'. Data type is NUMERIC. It contains 285 distinct values. This column has no null values. Sample numeric values include: 0.0, 4.0, 19.0, 87.0, 7331.0. Values range from 0 to 7331. The average value is 142.41."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "down_votes",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 69,
      "min_value": "0",
      "max_value": "3320",
      "avg_value": 14.752,
      "std_dev": 144.11011838945322,
      "example_values": [
        "0.0",
        "2.0",
        "3320.0"
      ],
      "semantic_context": "Column 'down_votes' from table 'users' in database 'stackoverflow'. Data type is NUMERIC. It has moderate cardinality with 69 unique values. This column has no null values. Sample numeric values include: 0.0, 2.0, 3320.0. Values range from 0 to 3320. The average value is 14.75."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "views",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 288,
      "min_value": "13",
      "max_value": "28107",
      "avg_value": 200.217,
      "std_dev": 1160.6894942287593,
      "example_values": [
        "13.0",
        "23.0",
        "42.0",
        "113.25",
        "28107.0"
      ],
      "semantic_context": "Column 'views' from table 'users' in database 'stackoverflow'. Data type is NUMERIC. It contains 288 distinct values. This column has no null values. Sample numeric values include: 13.0, 23.0, 42.0, 113.25, 28107.0. Values range from 13 to 28107. The average value is 200.22."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "profile_image_url",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 541,
      "null_percentage": 54.1,
      "distinct_count": 400,
      "example_values": [
        "https://www.gravatar.com/avatar/?s=128&d=identicon&r=PG&f=1",
        "https://graph.facebook.com/652823926/picture?type=large",
        "https://i.stack.imgur.com/6bbag.jpg?s=128&g=1",
        "https://i.stack.imgur.com/8xm8g.png?s=128&g=1",
        "https://www.gravatar.com/avatar/76accdde31eadc26bbf994643bd15519?s=128&d=identicon&r=PG&f=1",
        "https://graph.facebook.com/1561573517/picture?type=large",
        "https://www.gravatar.com/avatar/67c5f34ac4eab6b6e3bad9144092b38c?s=128&d=identicon&r=PG&f=1",
        "https://i.stack.imgur.com/g5ZY8.jpg?s=128&g=1",
        "https://www.gravatar.com/avatar/c7bf5118f3636470dc4b14e2d6b4c14b?s=128&d=identicon&r=PG&f=1",
        "https://i.stack.imgur.com/kV59z.png?s=128&g=1"
      ],
      "semantic_context": "Column 'profile_image_url' from table 'users' in database 'stackoverflow'. Data type is STRING. It contains 400 distinct values. This column has many nulls (54.1%). Sample values include: \"https://www.gravatar.com/avatar/?s=128&d=identicon&r=PG&f=1\", \"https://graph.facebook.com/652823926/picture?type=large\", \"https://i.stack.imgur.com/6bbag.jpg?s=128&g=1\", \"https://i.stack.imgur.com/8xm8g.png?s=128&g=1\", \"https://www.gravatar.com/avatar/76accdde31eadc26bbf994643bd15519?s=128&d=identicon&r=PG&f=1\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "users",
      "column_name": "website_url",
      "data_type": "STRING",
      "total_count": 1000,
      "null_count": 731,
      "null_percentage": 73.1,
      "distinct_count": 265,
      "example_values": [
        "http://none",
        "http://www.google.com",
        "http://wikipedia.org",
        "http://uk.linkedin.com/in/sathyaram/",
        "https://siejkowski.net",
        "http://sugyan.com.np",
        "http://root-node.appspot.com",
        "http://wasulahewa.com",
        "http://math.stackexchange.com/users/59466/brooks",
        "https://www.linkedin.com/pub/%C3%B6mer-s%C3%B6nmez/72/361/9a4"
      ],
      "semantic_context": "Column 'website_url' from table 'users' in database 'stackoverflow'. Data type is STRING. It contains 265 distinct values. This column has many nulls (73.1%). Sample values include: \"http://none\", \"http://www.google.com\", \"http://wikipedia.org\", \"http://uk.linkedin.com/in/sathyaram/\", \"https://siejkowski.net\"."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "votes",
      "column_name": "id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "1698623",
      "max_value": "252532453",
      "avg_value": 122234504.636,
      "std_dev": 77539112.34195061,
      "example_values": [
        "1698623.0",
        "50843461.0",
        "116517574.0",
        "193776449.0",
        "252532453.0"
      ],
      "semantic_context": "Column 'id' from table 'votes' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 1698623.0, 50843461.0, 116517574.0, 193776449.0, 252532453.0. Values range from 1698623 to 252532453. The average value is 122234504.64."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "votes",
      "column_name": "creation_date",
      "data_type": "DATETIME",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 544,
      "min_value": "2009-02-18 00:00:00+00:00",
      "max_value": "2022-06-07 00:00:00+00:00",
      "example_values": [
        "2009-02-18 00:00:00+00:00",
        "2012-01-11 00:00:00+00:00",
        "2013-03-28 00:00:00+00:00",
        "2014-03-07 00:00:00+00:00",
        "2015-09-17 00:00:00+00:00",
        "2017-04-01 00:00:00+00:00",
        "2018-07-20 00:00:00+00:00",
        "2019-12-26 00:00:00+00:00",
        "2021-06-09 00:00:00+00:00",
        "2022-06-07 00:00:00+00:00"
      ],
      "semantic_context": "Column 'creation_date' from table 'votes' in database 'stackoverflow'. Data type is DATETIME. It contains 544 distinct values. This column has no null values. Sample dates include: 2009-02-18 00:00:00+00:00, 2012-01-11 00:00:00+00:00, 2013-03-28 00:00:00+00:00. Date values range from 2009-02-18 00:00:00+00:00 to 2022-06-07 00:00:00+00:00."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "votes",
      "column_name": "post_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 1000,
      "min_value": "34317",
      "max_value": "72505035",
      "avg_value": 36012000.113,
      "std_dev": 21959091.693014506,
      "example_values": [
        "34317.0",
        "15619837.0",
        "36054604.5",
        "56196958.75",
        "72505035.0"
      ],
      "semantic_context": "Column 'post_id' from table 'votes' in database 'stackoverflow'. Data type is NUMERIC. It appears to be a high-cardinality identifier with 1000 unique values. This column has no null values. Sample numeric values include: 34317.0, 15619837.0, 36054604.5, 56196958.75, 72505035.0. Values range from 34317 to 72505035. The average value is 36012000.11."
    },
    {
      "database_id": "stackoverflow",
      "table_name": "votes",
      "column_name": "vote_type_id",
      "data_type": "NUMERIC",
      "total_count": 1000,
      "null_count": 0,
      "null_percentage": 0.0,
      "distinct_count": 7,
      "min_value": "4",
      "max_value": "15",
      "avg_value": 12.243,
      "std_dev": 2.8435957935397638,
      "example_values": [
        "4.0",
        "9.0",
        "11.0",
        "15.0"
      ],
      "semantic_context": "Column 'vote_type_id' from table 'votes' in database 'stackoverflow'. Data type is NUMERIC. It is a low-cardinality categorical field with 7 unique values. This column has no null values. Sample numeric values include: 4.0, 9.0, 11.0, 15.0. Values range from 4 to 15. The average value is 12.24."
    }
  ]
}